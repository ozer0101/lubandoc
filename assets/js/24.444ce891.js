(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{427:function(t,a,e){"use strict";e.r(a);var s=e(54),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"代码与数据生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码与数据生成"}},[t._v("#")]),t._v(" 代码与数据生成")]),t._v(" "),e("h2",{attrs:{id:"支持的平台、引擎和语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持的平台、引擎和语言"}},[t._v("#")]),t._v(" 支持的平台、引擎和语言")]),t._v(" "),e("ul",[e("li",[t._v("跨平台\n"),e("ul",[e("li",[t._v("Win")]),t._v(" "),e("li",[t._v("Mac")]),t._v(" "),e("li",[t._v("Linux (包括WSL)")])])]),t._v(" "),e("li",[t._v("支持主流的游戏开发语言\n"),e("ul",[e("li",[t._v("c++ (11+)")]),t._v(" "),e("li",[t._v("c# (.net framework 4+. dotnet core 3+)")]),t._v(" "),e("li",[t._v("java (1.6+)")]),t._v(" "),e("li",[t._v("go (1.10+)")]),t._v(" "),e("li",[t._v("lua (5.1+)")]),t._v(" "),e("li",[t._v("js 和 typescript (3.0+)")]),t._v(" "),e("li",[t._v("python (3.0+)")]),t._v(" "),e("li",[t._v("erlang (18+)")]),t._v(" "),e("li",[t._v("rust (1.5+)")]),t._v(" "),e("li",[t._v("其他"),e("strong",[t._v("protobuf")]),t._v("支持语言")])])]),t._v(" "),e("li",[t._v("支持主流的引擎\n"),e("ul",[e("li",[t._v("unity")]),t._v(" "),e("li",[t._v("unreal")]),t._v(" "),e("li",[t._v("cocos2d-x")]),t._v(" "),e("li",[t._v("微信小游戏平台")]),t._v(" "),e("li",[t._v("其他家支持js的小游戏平台")])])]),t._v(" "),e("li",[t._v("支持主流的热更新方案\n"),e("ul",[e("li",[t._v("xlua")]),t._v(" "),e("li",[t._v("tolua")]),t._v(" "),e("li",[t._v("slua")]),t._v(" "),e("li",[t._v("ILRuntime")]),t._v(" "),e("li",[t._v("sluaunreal")]),t._v(" "),e("li",[t._v("puerts")]),t._v(" "),e("li",[t._v("XIL")])])]),t._v(" "),e("li",[t._v("支持主流的开源框架\n"),e("ul",[e("li",[t._v("skynet")]),t._v(" "),e("li",[t._v("ET")]),t._v(" "),e("li",[t._v("GameFramework")]),t._v(" "),e("li",[t._v("xlua-framework")])])])]),t._v(" "),e("h2",{attrs:{id:"可以导出哪些数据格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可以导出哪些数据格式"}},[t._v("#")]),t._v(" 可以导出哪些数据格式")]),t._v(" "),e("ul",[e("li",[t._v("binary 格式。 格式紧凑，加载高效，但基本不具体可读性。推荐只用于正式发布。")]),t._v(" "),e("li",[t._v("json 格式。 可读性佳。支持优雅对齐格式，也支持紧凑格式。 推荐用于服务器端，以及用于客户端开发期。")]),t._v(" "),e("li",[e("strong",[t._v("protobuf")]),t._v(" 格式。适用于熟悉pb的开发者。")]),t._v(" "),e("li",[e("strong",[t._v("msgpack")]),t._v(" 格式。")]),t._v(" "),e("li",[t._v("lua 格式。 可读性佳。 推荐仅用于客户端脚本语言为lua的情形。")]),t._v(" "),e("li",[t._v("xml 格式。")]),t._v(" "),e("li",[t._v("erlang格式。 仅用于 erlang语言。")]),t._v(" "),e("li",[t._v("yaml格式。")]),t._v(" "),e("li",[t._v("其他格式。很容易扩展支持。")])]),t._v(" "),e("p",[e("strong",[t._v("同一种格式，为不同语言生成的数据是完全相同的")]),t._v("。")]),t._v(" "),e("p",[t._v("不同语言支持的格式如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("language")]),t._v(" "),e("th",[t._v("data type")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("c#")]),t._v(" "),e("td",[t._v("binary, json")])]),t._v(" "),e("tr",[e("td",[t._v("java")]),t._v(" "),e("td",[t._v("binary, json")])]),t._v(" "),e("tr",[e("td",[t._v("go")]),t._v(" "),e("td",[t._v("binary, json")])]),t._v(" "),e("tr",[e("td",[t._v("c++")]),t._v(" "),e("td",[t._v("binary")])]),t._v(" "),e("tr",[e("td",[t._v("go")]),t._v(" "),e("td",[t._v("binary, json")])]),t._v(" "),e("tr",[e("td",[t._v("python")]),t._v(" "),e("td",[t._v("json")])]),t._v(" "),e("tr",[e("td",[t._v("typescript")]),t._v(" "),e("td",[t._v("binary, json")])]),t._v(" "),e("tr",[e("td",[t._v("rust")]),t._v(" "),e("td",[t._v("json")])]),t._v(" "),e("tr",[e("td",[t._v("lua")]),t._v(" "),e("td",[t._v("binary, lua")])]),t._v(" "),e("tr",[e("td",[t._v("erlang")]),t._v(" "),e("td",[t._v("erlang")])]),t._v(" "),e("tr",[e("td",[t._v("protobuf")]),t._v(" "),e("td",[t._v("所有")])])])]),t._v(" "),e("h2",{attrs:{id:"luban命令行工具的详细文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#luban命令行工具的详细文档"}},[t._v("#")]),t._v(" luban命令行工具的详细文档？")]),t._v(" "),e("p",[t._v("参见 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban/wiki/Luan.Client%E3%80%81Luban.Server%E5%8F%8ALuban.ClientServer%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"}},[t._v("luban命令行"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"如何生成代码和数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何生成代码和数据"}},[t._v("#")]),t._v(" 如何生成代码和数据")]),t._v(" "),e("p",[t._v("详细文档参见上面的链接。代码生成相关的工具有三个,都在luban_examples/Tools目录下。")]),t._v(" "),e("ul",[e("li",[t._v("Luban.Client。 Luban工具客户端")]),t._v(" "),e("li",[t._v("Luban.Server。 Luban工具服务器端")]),t._v(" "),e("li",[t._v("Luban.ClientServer。 Luban工具前后端一体。")])]),t._v(" "),e("p",[t._v("对于新手简单起见，我们介绍Luban.ClientServer的用法，命令如下：")]),t._v(" "),e("div",{staticClass:"language-bat line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("dotnet %LUBAN_CLIENT_SERVER_DLL% -j cfg -- ^\n -d %ROOT_FILE% ^\n --input_data_dir %INPUT_DATA_DIR% ^\n --output_code_dir %OUTPUT_CODE_DIR%\n --output_data_dir %OUTPUT_DIR% ^\n --gen_types %GEN_TYPE% ^\n -s %GROUP%\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("其中：")]),t._v(" "),e("ul",[e("li",[t._v("LUBAN_CLIENT_SERVER_DLL为 Luban.ClientServer.dll的路径， 可以指向 luban_examples/Tools/Luban.ClientServer/Luban.ClientServer.dll")]),t._v(" "),e("li",[t._v("ROOT_FILE 为根定义文件，指向 MyConfigs/Define/__root__.xml")]),t._v(" "),e("li",[t._v("INPUT_DATA_DIR 为配置数据的根目录，指向 MyConfigs/Datas")]),t._v(" "),e("li",[t._v("OUTPUT_CODE_DIR 为生成代码的目录")]),t._v(" "),e("li",[t._v('GEN_TYPE 为生成类型。 如果你使用unity,想生成c#代码，导出json数据，则使用 "code_cs_unity_json,data_json"')]),t._v(" "),e("li",[t._v("GROUP 为导出分组。客户端则取client，服务器取server，所有则取all")])]),t._v(" "),e("p",[t._v("更多项目类型，参见 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例项目"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"为unity项目生成c-代码并导出json数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为unity项目生成c-代码并导出json数据"}},[t._v("#")]),t._v(" 为unity项目生成c#代码并导出json数据")]),t._v(" "),e("p",[t._v("对于命令行的介绍参见 上面。 你的生成命令大略如下")]),t._v(" "),e("div",{staticClass:"language-bat line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('dotnet %LUBAN_CLIENT_SERVER_DLL% -j cfg -- ^\n -d %ROOT_FILE% ^\n --input_data_dir %INPUT_DATA_DIR% ^\n --output_code_dir %OUTPUT_CODE_DIR%\n --output_data_dir %OUTPUT_DIR% ^\n --gen_types "code_cs_unity_json,data_json" ^\n -s client\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v('也即 --gen_types参数取 "code_cs_unity_json,data_json", -s 参数取 client')]),t._v(" "),e("p",[t._v("具体项目，可参见 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Csharp_Unity_json",target:"_blank",rel:"noopener noreferrer"}},[t._v("Csharp_Unity_Json"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("更多项目类型，参见 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例项目"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"为-unity-puerts-项目生成-ts代码-并生成json数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为-unity-puerts-项目生成-ts代码-并生成json数据"}},[t._v("#")]),t._v(" 为 unity + puerts 项目生成 ts代码，并生成json数据")]),t._v(" "),e("p",[t._v('--gen_types 参数取 "code_typescript_json,data_json"，-s 参数取 client')]),t._v(" "),e("p",[t._v("具体项目，可参见 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/TypeScript_Unity_Puerts_Json",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typescript_Unity_Puerts_Json"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"为-ue4项目-生成c-代码-非蓝图-和binary数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为-ue4项目-生成c-代码-非蓝图-和binary数据"}},[t._v("#")]),t._v(" 为 UE4项目，生成c++代码（非蓝图）和binary数据")]),t._v(" "),e("p",[t._v("基准的参考项目为 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Cpp_Unreal_bin",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cpp_Unreal_bin"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v('由于生成的代码依赖于一些头文件，你需要先从该项目 拷备Source\\Cpp_Unreal\\Private\\bright 到你们项目合适的位置。必须保证bright目录在include目录路径内，如生成的代码中 #include "bright/serialization/ByteBuf.h" 可以找到这个文件。')]),t._v(" "),e("p",[t._v('接着命令行参数取 --gen_types "code_cpp_bin,data_bin"')]),t._v(" "),e("h2",{attrs:{id:"为ue4项目-生成c-代码-蓝图-和binary数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为ue4项目-生成c-代码-蓝图-和binary数据"}},[t._v("#")]),t._v(" 为UE4项目，生成c++代码（蓝图）和binary数据")]),t._v(" "),e("p",[t._v("基准的参考项目为 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Cpp_Unreal_bp_binary",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cpp_Unreal_bp_bin"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v('接着命令行参数取 --gen_types "code_cpp_ue_bp_bin,data_bin"')]),t._v(" "),e("h2",{attrs:{id:"为ue4项目-生成c-代码-蓝图-和json数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为ue4项目-生成c-代码-蓝图-和json数据"}},[t._v("#")]),t._v(" 为UE4项目，生成c++代码（蓝图）和json数据")]),t._v(" "),e("p",[t._v("基准的参考项目为 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Cpp_Unreal_bp_json",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cpp_Unreal_bp_json"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v('接着命令行参数取 --gen_types "code_cpp_ue_bp_json,data_json"')]),t._v(" "),e("h2",{attrs:{id:"其他类型项目类型-如何生成代码和数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他类型项目类型-如何生成代码和数据"}},[t._v("#")]),t._v(" 其他类型项目类型，如何生成代码和数据")]),t._v(" "),e("p",[t._v("不同项目之间，仅仅是 --gen_types 不一样， 请从"),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例项目"),e("OutboundLink")],1),t._v("中找到与你项目匹配的项目，参考相应目录下的 gen_code.bat 即可。")]),t._v(" "),e("h2",{attrs:{id:"生成protobuf的定义文件及protobuf数据格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成protobuf的定义文件及protobuf数据格式"}},[t._v("#")]),t._v(" 生成protobuf的定义文件及protobuf数据格式")]),t._v(" "),e("p",[t._v("目前支持proto2和proto3语法")]),t._v(" "),e("h3",{attrs:{id:"protobuf2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protobuf2"}},[t._v("#")]),t._v(" protobuf2")]),t._v(" "),e("p",[t._v("只支持bin格式导出。")]),t._v(" "),e("p",[t._v("取 --gen_types code_protobuf2,data_protobuf_bin 即可，参见 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Protobuf2_bin",target:"_blank",rel:"noopener noreferrer"}},[t._v("Protobuf2_bin"),e("OutboundLink")],1),t._v("。 每个导出的数据文件对应Table类序列化后的内容，加载即可，以item.TbItem表为例。")]),t._v(" "),e("div",{staticClass:"language-c# line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('var tbItem = ItemTbItem.Parser.ParseFrom(File.OpenRead("pb_datas/item_tbitem.bytes"));\n\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h3",{attrs:{id:"protobuf3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protobuf3"}},[t._v("#")]),t._v(" protobuf3")]),t._v(" "),e("p",[t._v("既支持bin格式，也支持json格式导出。")]),t._v(" "),e("ul",[e("li",[t._v("binary格式导出。 --gen_types code_protobuf3,data_protobuf_bin")]),t._v(" "),e("li",[t._v("json格式导出。 --gen_types code_protobuf3,data_protobuf_json")])]),t._v(" "),e("h2",{attrs:{id:"生成msgpack的数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成msgpack的数据"}},[t._v("#")]),t._v(" 生成msgpack的数据")]),t._v(" "),e("p",[t._v("取 --gen_types data_msgpack 即可。 参见 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/MsgPack_bin",target:"_blank",rel:"noopener noreferrer"}},[t._v("MsgPack_bin"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"生成flatbuffers的定义文件及flatbuffers数据格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成flatbuffers的定义文件及flatbuffers数据格式"}},[t._v("#")]),t._v(" 生成flatbuffers的定义文件及flatbuffers数据格式")]),t._v(" "),e("p",[t._v("取 --gen_types code_flatbuffers,data_flatbuffers_json 即可，参见 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Flatbuffers_json",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flatbuffers_json"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("由于binary格式过于复杂，现在只支持导出json格式，但是使用者可以使用flatc工具将数据转成binary！特地生成了 convert_json_2_binary.bat\n和convert_json_2_binary.sh这两个批处理文件，方便自动一键转换。")]),t._v(" "),e("p",[t._v("目前由于flat_buffers不支持容器的元素类型为union，因此略微有一些兼容性问题，但在项目中可以通过使用一个bean来包含这个union字段来迂回解决。")]),t._v(" "),e("p",[t._v("data_flatbuffers_json 和 data_json的输出格式有一些区别")]),t._v(" "),e("ul",[e("li",[t._v("data_flatbuffers_json 顶层为 包含data_list字段的 table,而 data_json顶层直接对应 data_list的内容")]),t._v(" "),e("li",[t._v('flatbuffers不支持本地化。 所以它的text类型导出格式为string，而data_json为 {"key":"xxx", "text":"text}')]),t._v(" "),e("li",[t._v("data_flatbuffers_json序列化bean类型字段时，如果遇到多态类型，会多序列化一个string类型的xxx_type字段，用于指示union的类型。也正是如此 data_flatbuffers_json不支持容器中出现union")]),t._v(" "),e("li",[t._v("data_flatbuffers_json 输出的数据中，如果包含容器类型数据，并且元素类型为union，则无法被正确解析。")])]),t._v(" "),e("h2",{attrs:{id:"只生成代码或者数据吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#只生成代码或者数据吗"}},[t._v("#")]),t._v(" 只生成代码或者数据吗")]),t._v(" "),e("p",[t._v("以 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Csharp_Unity_json",target:"_blank",rel:"noopener noreferrer"}},[t._v("Csharp_Unity_Json"),e("OutboundLink")],1),t._v(" 为例。")]),t._v(" "),e("ul",[e("li",[t._v("--gen_types code_cs_unity_json 则只生成代码")]),t._v(" "),e("li",[t._v("--gen_types data_json 则只生成数据")])]),t._v(" "),e("h2",{attrs:{id:"配置中有些string字段是资源地址-统一导出这些资源地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置中有些string字段是资源地址-统一导出这些资源地址"}},[t._v("#")]),t._v(" 配置中有些string字段是资源地址，统一导出这些资源地址")]),t._v(" "),e("p",[t._v("首先定义类型时，添加上'#res=xxx' 这种标签，xxx可以取任意值。如下所示。")]),t._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("TestRes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("icon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("string#res=item"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("取 '--gen_types data_resources'，并且新增参数'--output:data:resource_list_file resources.txt'。 运行即可将所有带res标签的数据导出到resources.text文件中。")]),t._v(" "),e("p",[t._v('假设配置表中包含icon="/ui/icon1.jpg" 和 icon="/ui/icon1/jpg" 这两个数据，则导出的资源列表内容为')]),t._v(" "),e("div",{staticClass:"language-txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-txt"}},[e("code",[t._v("item,/ui/icon1.jpg\nitem,/ui/icon2.jpg\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("参见示例 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/GenerateDatas",target:"_blank",rel:"noopener noreferrer"}},[t._v("GenerateDatas"),e("OutboundLink")],1),t._v("/gen_resource_list.bat 文件。")]),t._v(" "),e("h2",{attrs:{id:"生成的c-代码中-vector的类型由system-numerics-vector-2-3-4-改成-unityengine-vector-2-3-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成的c-代码中-vector的类型由system-numerics-vector-2-3-4-改成-unityengine-vector-2-3-4"}},[t._v("#")]),t._v(" 生成的c#代码中,vector的类型由System.Numerics.Vector{2,3,4}，改成 UnityEngine.Vector{2,3,4}")]),t._v(" "),e("p",[t._v("命令行参数中添加  --use_unity_vector 选项即可。 参见示例 "),e("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Csharp_Unity_bin_use_UnityEngine_Vector",target:"_blank",rel:"noopener noreferrer"}},[t._v("Csharp_Unity_bin_use_UnityEngine_Vector"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"自定义代码命名风格"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义代码命名风格"}},[t._v("#")]),t._v(" 自定义代码命名风格")]),t._v(" "),e("p",[t._v("可以。 添加选项 --naming_convention_bean_member none 即可。使生成的代码中的字段名与定义名相同。")]),t._v(" "),e("p",[t._v("支持以下代码命名风格：")]),t._v(" "),e("ul",[e("li",[t._v("none。 无命名风格，生成的字段名和定义的名称一样")]),t._v(" "),e("li",[t._v("language_recommend。即根据生成的语言不同，自动设置该语言推荐的风格。比如c#为PascalCase,java为 camelCase,python为under_scores。")]),t._v(" "),e("li",[t._v("camelCalse。 即驼峰形式，生成 xxxYyyy这种风格的字段名。")]),t._v(" "),e("li",[t._v("PascalCase。 即Pascal形式。生成XxxYyy这种风格的字段名。")]),t._v(" "),e("li",[t._v("under_scores。 下划线形式。即生成xxx_yyy这种风格的字段名。")])]),t._v(" "),e("p",[t._v("默认使用 language_recommend。")]),t._v(" "),e("h2",{attrs:{id:"gen-types中-code-cs-json和code-cs-unity-json-有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gen-types中-code-cs-json和code-cs-unity-json-有什么区别"}},[t._v("#")]),t._v(" gen_types中 code_cs_json和code_cs_unity_json 有什么区别")]),t._v(" "),e("p",[t._v("code_cs_json生成代码中使用了 System.Text.Json库，这个只有.net core 3以后的版本才有，unity目前的.net版本不支持，所以这是给基于.net coer的服务器项目使用的。\ncode_cs_unity_json使用了第三方的SimpleJson库，兼容unity的.net版本，给unity生成加载json数据的c#代码时，可以（当前也只有这个选择）选择这个。")]),t._v(" "),e("h2",{attrs:{id:"命令行参数中的-j-cfg-的含义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令行参数中的-j-cfg-的含义"}},[t._v("#")]),t._v(" 命令行参数中的 -j cfg 的含义")]),t._v(" "),e("p",[t._v("-j选项相应的长选项名为--job，表示生成类型。由于luban目前支持消息(proto)、数据库(db)、配置(cfg) 三种类型的生成任务，这些生成任务的功能完全不同，参数\n相差较大，需要用-j 来区分不同的生成任务。")]),t._v(" "),e("h2",{attrs:{id:"生成的配置代码顶层命名空间是cfg-可以不加这个命名空间或者使用其他值吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成的配置代码顶层命名空间是cfg-可以不加这个命名空间或者使用其他值吗"}},[t._v("#")]),t._v(" 生成的配置代码顶层命名空间是cfg，可以不加这个命名空间或者使用其他值吗？")]),t._v(" "),e("p",[t._v("可以。 __root__.xml中 topmodule 配置项对应的值即为顶层命名空间，可以调整为空或者为其他值。")]),t._v(" "),e("h2",{attrs:{id:"生成的数据文件的后缀"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成的数据文件的后缀"}},[t._v("#")]),t._v(" 生成的数据文件的后缀")]),t._v(" "),e("p",[t._v("数据格式的默认文件后缀如下")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("data")]),t._v(" "),e("th",[t._v("extension")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("data_bin")]),t._v(" "),e("td",[t._v("bin")])]),t._v(" "),e("tr",[e("td",[t._v("data_json")]),t._v(" "),e("td",[t._v("json")])]),t._v(" "),e("tr",[e("td",[t._v("data_json2")]),t._v(" "),e("td",[t._v("json")])]),t._v(" "),e("tr",[e("td",[t._v("data_lua")]),t._v(" "),e("td",[t._v("lua")])]),t._v(" "),e("tr",[e("td",[t._v("data_xml")]),t._v(" "),e("td",[t._v("xml")])]),t._v(" "),e("tr",[e("td",[t._v("data_yaml")]),t._v(" "),e("td",[t._v("yml")])]),t._v(" "),e("tr",[e("td",[t._v("data_protobuf")]),t._v(" "),e("td",[t._v("bp")])])])]),t._v(" "),e("p",[t._v('可以通过命令行选项"--data_file_extension xxx"手动指定输出文件的后缀。')]),t._v(" "),e("h2",{attrs:{id:"enum、bean-类型代码导出规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#enum、bean-类型代码导出规则"}},[t._v("#")]),t._v(" enum、bean 类型代码导出规则")]),t._v(" "),e("p",[t._v("并非所有定义的类型都会生成代码，必须满足以下规则之一：")]),t._v(" "),e("ul",[e("li",[t._v("被导出的table直接或者间接引用的类型")]),t._v(" "),e("li",[t._v("root.xml 的 service的 ref项指定的类型。如下图，即使没有任何表直接或者间接引用到test.DemoEnum和test.DemoBean类型，它们也会在server目标时生成代码。")])]),t._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("service")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("managers")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Tables"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ref")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test.DemoEnum"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ref")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test.DemoBean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h2",{attrs:{id:"不同导出格式-性能测试结果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不同导出格式-性能测试结果"}},[t._v("#")]),t._v(" 不同导出格式 性能测试结果")]),t._v(" "),e("p",[t._v("硬件：")]),t._v(" "),e("p",[t._v("Intel(R) Core i7-10700 @ 2.9G 16核")]),t._v(" "),e("p",[t._v("32G 内存")]),t._v(" "),e("p",[t._v("数据集")]),t._v(" "),e("p",[t._v("500个excel表\n每个表有1000行比较大的记录\n每个表文件大小 132k")]),t._v(" "),e("p",[t._v("测试结果：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("格式")]),t._v(" "),e("th",[t._v("首次耗时")]),t._v(" "),e("th",[t._v("累积耗时")]),t._v(" "),e("th",[t._v("单个输出文件大小")]),t._v(" "),e("th",[t._v("输出文件总大小")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("bin")]),t._v(" "),e("td",[t._v("15.652 s")]),t._v(" "),e("td",[t._v("797 ms")]),t._v(" "),e("td",[t._v("164 K")]),t._v(" "),e("td",[t._v("59.5 M")])]),t._v(" "),e("tr",[e("td",[t._v("json")]),t._v(" "),e("td",[t._v("17.746 s")]),t._v(" "),e("td",[t._v("796 ms")]),t._v(" "),e("td",[t._v("1.11 M")]),t._v(" "),e("td",[t._v("555 M")])]),t._v(" "),e("tr",[e("td",[t._v("lua")]),t._v(" "),e("td",[t._v("17.323 s")]),t._v(" "),e("td",[t._v("739 ms")]),t._v(" "),e("td",[t._v("433 K")]),t._v(" "),e("td",[t._v("212 M")])])])]),t._v(" "),e("h2",{attrs:{id:"binary与json格式加载性能对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#binary与json格式加载性能对比"}},[t._v("#")]),t._v(" binary与json格式加载性能对比？")]),t._v(" "),e("p",[t._v("以luban_examples的DesignerConfigs配置为测试数据，以Projects下的csharp_Unity_bin和csharp_Unity_json项目为测试对比，\n加载100遍cfg.Table。")]),t._v(" "),e("p",[t._v("binary格式耗时28ms，json格式耗时112ms。")]),t._v(" "),e("p",[t._v("加载性能大约为 4:1。")])])}),[],!1,null,null,null);a.default=n.exports}}]);