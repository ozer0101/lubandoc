(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{430:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"本地化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地化"}},[t._v("#")]),t._v(" 本地化")]),t._v(" "),a("p",[t._v("支持多种本地化机制，分别处理不同的场合，它们可以同时使用。")]),t._v(" "),a("h2",{attrs:{id:"静态文本值本地化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态文本值本地化"}},[t._v("#")]),t._v(" 静态文本值本地化")]),t._v(" "),a("p",[t._v("对于需要本地化的文本值，在配置导出时既已完成本地化的转化，适用于不同地区打不同包或者不同配置的情形。通过以下几个方面来实现静态文本值本地化：")]),t._v(" "),a("ul",[a("li",[t._v("使用 text 类型标识需要本地化的字符串。 text类型由两个字段构成, key和value。")]),t._v(" "),a("li",[t._v("使用本地化映射表提供text到其他语言的映射")]),t._v(" "),a("li",[t._v("未完成本地化的text单独输出到一个文件，方便得知哪些文本值未完成本地化映射")])]),t._v(" "),a("h3",{attrs:{id:"需要本地化的示例表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要本地化的示例表"}},[t._v("#")]),t._v(" 需要本地化的示例表")]),t._v(" "),a("table",{attrs:{border:"1"}},[a("tr",{attrs:{align:"center"}},[a("td",[t._v("##var")]),t._v(" "),a("td",[t._v("id")]),t._v(" "),a("td",{attrs:{colspan:"2"}},[t._v("name")]),t._v(" "),a("td",[t._v("desc")]),t._v(" "),a("td",[t._v("count")])]),t._v(" "),a("tr",{attrs:{align:"center"}},[a("td",[t._v("##type")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",{attrs:{colspan:"2"}},[t._v("text")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("int")])]),t._v(" "),a("tr",{attrs:{align:"center"}},[a("td"),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("/demo/key1")]),a("td",[t._v("苹果")]),t._v(" "),a("td",[t._v("这是一个苹果")]),t._v(" "),a("td",[t._v("100")])]),t._v(" "),a("tr",{attrs:{align:"center"}},[a("td"),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("/demo/key2")]),a("td",[t._v("香蕉")]),t._v(" "),a("td",[t._v("这是香蕉")]),t._v(" "),a("td",[t._v("100")])]),t._v(" "),a("tr",{attrs:{align:"center"}},[a("td"),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("/demo/key3")]),a("td",[t._v("西瓜")]),t._v(" "),a("td",[t._v("这是西瓜")]),t._v(" "),a("td",[t._v("100")])])]),t._v(" "),a("h3",{attrs:{id:"文本值映射文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本值映射文件"}},[t._v("#")]),t._v(" 文本值映射文件")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("##var")]),t._v(" "),a("th",[t._v("key")]),t._v(" "),a("th",[t._v("origin_text")]),t._v(" "),a("th",[t._v("text_tw")]),t._v(" "),a("th",[t._v("text_en")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("##type")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("string")])]),t._v(" "),a("tr",[a("td",[t._v("##")]),t._v(" "),a("td",[t._v("本地化key")]),t._v(" "),a("td",[t._v("原始值")]),t._v(" "),a("td",[t._v("繁体值")]),t._v(" "),a("td",[t._v("英文")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("/demo/key1")]),t._v(" "),a("td",[t._v("苹果")]),t._v(" "),a("td",[t._v("苹果")]),t._v(" "),a("td",[t._v("apple")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("/demo/key2")]),t._v(" "),a("td",[t._v("香蕉")]),t._v(" "),a("td",[t._v("香蕉")]),t._v(" "),a("td",[t._v("banana")])])])]),t._v(" "),a("h2",{attrs:{id:"luban-client-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#luban-client-命令"}},[t._v("#")]),t._v(" Luban.Client 命令")]),t._v(" "),a("p",[t._v("有三个参数跟静态文本值本地化相关")]),t._v(" "),a("ul",[a("li",[t._v("l10n:input_text_files 本地化映射文件")]),t._v(" "),a("li",[t._v("l10n:text_field_name 映射的目标字段名。因为有可能多个语言都在同一个映射表内(如text_tw和text_en)")]),t._v(" "),a("li",[t._v("l10n:output_not_translated_text_file 未完成文本值本地化映射的text")])]),t._v(" "),a("p",[t._v("以下为一个示例脚本")]),t._v(" "),a("div",{staticClass:"language-bat line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("%GEN_CLIENT% -h %LUBAN_SERVER_IP% -j cfg --^\n -d %DEFINE_FILE%^\n --input_data_dir %CONF_ROOT%\\Datas ^\n --output_code_dir Gen ^\n --output_data_dir config_data ^\n --gen_types data_json ^\n -s all  ^\n--input_l10n_text_files l10n/cn/TextTable_CN.xlsx ^\n--l10n_text_field_name text_en ^\n--output_l10n_not_translated_text_file NotLocalized_CN.txt\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"示例输出结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例输出结果"}},[t._v("#")]),t._v(" 示例输出结果")]),t._v(" "),a("p",[t._v("导出json文件内容为")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/demo/key1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是一个苹果"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"count"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/demo/key2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是香蕉"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"count"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/demo/key3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"西瓜"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是西瓜"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"count"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br")])]),a("p",[t._v("示例中 /demo/key3 在本地化映射表中未提供，因为output_l10n_not_translated_text_file 指定的未映射本地化文本值列表内容为。")]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/demo/key3|这是西瓜\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"文本值动态本地化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本值动态本地化"}},[t._v("#")]),t._v(" 文本值动态本地化")]),t._v(" "),a("p",[t._v("运行时动态切换text类型字段到目标语言，程序不需要根据id去本地化映射表里查询，简化了使用。注意，目前只有bean中text类型字段才支持，像list,text之类的暂未支持。通过以下几个方面支持文本值动态本地化：")]),t._v(" "),a("ul",[a("li",[t._v("标识字段为text类型")]),t._v(" "),a("li",[t._v("提供 (string key, string origin_value) => (string target_value) 的本地化映射函数")]),t._v(" "),a("li",[t._v("运行时调用 cfg.Tables.TranslateText函数，一键切换配置中所有text类型值到目标语言")]),t._v(" "),a("li",[t._v("为text类型字段额外生成了string {field}_l10n_text字段，运行时可以拿着这个字段去本地化映射表查询它在其他语言的文本值")])]),t._v(" "),a("p",[t._v("本地化映射函数实现比较简单，核心在于如何制作文本值本地化映射配置？使用者既可以使用自定义本地化映射表，可以使用普通的 luban配置表来提供 文本值映射配置，如下图:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("##var")]),t._v(" "),a("th",[t._v("key")]),t._v(" "),a("th",[t._v("origin_text")]),t._v(" "),a("th",[t._v("text_tw")]),t._v(" "),a("th",[t._v("text_en")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("##type")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("string")])]),t._v(" "),a("tr",[a("td",[t._v("##")]),t._v(" "),a("td",[t._v("本地化key")]),t._v(" "),a("td",[t._v("原始值")]),t._v(" "),a("td",[t._v("繁体值")]),t._v(" "),a("td",[t._v("英文")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("/demo/key1")]),t._v(" "),a("td",[t._v("苹果")]),t._v(" "),a("td",[t._v("苹果")]),t._v(" "),a("td",[t._v("apple")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("/demo/key2")]),t._v(" "),a("td",[t._v("香蕉")]),t._v(" "),a("td",[t._v("香蕉")]),t._v(" "),a("td",[t._v("banana")])])])]),t._v(" "),a("p",[t._v("通过提供不同的映射函数，来实现到不同目标语言的切换，例如")]),t._v(" "),a("div",{staticClass:"language-c# line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n/// 用于切换到en\nstring TextMapper_en(string key, string originText) \n{\n    return tables.TbTextMapper.GetOrDefault(key)?.TextEn ?? originText;\n}\n\n/// 用于切换到tw\nstring TextMapper_tw(string key, string originText) \n{\n    return tables.TbTextMapper.GetOrDefault(key)?.TextTw ?? originText;\n}\n\n\nvoid SwitchLanguages(cfg.Tables tables)\n{\n  // 切换所有text字段到 en\n   tables.TranslateText(TextMapper_en);\n\n  // 切换所有text字段到 tw\n   tables.TranslateText(TextMapper_tw);\n\n\n  // 当前语言为tw的情况下，不使用切换，\n  // 获得道具1001的desc字段对应的英语文本\n  var desc_en = table.TbTextMapper.Get(tables.TbItem.Get(1001).Desc_l10n_key).TextEn;\n}\n\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br")])]),a("h2",{attrs:{id:"多分支-数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多分支-数据"}},[t._v("#")]),t._v(" 多分支 数据")]),t._v(" "),a("p",[t._v("支持 main + patches的数据模式。在主版本数据基础上，提供一个补丁数据，合并处理后生成最终目标数据。适合制作海外有细节配置不同的多地区配置，不需要\n复制出主版本数据，接着在上面修改出最终数据。极大优化了制作本地化配置的工作流。")]),t._v(" "),a("h2",{attrs:{id:"时间本地化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间本地化"}},[t._v("#")]),t._v(" 时间本地化")]),t._v(" "),a("p",[t._v("datetime类型数据在指定了本地化时区后，会根据目标时区，生成相应时刻的UTC时间，方便程序使用.")]),t._v(" "),a("p",[t._v("通过Luban.Client的参数来指定时区：")]),t._v(" "),a("p",[t._v("-t,--l10n_timezone {timezone}")]),t._v(" "),a("p",[t._v('该时区为linux或win下的时区名，例如: -t "Asia/Shanghai" 或者 -t "China Standard Time"  指定目标时区为 亚洲上海（也即北京时间）')])])}),[],!1,null,null,null);s.default=e.exports}}]);