(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var a,o,l=e[0],s=e[1],c=e[2],p=0,d=[];p<l.length;p++)o=l[p],Object.prototype.hasOwnProperty.call(r,o)&&r[o]&&d.push(r[o][0]),r[o]=0;for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&(n[a]=s[a]);for(u&&u(e);d.length;)d.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],a=!0,l=1;l<t.length;l++){var s=t[l];0!==r[s]&&(a=!1)}a&&(i.splice(e--,1),n=o(o.s=t[0]))}return n}var a={},r={1:0},i=[];function o(e){if(a[e])return a[e].exports;var t=a[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(n){var e=[],t=r[n];if(0!==t)if(t)e.push(t[2]);else{var a=new Promise((function(e,a){t=r[n]=[e,a]}));e.push(t[2]=a);var i,l=document.createElement("script");l.charset="utf-8",l.timeout=120,o.nc&&l.setAttribute("nonce",o.nc),l.src=function(n){return o.p+"assets/js/"+({}[n]||n)+"."+{2:"e9b74d21",3:"52c46d17",4:"afc2c684",5:"e7d128b2",6:"3f529888",7:"9b79da85",8:"f7463651",9:"9df6d74b",10:"833d4cb3",11:"f69ee773",12:"2f951782",13:"a471fa8d",14:"32dbe354",15:"8300389b",16:"a99f9bba",17:"3f3b5252",18:"a96ff7c2",19:"35370474",20:"124f4f6c",21:"d44d88a7",22:"4cf1f47c",23:"4d249f52",24:"d6d254db",25:"857ad9a1",26:"aaf272bf",27:"655bd600",28:"30354203",29:"a52ded49",30:"2ccec016",31:"66bf5ef0",32:"23973e62",33:"bb63393c",34:"aeee1c9f",35:"a081974a",36:"f403e84c",37:"6e5bd6b9",38:"e6645769"}[n]+".js"}(n);var s=new Error;i=function(e){l.onerror=l.onload=null,clearTimeout(c);var t=r[n];if(0!==t){if(t){var a=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;s.message="Loading chunk "+n+" failed.\n("+a+": "+i+")",s.name="ChunkLoadError",s.type=a,s.request=i,t[1](s)}r[n]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:l})}),12e4);l.onerror=l.onload=i,document.head.appendChild(l)}return Promise.all(e)},o.m=n,o.c=a,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)o.d(t,a,function(e){return n[e]}.bind(null,a));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/lubandoc/",o.oe=function(n){throw console.error(n),n};var l=window.webpackJsonp=window.webpackJsonp||[],s=l.push.bind(l);l.push=e,l=l.slice();for(var c=0;c<l.length;c++)e(l[c]);var u=s;i.push([207,0]),t()}([function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e,t){var a=t(0),r=t(32).f,i=t(26),o=t(17),l=t(90),s=t(131),c=t(121);n.exports=function(n,e){var t,u,p,d,m,f=n.target,v=n.global,y=n.stat;if(t=v?a:y?a[f]||l(f,{}):(a[f]||{}).prototype)for(u in e){if(d=e[u],p=n.noTargetGet?(m=r(t,u))&&m.value:t[u],!c(v?u:f+(y?".":"#")+u,n.forced)&&void 0!==p){if(typeof d==typeof p)continue;s(d,p)}(n.sham||p&&p.sham)&&i(d,"sham",!0),o(t,u,d,n)}}},function(n,e){var t=Function.prototype,a=t.bind,r=t.call,i=a&&a.bind(r);n.exports=a?function(n){return n&&i(r,n)}:function(n){return n&&function(){return r.apply(n,arguments)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var a=t(0),r=t(60),i=t(11),o=t(61),l=t(91),s=t(126),c=r("wks"),u=a.Symbol,p=u&&u.for,d=s?u:u&&u.withoutSetter||o;n.exports=function(n){if(!i(c,n)||!l&&"string"!=typeof c[n]){var e="Symbol."+n;l&&i(u,n)?c[n]=u[n]:c[n]=s&&p?p(e):d(e)}return c[n]}},function(n,e){n.exports=function(n){return"function"==typeof n}},function(n,e,t){var a=t(99),r=t(17),i=t(223);a||r(Object.prototype,"toString",i,{unsafe:!0})},function(n,e,t){var a=t(5);n.exports=function(n){return"object"==typeof n?null!==n:a(n)}},function(n,e,t){var a=t(0),r=t(7),i=a.String,o=a.TypeError;n.exports=function(n){if(r(n))return n;throw o(i(n)+" is not an object")}},function(n,e,t){var a=t(3);n.exports=!a((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){var t=Function.prototype.call;n.exports=t.bind?t.bind(t):function(){return t.apply(t,arguments)}},function(n,e,t){var a=t(2),r=t(13),i=a({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return i(r(n),e)}},function(n,e,t){var a=t(0),r=t(9),i=t(127),o=t(8),l=t(64),s=a.TypeError,c=Object.defineProperty;e.f=r?c:function(n,e,t){if(o(n),e=l(e),o(t),i)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw s("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var a=t(0),r=t(30),i=a.Object;n.exports=function(n){return i(r(n))}},function(n,e,t){var a=t(0),r=t(5),i=function(n){return r(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?i(a[n]):a[n]&&a[n][e]}},function(n,e,t){var a=t(45),r=t(30);n.exports=function(n){return a(r(n))}},function(n,e,t){"use strict";var a=t(144).charAt,r=t(21),i=t(31),o=t(130),l=i.set,s=i.getterFor("String Iterator");o(String,"String",(function(n){l(this,{type:"String Iterator",string:r(n),index:0})}),(function(){var n,e=s(this),t=e.string,r=e.index;return r>=t.length?{value:void 0,done:!0}:(n=a(t,r),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){var a=t(0),r=t(5),i=t(11),o=t(26),l=t(90),s=t(68),c=t(31),u=t(85).CONFIGURABLE,p=c.get,d=c.enforce,m=String(String).split("String");(n.exports=function(n,e,t,s){var c,p=!!s&&!!s.unsafe,f=!!s&&!!s.enumerable,v=!!s&&!!s.noTargetGet,y=s&&void 0!==s.name?s.name:e;r(t)&&("Symbol("===String(y).slice(0,7)&&(y="["+String(y).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!i(t,"name")||u&&t.name!==y)&&o(t,"name",y),(c=d(t)).source||(c.source=m.join("string"==typeof y?y:""))),n!==a?(p?!v&&n[e]&&(f=!0):delete n[e],f?n[e]=t:o(n,e,t)):f?n[e]=t:l(e,t)})(Function.prototype,"toString",(function(){return r(this)&&p(this).source||s(this)}))},function(n,e,t){var a=t(0),r=t(145),i=t(146),o=t(120),l=t(26),s=t(4),c=s("iterator"),u=s("toStringTag"),p=o.values,d=function(n,e){if(n){if(n[c]!==p)try{l(n,c,p)}catch(e){n[c]=p}if(n[u]||l(n,u,e),r[e])for(var t in o)if(n[t]!==o[t])try{l(n,t,o[t])}catch(e){n[t]=o[t]}}};for(var m in r)d(a[m]&&a[m].prototype,m);d(i,"DOMTokenList")},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var a=t(158),r="object"==typeof self&&self&&self.Object===Object&&self,i=a||r||Function("return this")();n.exports=i},function(n,e,t){var a=t(0),r=t(59),i=a.String;n.exports=function(n){if("Symbol"===r(n))throw TypeError("Cannot convert a Symbol value to a string");return i(n)}},function(n,e,t){var a=t(84);n.exports=function(n){return a(n.length)}},function(n,e,t){var a=t(2),r=a({}.toString),i=a("".slice);n.exports=function(n){return i(r(n),8,-1)}},function(n,e){n.exports=!1},function(n,e,t){var a,r=t(8),i=t(197),o=t(95),l=t(47),s=t(129),c=t(63),u=t(67),p=u("IE_PROTO"),d=function(){},m=function(n){return"<script>"+n+"<\/script>"},f=function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e},v=function(){try{a=new ActiveXObject("htmlfile")}catch(n){}var n,e;v="undefined"!=typeof document?document.domain&&a?f(a):((e=c("iframe")).style.display="none",s.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F):f(a);for(var t=o.length;t--;)delete v.prototype[o[t]];return v()};l[p]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(d.prototype=r(n),t=new d,d.prototype=null,t[p]=n):t=v(),void 0===e?t:i(t,e)}},function(n,e,t){var a=t(9),r=t(12),i=t(40);n.exports=a?function(n,e,t){return r.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var a=t(0),r=t(5),i=t(65),o=a.TypeError;n.exports=function(n){if(r(n))return n;throw o(i(n)+" is not a function")}},function(n,e,t){var a=t(255),r=t(258);n.exports=function(n,e){var t=r(n,e);return a(t)?t:void 0}},function(n,e,t){"use strict";var a=t(1),r=t(88);a({target:"RegExp",proto:!0,forced:/./.exec!==r},{exec:r})},function(n,e,t){var a=t(0).TypeError;n.exports=function(n){if(null==n)throw a("Can't call method on "+n);return n}},function(n,e,t){var a,r,i,o=t(210),l=t(0),s=t(2),c=t(7),u=t(26),p=t(11),d=t(89),m=t(67),f=t(47),v=l.TypeError,y=l.WeakMap;if(o||d.state){var b=d.state||(d.state=new y),h=s(b.get),x=s(b.has),_=s(b.set);a=function(n,e){if(x(b,n))throw new v("Object already initialized");return e.facade=n,_(b,n,e),e},r=function(n){return h(b,n)||{}},i=function(n){return x(b,n)}}else{var g=m("state");f[g]=!0,a=function(n,e){if(p(n,g))throw new v("Object already initialized");return e.facade=n,u(n,g,e),e},r=function(n){return p(n,g)?n[g]:{}},i=function(n){return p(n,g)}}n.exports={set:a,get:r,has:i,enforce:function(n){return i(n)?r(n):a(n,{})},getterFor:function(n){return function(e){var t;if(!c(e)||(t=r(e)).type!==n)throw v("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var a=t(9),r=t(10),i=t(96),o=t(40),l=t(15),s=t(64),c=t(11),u=t(127),p=Object.getOwnPropertyDescriptor;e.f=a?p:function(n,e){if(n=l(n),e=s(e),u)try{return p(n,e)}catch(n){}if(c(n,e))return o(!r(i.f,n,e),n[e])}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";var a=t(1),r=t(38).filter;a({target:"Array",proto:!0,forced:!t(73)("filter")},{filter:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var a=t(2);n.exports=a({}.isPrototypeOf)},function(n,e,t){var a=t(2),r=t(27),i=a(a.bind);n.exports=function(n,e){return r(n),void 0===e?n:i?i(n,e):function(){return n.apply(e,arguments)}}},function(n,e){var t=Function.prototype,a=t.apply,r=t.bind,i=t.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?i.bind(a):function(){return i.apply(a,arguments)})},function(n,e,t){var a=t(36),r=t(2),i=t(45),o=t(13),l=t(22),s=t(124),c=r([].push),u=function(n){var e=1==n,t=2==n,r=3==n,u=4==n,p=6==n,d=7==n,m=5==n||p;return function(f,v,y,b){for(var h,x,_=o(f),g=i(_),j=a(v,y),T=l(g),k=0,w=b||s,I=e?w(f,T):t||d?w(f,0):void 0;T>k;k++)if((m||k in g)&&(x=j(h=g[k],k,_),n))if(e)I[k]=x;else if(x)switch(n){case 3:return!0;case 5:return h;case 6:return k;case 2:c(I,h)}else switch(n){case 4:return!1;case 7:c(I,h)}return p?-1:r||u?u:I}};n.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6),filterReject:u(7)}},function(n,e,t){"use strict";var a=t(3);n.exports=function(n,e){var t=[][n];return!!t&&a((function(){t.call(null,e||function(){throw 1},1)}))}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var a=t(12).f,r=t(11),i=t(4)("toStringTag");n.exports=function(n,e,t){n&&!t&&(n=n.prototype),n&&!r(n,i)&&a(n,i,{configurable:!0,value:e})}},function(n,e,t){var a=t(23);n.exports=Array.isArray||function(n){return"Array"==a(n)}},function(n,e,t){"use strict";var a=t(1),r=t(0),i=t(14),o=t(37),l=t(10),s=t(2),c=t(24),u=t(9),p=t(91),d=t(3),m=t(11),f=t(42),v=t(5),y=t(7),b=t(35),h=t(92),x=t(8),_=t(13),g=t(15),j=t(64),T=t(21),k=t(40),w=t(25),I=t(66),C=t(58),E=t(152),S=t(97),z=t(32),A=t(12),O=t(96),L=t(70),P=t(17),$=t(60),D=t(67),R=t(47),U=t(61),M=t(4),N=t(153),F=t(154),B=t(41),G=t(31),V=t(38).forEach,q=D("hidden"),W=M("toPrimitive"),H=G.set,K=G.getterFor("Symbol"),X=Object.prototype,Y=r.Symbol,J=Y&&Y.prototype,Q=r.TypeError,Z=r.QObject,nn=i("JSON","stringify"),en=z.f,tn=A.f,an=E.f,rn=O.f,on=s([].push),ln=$("symbols"),sn=$("op-symbols"),cn=$("string-to-symbol-registry"),un=$("symbol-to-string-registry"),pn=$("wks"),dn=!Z||!Z.prototype||!Z.prototype.findChild,mn=u&&d((function(){return 7!=w(tn({},"a",{get:function(){return tn(this,"a",{value:7}).a}})).a}))?function(n,e,t){var a=en(X,e);a&&delete X[e],tn(n,e,t),a&&n!==X&&tn(X,e,a)}:tn,fn=function(n,e){var t=ln[n]=w(J);return H(t,{type:"Symbol",tag:n,description:e}),u||(t.description=e),t},vn=function(n,e,t){n===X&&vn(sn,e,t),x(n);var a=j(e);return x(t),m(ln,a)?(t.enumerable?(m(n,q)&&n[q][a]&&(n[q][a]=!1),t=w(t,{enumerable:k(0,!1)})):(m(n,q)||tn(n,q,k(1,{})),n[q][a]=!0),mn(n,a,t)):tn(n,a,t)},yn=function(n,e){x(n);var t=g(e),a=I(t).concat(_n(t));return V(a,(function(e){u&&!l(bn,t,e)||vn(n,e,t[e])})),n},bn=function(n){var e=j(n),t=l(rn,this,e);return!(this===X&&m(ln,e)&&!m(sn,e))&&(!(t||!m(this,e)||!m(ln,e)||m(this,q)&&this[q][e])||t)},hn=function(n,e){var t=g(n),a=j(e);if(t!==X||!m(ln,a)||m(sn,a)){var r=en(t,a);return!r||!m(ln,a)||m(t,q)&&t[q][a]||(r.enumerable=!0),r}},xn=function(n){var e=an(g(n)),t=[];return V(e,(function(n){m(ln,n)||m(R,n)||on(t,n)})),t},_n=function(n){var e=n===X,t=an(e?sn:g(n)),a=[];return V(t,(function(n){!m(ln,n)||e&&!m(X,n)||on(a,ln[n])})),a};(p||(P(J=(Y=function(){if(b(J,this))throw Q("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?T(arguments[0]):void 0,e=U(n),t=function(n){this===X&&l(t,sn,n),m(this,q)&&m(this[q],e)&&(this[q][e]=!1),mn(this,e,k(1,n))};return u&&dn&&mn(X,e,{configurable:!0,set:t}),fn(e,n)}).prototype,"toString",(function(){return K(this).tag})),P(Y,"withoutSetter",(function(n){return fn(U(n),n)})),O.f=bn,A.f=vn,z.f=hn,C.f=E.f=xn,S.f=_n,N.f=function(n){return fn(M(n),n)},u&&(tn(J,"description",{configurable:!0,get:function(){return K(this).description}}),c||P(X,"propertyIsEnumerable",bn,{unsafe:!0}))),a({global:!0,wrap:!0,forced:!p,sham:!p},{Symbol:Y}),V(I(pn),(function(n){F(n)})),a({target:"Symbol",stat:!0,forced:!p},{for:function(n){var e=T(n);if(m(cn,e))return cn[e];var t=Y(e);return cn[e]=t,un[t]=e,t},keyFor:function(n){if(!h(n))throw Q(n+" is not a symbol");if(m(un,n))return un[n]},useSetter:function(){dn=!0},useSimple:function(){dn=!1}}),a({target:"Object",stat:!0,forced:!p,sham:!u},{create:function(n,e){return void 0===e?w(n):yn(w(n),e)},defineProperty:vn,defineProperties:yn,getOwnPropertyDescriptor:hn}),a({target:"Object",stat:!0,forced:!p},{getOwnPropertyNames:xn,getOwnPropertySymbols:_n}),a({target:"Object",stat:!0,forced:d((function(){S.f(1)}))},{getOwnPropertySymbols:function(n){return S.f(_(n))}}),nn)&&a({target:"JSON",stat:!0,forced:!p||d((function(){var n=Y();return"[null]"!=nn([n])||"{}"!=nn({a:n})||"{}"!=nn(Object(n))}))},{stringify:function(n,e,t){var a=L(arguments),r=e;if((y(e)||void 0!==n)&&!h(n))return f(e)||(e=function(n,e){if(v(r)&&(e=l(r,this,n,e)),!h(e))return e}),a[1]=e,o(nn,null,a)}});if(!J[W]){var gn=J.valueOf;P(J,W,(function(n){return l(gn,this)}))}B(Y,"Symbol"),R[q]=!0},function(n,e,t){var a=t(51),r=t(240),i=t(241),o=a?a.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":o&&o in Object(n)?r(n):i(n)}},function(n,e,t){var a=t(0),r=t(2),i=t(3),o=t(23),l=a.Object,s=r("".split);n.exports=i((function(){return!l("z").propertyIsEnumerable(0)}))?function(n){return"String"==o(n)?s(n,""):l(n)}:l},function(n,e,t){var a,r,i=t(0),o=t(62),l=i.process,s=i.Deno,c=l&&l.versions||s&&s.version,u=c&&c.v8;u&&(r=(a=u.split("."))[0]>0&&a[0]<4?1:+(a[0]+a[1])),!r&&o&&(!(a=o.match(/Edge\/(\d+)/))||a[1]>=74)&&(a=o.match(/Chrome\/(\d+)/))&&(r=+a[1]),n.exports=r},function(n,e){n.exports={}},function(n,e){n.exports={}},function(n,e,t){"use strict";var a=t(64),r=t(12),i=t(40);n.exports=function(n,e,t){var o=a(e);o in n?r.f(n,o,i(0,t)):n[o]=t}},function(n,e,t){"use strict";var a=t(1),r=t(9),i=t(0),o=t(2),l=t(11),s=t(5),c=t(35),u=t(21),p=t(12).f,d=t(131),m=i.Symbol,f=m&&m.prototype;if(r&&s(m)&&(!("description"in f)||void 0!==m().description)){var v={},y=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:u(arguments[0]),e=c(f,this)?new m(n):void 0===n?m():m(n);return""===n&&(v[e]=!0),e};d(y,m),y.prototype=f,f.constructor=y;var b="Symbol(test)"==String(m("test")),h=o(f.toString),x=o(f.valueOf),_=/^Symbol\((.*)\)[^)]+$/,g=o("".replace),j=o("".slice);p(f,"description",{configurable:!0,get:function(){var n=x(this),e=h(n);if(l(v,n))return"";var t=b?j(e,7,-1):g(e,_,"$1");return""===t?void 0:t}}),a({global:!0,forced:!0},{Symbol:y})}},function(n,e,t){var a=t(20).Symbol;n.exports=a},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(118);var a=t(53);t(43),t(50),t(6),t(74),t(16),t(18),t(155);var r=t(80);function i(n){return function(n){if(Array.isArray(n))return Object(a.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Object(r.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function a(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}t.d(e,"a",(function(){return a}))},function(n,e,t){"use strict";function a(n,e,t,a,r,i,o,l){var s,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),a&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),o?(s=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),r&&r.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},c._ssrRegister=s):r&&(s=l?function(){r.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:r),s)if(c.functional){c._injectStyles=s;var u=c.render;c.render=function(n,e){return s.call(e),u(n,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,s):[s]}return{exports:n,options:c}}t.d(e,"a",(function(){return a}))},function(n,e,t){var a=t(27);n.exports=function(n,e){var t=n[e];return null==t?void 0:a(t)}},function(n,e){var t=Math.ceil,a=Math.floor;n.exports=function(n){var e=+n;return e!=e||0===e?0:(e>0?a:t)(e)}},function(n,e,t){"use strict";var a=t(1),r=t(0),i=t(42),o=t(69),l=t(7),s=t(94),c=t(22),u=t(15),p=t(49),d=t(4),m=t(73),f=t(70),v=m("slice"),y=d("species"),b=r.Array,h=Math.max;a({target:"Array",proto:!0,forced:!v},{slice:function(n,e){var t,a,r,d=u(this),m=c(d),v=s(n,m),x=s(void 0===e?m:e,m);if(i(d)&&(t=d.constructor,(o(t)&&(t===b||i(t.prototype))||l(t)&&null===(t=t[y]))&&(t=void 0),t===b||void 0===t))return f(d,v,x);for(a=new(void 0===t?b:t)(h(x-v,0)),r=0;v<x;v++,r++)v in d&&p(a,r,d[v]);return a.length=r,a}})},function(n,e,t){var a=t(128),r=t(95).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return a(n,r)}},function(n,e,t){var a=t(0),r=t(99),i=t(5),o=t(23),l=t(4)("toStringTag"),s=a.Object,c="Arguments"==o(function(){return arguments}());n.exports=r?o:function(n){var e,t,a;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),l))?t:c?o(e):"Object"==(a=o(e))&&i(e.callee)?"Arguments":a}},function(n,e,t){var a=t(24),r=t(89);(n.exports=function(n,e){return r[n]||(r[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.20.0",mode:a?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(n,e,t){var a=t(2),r=0,i=Math.random(),o=a(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+o(++r+i,36)}},function(n,e,t){var a=t(14);n.exports=a("navigator","userAgent")||""},function(n,e,t){var a=t(0),r=t(7),i=a.document,o=r(i)&&r(i.createElement);n.exports=function(n){return o?i.createElement(n):{}}},function(n,e,t){var a=t(208),r=t(92);n.exports=function(n){var e=a(n,"string");return r(e)?e:e+""}},function(n,e,t){var a=t(0).String;n.exports=function(n){try{return a(n)}catch(n){return"Object"}}},function(n,e,t){var a=t(128),r=t(95);n.exports=Object.keys||function(n){return a(n,r)}},function(n,e,t){var a=t(60),r=t(61),i=a("keys");n.exports=function(n){return i[n]||(i[n]=r(n))}},function(n,e,t){var a=t(2),r=t(5),i=t(89),o=a(Function.toString);r(i.inspectSource)||(i.inspectSource=function(n){return o(n)}),n.exports=i.inspectSource},function(n,e,t){var a=t(2),r=t(3),i=t(5),o=t(59),l=t(14),s=t(68),c=function(){},u=[],p=l("Reflect","construct"),d=/^\s*(?:class|function)\b/,m=a(d.exec),f=!d.exec(c),v=function(n){if(!i(n))return!1;try{return p(c,u,n),!0}catch(n){return!1}},y=function(n){if(!i(n))return!1;switch(o(n)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return f||!!m(d,s(n))}catch(n){return!0}};y.sham=!0,n.exports=!p||r((function(){var n;return v(v.call)||!v(Object)||!v((function(){n=!0}))||n}))?y:v},function(n,e,t){var a=t(2);n.exports=a([].slice)},function(n,e,t){var a=t(23),r=t(0);n.exports="process"==a(r.process)},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(6);function a(n,e,t,a,r,i,o){try{var l=n[i](o),s=l.value}catch(n){return void t(n)}l.done?e(s):Promise.resolve(s).then(a,r)}function r(n){return function(){var e=this,t=arguments;return new Promise((function(r,i){var o=n.apply(e,t);function l(n){a(o,r,i,l,s,"next",n)}function s(n){a(o,r,i,l,s,"throw",n)}l(void 0)}))}}},function(n,e,t){var a=t(3),r=t(4),i=t(46),o=r("species");n.exports=function(n){return i>=51||!a((function(){var e=[];return(e.constructor={})[o]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){t(154)("iterator")},function(n,e,t){var a=t(245),r=t(246),i=t(247),o=t(248),l=t(249);function s(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=i,s.prototype.has=o,s.prototype.set=l,n.exports=s},function(n,e,t){var a=t(160);n.exports=function(n,e){for(var t=n.length;t--;)if(a(n[t][0],e))return t;return-1}},function(n,e,t){var a=t(28)(Object,"create");n.exports=a},function(n,e,t){var a=t(267);n.exports=function(n,e){var t=n.__data__;return a(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var a=t(108);n.exports=function(n){if("string"==typeof n||a(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(57),t(6),t(100),t(155),t(16),t(29),t(111);var a=t(53);function r(n,e){if(n){if("string"==typeof n)return Object(a.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(a.a)(n,e):void 0}}},function(n,e,t){var a,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(a=function(){var n,e,t={version:"0.2.0"},a=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(a[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=r(n,a.minimum,1),t.status=1===n?null:n;var s=t.render(!e),c=s.querySelector(a.barSelector),u=a.speed,p=a.easing;return s.offsetWidth,o((function(e){""===a.positionUsing&&(a.positionUsing=t.getPositioningCSS()),l(c,function(n,e,t){var r;return(r="translate3d"===a.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,r}(n,u,p)),1===n?(l(s,{transition:"none",opacity:1}),s.offsetWidth,setTimeout((function(){l(s,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),a.trickleSpeed)};return a.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*r(Math.random()*e,.1,.95)),e=r(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*a.trickleRate)},n=0,e=0,t.promise=function(a){return a&&"resolved"!==a.state()?(0===e&&t.start(),n++,e++,a.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=a.template;var r,o=e.querySelector(a.barSelector),s=n?"-100":i(t.status||0),u=document.querySelector(a.parent);return l(o,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),a.showSpinner||(r=e.querySelector(a.spinnerSelector))&&d(r),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(e),e},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(a.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),l=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var a,r=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);r--;)if((a=n[r]+i)in t)return a;return e}(t))}function a(n,e,a){e=t(e),n.style[e]=a}return function(n,e){var t,r,i=arguments;if(2==i.length)for(t in e)void 0!==(r=e[t])&&e.hasOwnProperty(t)&&a(n,t,r);else a(n,i[1],i[2])}}();function s(n,e){return("string"==typeof n?n:p(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=p(n),a=t+e;s(t,e)||(n.className=a.substring(1))}function u(n,e){var t,a=p(n);s(n,e)&&(t=a.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?a.call(e,t,e,n):a)||(n.exports=r)},function(n,e,t){"use strict";var a=t(1),r=t(38).map;a({target:"Array",proto:!0,forced:!t(73)("map")},{map:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var a=t(37),r=t(10),i=t(2),o=t(187),l=t(3),s=t(8),c=t(5),u=t(56),p=t(84),d=t(21),m=t(30),f=t(194),v=t(55),y=t(235),b=t(188),h=t(4)("replace"),x=Math.max,_=Math.min,g=i([].concat),j=i([].push),T=i("".indexOf),k=i("".slice),w="$0"==="a".replace(/./,"$0"),I=!!/./[h]&&""===/./[h]("a","$0");o("replace",(function(n,e,t){var i=I?"$":"$0";return[function(n,t){var a=m(this),i=null==n?void 0:v(n,h);return i?r(i,n,a,t):r(e,d(a),n,t)},function(n,r){var o=s(this),l=d(n);if("string"==typeof r&&-1===T(r,i)&&-1===T(r,"$<")){var m=t(e,o,l,r);if(m.done)return m.value}var v=c(r);v||(r=d(r));var h=o.global;if(h){var w=o.unicode;o.lastIndex=0}for(var I=[];;){var C=b(o,l);if(null===C)break;if(j(I,C),!h)break;""===d(C[0])&&(o.lastIndex=f(l,p(o.lastIndex),w))}for(var E,S="",z=0,A=0;A<I.length;A++){for(var O=d((C=I[A])[0]),L=x(_(u(C.index),l.length),0),P=[],$=1;$<C.length;$++)j(P,void 0===(E=C[$])?E:String(E));var D=C.groups;if(v){var R=g([O],P,L,l);void 0!==D&&j(R,D);var U=d(a(r,void 0,R))}else U=y(O,l,L,P,D,r);L>=z&&(S+=k(l,z,L)+U,z=L+O.length)}return S+k(l,z)}]}),!!l((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")}))||!w||I)},function(n,e,t){var a=t(56),r=Math.min;n.exports=function(n){return n>0?r(a(n),9007199254740991):0}},function(n,e,t){var a=t(9),r=t(11),i=Function.prototype,o=a&&Object.getOwnPropertyDescriptor,l=r(i,"name"),s=l&&"something"===function(){}.name,c=l&&(!a||a&&o(i,"name").configurable);n.exports={EXISTS:l,PROPER:s,CONFIGURABLE:c}},function(n,e,t){var a=t(2),r=t(8),i=t(211);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=a(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return r(t),i(a),e?n(t,a):t.__proto__=a,t}}():void 0)},function(n,e,t){var a=t(59),r=t(55),i=t(48),o=t(4)("iterator");n.exports=function(n){if(null!=n)return r(n,o)||r(n,"@@iterator")||i[a(n)]}},function(n,e,t){"use strict";var a,r,i=t(10),o=t(2),l=t(21),s=t(192),c=t(186),u=t(60),p=t(25),d=t(31).get,m=t(193),f=t(203),v=u("native-string-replace",String.prototype.replace),y=RegExp.prototype.exec,b=y,h=o("".charAt),x=o("".indexOf),_=o("".replace),g=o("".slice),j=(r=/b*/g,i(y,a=/a/,"a"),i(y,r,"a"),0!==a.lastIndex||0!==r.lastIndex),T=c.BROKEN_CARET,k=void 0!==/()??/.exec("")[1];(j||k||T||m||f)&&(b=function(n){var e,t,a,r,o,c,u,m=this,f=d(m),w=l(n),I=f.raw;if(I)return I.lastIndex=m.lastIndex,e=i(b,I,w),m.lastIndex=I.lastIndex,e;var C=f.groups,E=T&&m.sticky,S=i(s,m),z=m.source,A=0,O=w;if(E&&(S=_(S,"y",""),-1===x(S,"g")&&(S+="g"),O=g(w,m.lastIndex),m.lastIndex>0&&(!m.multiline||m.multiline&&"\n"!==h(w,m.lastIndex-1))&&(z="(?: "+z+")",O=" "+O,A++),t=new RegExp("^(?:"+z+")",S)),k&&(t=new RegExp("^"+z+"$(?!\\s)",S)),j&&(a=m.lastIndex),r=i(y,E?t:m,O),E?r?(r.input=g(r.input,A),r[0]=g(r[0],A),r.index=m.lastIndex,m.lastIndex+=r[0].length):m.lastIndex=0:j&&r&&(m.lastIndex=m.global?r.index+r[0].length:a),k&&r&&r.length>1&&i(v,r[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r&&C)for(r.groups=c=p(null),o=0;o<C.length;o++)c[(u=C[o])[0]]=r[u[1]];return r}),n.exports=b},function(n,e,t){var a=t(0),r=t(90),i=a["__core-js_shared__"]||r("__core-js_shared__",{});n.exports=i},function(n,e,t){var a=t(0),r=Object.defineProperty;n.exports=function(n,e){try{r(a,n,{value:e,configurable:!0,writable:!0})}catch(t){a[n]=e}return e}},function(n,e,t){var a=t(46),r=t(3);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&a&&a<41}))},function(n,e,t){var a=t(0),r=t(14),i=t(5),o=t(35),l=t(126),s=a.Object;n.exports=l?function(n){return"symbol"==typeof n}:function(n){var e=r("Symbol");return i(e)&&o(e.prototype,s(n))}},function(n,e,t){var a=t(15),r=t(94),i=t(22),o=function(n){return function(e,t,o){var l,s=a(e),c=i(s),u=r(o,c);if(n&&t!=t){for(;c>u;)if((l=s[u++])!=l)return!0}else for(;c>u;u++)if((n||u in s)&&s[u]===t)return n||u||0;return!n&&-1}};n.exports={includes:o(!0),indexOf:o(!1)}},function(n,e,t){var a=t(56),r=Math.max,i=Math.min;n.exports=function(n,e){var t=a(n);return t<0?r(t+e,0):i(t,e)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var a={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,i=r&&!a.call({1:2},1);e.f=i?function(n){var e=r(this,n);return!!e&&e.enumerable}:a},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var a=t(0),r=t(11),i=t(5),o=t(13),l=t(67),s=t(134),c=l("IE_PROTO"),u=a.Object,p=u.prototype;n.exports=s?u.getPrototypeOf:function(n){var e=o(n);if(r(e,c))return e[c];var t=e.constructor;return i(t)&&e instanceof t?t.prototype:e instanceof u?p:null}},function(n,e,t){var a={};a[t(4)("toStringTag")]="z",n.exports="[object z]"===String(a)},function(n,e,t){var a=t(9),r=t(85).EXISTS,i=t(2),o=t(12).f,l=Function.prototype,s=i(l.toString),c=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,u=i(c.exec);a&&!r&&o(l,"name",{configurable:!0,get:function(){try{return u(c,s(this))[1]}catch(n){return""}}})},function(n,e,t){var a=t(239),r=t(33),i=Object.prototype,o=i.hasOwnProperty,l=i.propertyIsEnumerable,s=a(function(){return arguments}())?a:function(n){return r(n)&&o.call(n,"callee")&&!l.call(n,"callee")};n.exports=s},function(n,e,t){var a=t(28)(t(20),"Map");n.exports=a},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var a=t(259),r=t(266),i=t(268),o=t(269),l=t(270);function s(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=i,s.prototype.has=o,s.prototype.set=l,n.exports=s},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var a=t(19),r=t(108),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;n.exports=function(n,e){if(a(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!r(n))||(o.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var a=t(44),r=t(33);n.exports=function(n){return"symbol"==typeof n||r(n)&&"[object Symbol]"==a(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(118);t(43),t(50),t(6),t(74),t(16),t(18);var a=t(80);function r(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,r,i=[],o=!0,l=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(i.push(a.value),!e||i.length!==e);o=!0);}catch(n){l=!0,r=n}finally{try{o||null==t.return||t.return()}finally{if(l)throw r}}return i}}(n,e)||Object(a.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";t(29);var a,r,i=t(1),o=t(0),l=t(10),s=t(2),c=t(5),u=t(7),p=(a=!1,(r=/[ac]/).exec=function(){return a=!0,/./.exec.apply(this,arguments)},!0===r.test("abc")&&a),d=o.Error,m=s(/./.test);i({target:"RegExp",proto:!0,forced:!p},{test:function(n){var e=this.exec;if(!c(e))return m(this,n);var t=l(e,this,n);if(null!==t&&!u(t))throw new d("RegExp exec method returned something other than an Object or null");return!!t}})},function(n,e,t){"use strict";var a=t(1),r=t(38).some;a({target:"Array",proto:!0,forced:!t(39)("some")},{some:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var a=t(1),r=t(13),i=t(66);a({target:"Object",stat:!0,forced:t(3)((function(){i(1)}))},{keys:function(n){return i(r(n))}})},function(n,e,t){"use strict";var a=t(1),r=t(150);a({target:"Array",proto:!0,forced:[].forEach!=r},{forEach:r})},function(n,e,t){var a=t(0),r=t(145),i=t(146),o=t(150),l=t(26),s=function(n){if(n&&n.forEach!==o)try{l(n,"forEach",o)}catch(e){n.forEach=o}};for(var c in r)r[c]&&s(a[c]&&a[c].prototype);s(i)},function(n,e,t){var a=t(4),r=t(25),i=t(12),o=a("unscopables"),l=Array.prototype;null==l[o]&&i.f(l,o,{configurable:!0,value:r(null)}),n.exports=function(n){l[o][n]=!0}},function(n,e,t){var a=function(n){"use strict";var e=Object.prototype,t=e.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},r=a.iterator||"@@iterator",i=a.asyncIterator||"@@asyncIterator",o=a.toStringTag||"@@toStringTag";function l(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{l({},"")}catch(n){l=function(n,e,t){return n[e]=t}}function s(n,e,t,a){var r=e&&e.prototype instanceof p?e:p,i=Object.create(r.prototype),o=new T(a||[]);return i._invoke=function(n,e,t){var a="suspendedStart";return function(r,i){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===r)throw i;return w()}for(t.method=r,t.arg=i;;){var o=t.delegate;if(o){var l=_(o,t);if(l){if(l===u)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===a)throw a="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);a="executing";var s=c(n,e,t);if("normal"===s.type){if(a=t.done?"completed":"suspendedYield",s.arg===u)continue;return{value:s.arg,done:t.done}}"throw"===s.type&&(a="completed",t.method="throw",t.arg=s.arg)}}}(n,t,o),i}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=s;var u={};function p(){}function d(){}function m(){}var f={};l(f,r,(function(){return this}));var v=Object.getPrototypeOf,y=v&&v(v(k([])));y&&y!==e&&t.call(y,r)&&(f=y);var b=m.prototype=p.prototype=Object.create(f);function h(n){["next","throw","return"].forEach((function(e){l(n,e,(function(n){return this._invoke(e,n)}))}))}function x(n,e){var a;this._invoke=function(r,i){function o(){return new e((function(a,o){!function a(r,i,o,l){var s=c(n[r],n,i);if("throw"!==s.type){var u=s.arg,p=u.value;return p&&"object"==typeof p&&t.call(p,"__await")?e.resolve(p.__await).then((function(n){a("next",n,o,l)}),(function(n){a("throw",n,o,l)})):e.resolve(p).then((function(n){u.value=n,o(u)}),(function(n){return a("throw",n,o,l)}))}l(s.arg)}(r,i,a,o)}))}return a=a?a.then(o,o):o()}}function _(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,_(n,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var a=c(t,n.iterator,e.arg);if("throw"===a.type)return e.method="throw",e.arg=a.arg,e.delegate=null,u;var r=a.arg;return r?r.done?(e[n.resultName]=r.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):r:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function g(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function j(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function T(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(g,this),this.reset(!0)}function k(n){if(n){var e=n[r];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var a=-1,i=function e(){for(;++a<n.length;)if(t.call(n,a))return e.value=n[a],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:w}}function w(){return{value:void 0,done:!0}}return d.prototype=m,l(b,"constructor",m),l(m,"constructor",d),d.displayName=l(m,o,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===d||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,m):(n.__proto__=m,l(n,o,"GeneratorFunction")),n.prototype=Object.create(b),n},n.awrap=function(n){return{__await:n}},h(x.prototype),l(x.prototype,i,(function(){return this})),n.AsyncIterator=x,n.async=function(e,t,a,r,i){void 0===i&&(i=Promise);var o=new x(s(e,t,a,r),i);return n.isGeneratorFunction(t)?o:o.next().then((function(n){return n.done?n.value:o.next()}))},h(b),l(b,o,"Generator"),l(b,r,(function(){return this})),l(b,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var a=e.pop();if(a in n)return t.value=a,t.done=!1,t}return t.done=!0,t}},n.values=k,T.prototype={constructor:T,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(j),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function a(t,a){return o.type="throw",o.arg=n,e.next=t,a&&(e.method="next",e.arg=void 0),!!a}for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],o=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var l=t.call(i,"catchLoc"),s=t.call(i,"finallyLoc");if(l&&s){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(n,e){for(var a=this.tryEntries.length-1;a>=0;--a){var r=this.tryEntries[a];if(r.tryLoc<=this.prev&&t.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=n,o.arg=e,i?(this.method="next",this.next=i.finallyLoc,u):this.complete(o)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),u},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),j(t),u}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var a=t.completion;if("throw"===a.type){var r=a.arg;j(t)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:k(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),u}},n}(n.exports);try{regeneratorRuntime=a}catch(n){"object"==typeof globalThis?globalThis.regeneratorRuntime=a:Function("r","regeneratorRuntime = r")(a)}},function(n,e,t){t(1)({target:"Array",stat:!0},{isArray:t(42)})},function(n,e,t){var a=t(1),r=t(9);a({target:"Object",stat:!0,forced:!r,sham:!r},{defineProperty:t(12).f})},function(n,e,t){"use strict";var a=t(15),r=t(116),i=t(48),o=t(31),l=t(12).f,s=t(130),c=t(24),u=t(9),p=o.set,d=o.getterFor("Array Iterator");n.exports=s(Array,"Array",(function(n,e){p(this,{type:"Array Iterator",target:a(n),index:0,kind:e})}),(function(){var n=d(this),e=n.target,t=n.kind,a=n.index++;return!e||a>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:a,done:!1}:"values"==t?{value:e[a],done:!1}:{value:[a,e[a]],done:!1}}),"values");var m=i.Arguments=i.Array;if(r("keys"),r("values"),r("entries"),!c&&u&&"values"!==m.name)try{l(m,"name",{value:"values"})}catch(n){}},function(n,e,t){var a=t(3),r=t(5),i=/#|\.prototype\./,o=function(n,e){var t=s[l(n)];return t==u||t!=c&&(r(e)?a(e):!!e)},l=o.normalize=function(n){return String(n).replace(i,".").toLowerCase()},s=o.data={},c=o.NATIVE="N",u=o.POLYFILL="P";n.exports=o},function(n,e,t){var a=t(0),r=t(10),i=t(27),o=t(8),l=t(65),s=t(87),c=a.TypeError;n.exports=function(n,e){var t=arguments.length<2?s(n):e;if(i(t))return o(r(t,n));throw c(l(n)+" is not iterable")}},function(n,e,t){var a=t(8),r=t(139),i=t(4)("species");n.exports=function(n,e){var t,o=a(n).constructor;return void 0===o||null==(t=a(o)[i])?e:r(t)}},function(n,e,t){var a=t(224);n.exports=function(n,e){return new(a(n))(0===e?0:e)}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){var a=t(91);n.exports=a&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var a=t(9),r=t(3),i=t(63);n.exports=!a&&!r((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var a=t(2),r=t(11),i=t(15),o=t(93).indexOf,l=t(47),s=a([].push);n.exports=function(n,e){var t,a=i(n),c=0,u=[];for(t in a)!r(l,t)&&r(a,t)&&s(u,t);for(;e.length>c;)r(a,t=e[c++])&&(~o(u,t)||s(u,t));return u}},function(n,e,t){var a=t(14);n.exports=a("document","documentElement")},function(n,e,t){"use strict";var a=t(1),r=t(10),i=t(24),o=t(85),l=t(5),s=t(198),c=t(98),u=t(86),p=t(41),d=t(26),m=t(17),f=t(4),v=t(48),y=t(133),b=o.PROPER,h=o.CONFIGURABLE,x=y.IteratorPrototype,_=y.BUGGY_SAFARI_ITERATORS,g=f("iterator"),j=function(){return this};n.exports=function(n,e,t,o,f,y,T){s(t,e,o);var k,w,I,C=function(n){if(n===f&&O)return O;if(!_&&n in z)return z[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},E=e+" Iterator",S=!1,z=n.prototype,A=z[g]||z["@@iterator"]||f&&z[f],O=!_&&A||C(f),L="Array"==e&&z.entries||A;if(L&&(k=c(L.call(new n)))!==Object.prototype&&k.next&&(i||c(k)===x||(u?u(k,x):l(k[g])||m(k,g,j)),p(k,E,!0,!0),i&&(v[E]=j)),b&&"values"==f&&A&&"values"!==A.name&&(!i&&h?d(z,"name","values"):(S=!0,O=function(){return r(A,this)})),f)if(w={values:C("values"),keys:y?O:C("keys"),entries:C("entries")},T)for(I in w)(_||S||!(I in z))&&m(z,I,w[I]);else a({target:e,proto:!0,forced:_||S},w);return i&&!T||z[g]===O||m(z,g,O,{name:f}),v[e]=O,w}},function(n,e,t){var a=t(11),r=t(132),i=t(32),o=t(12);n.exports=function(n,e,t){for(var l=r(e),s=o.f,c=i.f,u=0;u<l.length;u++){var p=l[u];a(n,p)||t&&a(t,p)||s(n,p,c(e,p))}}},function(n,e,t){var a=t(14),r=t(2),i=t(58),o=t(97),l=t(8),s=r([].concat);n.exports=a("Reflect","ownKeys")||function(n){var e=i.f(l(n)),t=o.f;return t?s(e,t(n)):e}},function(n,e,t){"use strict";var a,r,i,o=t(3),l=t(5),s=t(25),c=t(98),u=t(17),p=t(4),d=t(24),m=p("iterator"),f=!1;[].keys&&("next"in(i=[].keys())?(r=c(c(i)))!==Object.prototype&&(a=r):f=!0),null==a||o((function(){var n={};return a[m].call(n)!==n}))?a={}:d&&(a=s(a)),l(a[m])||u(a,m,(function(){return this})),n.exports={IteratorPrototype:a,BUGGY_SAFARI_ITERATORS:f}},function(n,e,t){var a=t(3);n.exports=!a((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var a=t(0);n.exports=a.Promise},function(n,e,t){var a=t(4),r=t(48),i=a("iterator"),o=Array.prototype;n.exports=function(n){return void 0!==n&&(r.Array===n||o[i]===n)}},function(n,e,t){var a=t(10),r=t(8),i=t(55);n.exports=function(n,e,t){var o,l;r(n);try{if(!(o=i(n,"return"))){if("throw"===e)throw t;return t}o=a(o,n)}catch(n){l=!0,o=n}if("throw"===e)throw t;if(l)throw o;return r(o),t}},function(n,e,t){var a=t(4)("iterator"),r=!1;try{var i=0,o={next:function(){return{done:!!i++}},return:function(){r=!0}};o[a]=function(){return this},Array.from(o,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!r)return!1;var t=!1;try{var i={};i[a]=function(){return{next:function(){return{done:t=!0}}}},n(i)}catch(n){}return t}},function(n,e,t){var a=t(0),r=t(69),i=t(65),o=a.TypeError;n.exports=function(n){if(r(n))return n;throw o(i(n)+" is not a constructor")}},function(n,e,t){var a,r,i,o,l=t(0),s=t(37),c=t(36),u=t(5),p=t(11),d=t(3),m=t(129),f=t(70),v=t(63),y=t(141),b=t(71),h=l.setImmediate,x=l.clearImmediate,_=l.process,g=l.Dispatch,j=l.Function,T=l.MessageChannel,k=l.String,w=0,I={};try{a=l.location}catch(n){}var C=function(n){if(p(I,n)){var e=I[n];delete I[n],e()}},E=function(n){return function(){C(n)}},S=function(n){C(n.data)},z=function(n){l.postMessage(k(n),a.protocol+"//"+a.host)};h&&x||(h=function(n){var e=f(arguments,1);return I[++w]=function(){s(u(n)?n:j(n),void 0,e)},r(w),w},x=function(n){delete I[n]},b?r=function(n){_.nextTick(E(n))}:g&&g.now?r=function(n){g.now(E(n))}:T&&!y?(o=(i=new T).port2,i.port1.onmessage=S,r=c(o.postMessage,o)):l.addEventListener&&u(l.postMessage)&&!l.importScripts&&a&&"file:"!==a.protocol&&!d(z)?(r=z,l.addEventListener("message",S,!1)):r="onreadystatechange"in v("script")?function(n){m.appendChild(v("script")).onreadystatechange=function(){m.removeChild(this),C(n)}}:function(n){setTimeout(E(n),0)}),n.exports={set:h,clear:x}},function(n,e,t){var a=t(62);n.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(a)},function(n,e,t){var a=t(8),r=t(7),i=t(143);n.exports=function(n,e){if(a(n),r(e)&&e.constructor===n)return e;var t=i.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){"use strict";var a=t(27),r=function(n){var e,t;this.promise=new n((function(n,a){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=a})),this.resolve=a(e),this.reject=a(t)};n.exports.f=function(n){return new r(n)}},function(n,e,t){var a=t(2),r=t(56),i=t(21),o=t(30),l=a("".charAt),s=a("".charCodeAt),c=a("".slice),u=function(n){return function(e,t){var a,u,p=i(o(e)),d=r(t),m=p.length;return d<0||d>=m?n?"":void 0:(a=s(p,d))<55296||a>56319||d+1===m||(u=s(p,d+1))<56320||u>57343?n?l(p,d):a:n?c(p,d,d+2):u-56320+(a-55296<<10)+65536}};n.exports={codeAt:u(!1),charAt:u(!0)}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){var a=t(63)("span").classList,r=a&&a.constructor&&a.constructor.prototype;n.exports=r===Object.prototype?void 0:r},function(n,e,t){var a=t(1),r=t(3),i=t(13),o=t(98),l=t(134);a({target:"Object",stat:!0,forced:r((function(){o(1)})),sham:!l},{getPrototypeOf:function(n){return o(i(n))}})},function(n,e,t){var a=t(0),r=t(190),i=a.TypeError;n.exports=function(n){if(r(n))throw i("The method doesn't accept regular expressions");return n}},function(n,e,t){var a=t(4)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[a]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){"use strict";var a=t(38).forEach,r=t(39)("forEach");n.exports=r?[].forEach:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var a=t(3);n.exports=!a((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var a=t(23),r=t(15),i=t(58).f,o=t(191),l="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return l&&"Window"==a(n)?function(n){try{return i(n)}catch(n){return o(l)}}(n):i(r(n))}},function(n,e,t){var a=t(4);e.f=a},function(n,e,t){var a=t(232),r=t(11),i=t(153),o=t(12).f;n.exports=function(n){var e=a.Symbol||(a.Symbol={});r(e,n)||o(e,n,{value:i.f(n)})}},function(n,e,t){var a=t(1),r=t(233);a({target:"Array",stat:!0,forced:!t(138)((function(n){Array.from(n)}))},{from:r})},function(n,e,t){t(1)({target:"Object",stat:!0,sham:!t(9)},{create:t(25)})},function(n,e){n.exports=function(n,e){for(var t=-1,a=e.length,r=n.length;++t<a;)n[r+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var a=t(75),r=t(250),i=t(251),o=t(252),l=t(253),s=t(254);function c(n){var e=this.__data__=new a(n);this.size=e.size}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=l,c.prototype.set=s,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var a=t(44),r=t(103);n.exports=function(n){if(!r(n))return!1;var e=a(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var a=t(271),r=t(33);n.exports=function n(e,t,i,o,l){return e===t||(null==e||null==t||!r(e)&&!r(t)?e!=e&&t!=t:a(e,t,i,o,n,l))}},function(n,e,t){var a=t(165),r=t(274),i=t(166);n.exports=function(n,e,t,o,l,s){var c=1&t,u=n.length,p=e.length;if(u!=p&&!(c&&p>u))return!1;var d=s.get(n),m=s.get(e);if(d&&m)return d==e&&m==n;var f=-1,v=!0,y=2&t?new a:void 0;for(s.set(n,e),s.set(e,n);++f<u;){var b=n[f],h=e[f];if(o)var x=c?o(h,b,f,e,n,s):o(b,h,f,n,e,s);if(void 0!==x){if(x)continue;v=!1;break}if(y){if(!r(e,(function(n,e){if(!i(y,e)&&(b===n||l(b,n,t,o,s)))return y.push(e)}))){v=!1;break}}else if(b!==h&&!l(b,h,t,o,s)){v=!1;break}}return s.delete(n),s.delete(e),v}},function(n,e,t){var a=t(104),r=t(272),i=t(273);function o(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new a;++e<t;)this.add(n[e])}o.prototype.add=o.prototype.push=r,o.prototype.has=i,n.exports=o},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var a=t(284),r=t(290),i=t(171);n.exports=function(n){return i(n)?a(n):r(n)}},function(n,e,t){(function(n){var a=t(20),r=t(286),i=e&&!e.nodeType&&e,o=i&&"object"==typeof n&&n&&!n.nodeType&&n,l=o&&o.exports===i?a.Buffer:void 0,s=(l?l.isBuffer:void 0)||r;n.exports=s}).call(this,t(125)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var a=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==a||"symbol"!=a&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var a=t(287),r=t(288),i=t(289),o=i&&i.isTypedArray,l=o?r(o):a;n.exports=l},function(n,e,t){var a=t(161),r=t(106);n.exports=function(n){return null!=n&&r(n.length)&&!a(n)}},function(n,e,t){var a=t(28)(t(20),"Set");n.exports=a},function(n,e,t){var a=t(103);n.exports=function(n){return n==n&&!a(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var a=t(176),r=t(79);n.exports=function(n,e){for(var t=0,i=(e=a(e,n)).length;null!=n&&t<i;)n=n[r(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var a=t(19),r=t(107),i=t(301),o=t(304);n.exports=function(n,e){return a(n)?n:r(n,e)?[n]:i(o(n))}},function(n,e,t){t(1)({target:"Object",stat:!0},{setPrototypeOf:t(86)})},function(n,e,t){var a=t(1),r=t(14),i=t(37),o=t(333),l=t(139),s=t(8),c=t(7),u=t(25),p=t(3),d=r("Reflect","construct"),m=Object.prototype,f=[].push,v=p((function(){function n(){}return!(d((function(){}),[],n)instanceof n)})),y=!p((function(){d((function(){}))})),b=v||y;a({target:"Reflect",stat:!0,forced:b,sham:b},{construct:function(n,e){l(n),s(e);var t=arguments.length<3?n:l(arguments[2]);if(y&&!v)return d(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var a=[null];return i(f,a,e),new(i(o,n,a))}var r=t.prototype,p=u(c(r)?r:m),b=i(n,p,e);return c(b)?b:p}})},function(n,e,t){var a=t(1),r=t(0),i=t(41);a({global:!0},{Reflect:{}}),i(r.Reflect,"Reflect",!0)},function(n,e,t){},function(n,e,t){},function(n,e,t){var a=t(237),r=t(242),i=t(313),o=t(321),l=t(330),s=t(206),c=i((function(n){var e=s(n);return l(e)&&(e=void 0),o(a(n,1,l,!0),r(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var a=/["'&<>]/;n.exports=function(n){var e,t=""+n,r=a.exec(t);if(!r)return t;var i="",o=0,l=0;for(o=r.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}l!==o&&(i+=t.substring(l,o)),l=o+1,i+=e}return l!==o?i+t.substring(l,o):i}},function(n,e){var t=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,i=/^0o[0-7]+$/i,o=parseInt,l="object"==typeof global&&global&&global.Object===Object&&global,s="object"==typeof self&&self&&self.Object===Object&&self,c=l||s||Function("return this")(),u=Object.prototype.toString,p=Math.max,d=Math.min,m=function(){return c.Date.now()};function f(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function v(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(f(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=f(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var l=r.test(n);return l||i.test(n)?o(n.slice(2),l?2:8):a.test(n)?NaN:+n}n.exports=function(n,e,t){var a,r,i,o,l,s,c=0,u=!1,y=!1,b=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function h(e){var t=a,i=r;return a=r=void 0,c=e,o=n.apply(i,t)}function x(n){return c=n,l=setTimeout(g,e),u?h(n):o}function _(n){var t=n-s;return void 0===s||t>=e||t<0||y&&n-c>=i}function g(){var n=m();if(_(n))return j(n);l=setTimeout(g,function(n){var t=e-(n-s);return y?d(t,i-(n-c)):t}(n))}function j(n){return l=void 0,b&&a?h(n):(a=r=void 0,o)}function T(){var n=m(),t=_(n);if(a=arguments,r=this,s=n,t){if(void 0===l)return x(s);if(y)return l=setTimeout(g,e),h(s)}return void 0===l&&(l=setTimeout(g,e)),o}return e=v(e)||0,f(t)&&(u=!!t.leading,i=(y="maxWait"in t)?p(v(t.maxWait)||0,e):i,b="trailing"in t?!!t.trailing:b),T.cancel=function(){void 0!==l&&clearTimeout(l),c=0,a=s=r=l=void 0},T.flush=function(){return void 0===l?o:j(m())},T}},function(n,e,t){function a(e){return n.exports=a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},n.exports.__esModule=!0,n.exports.default=n.exports,a(e)}t(43),t(50),t(6),t(74),t(16),t(18),n.exports=a,n.exports.__esModule=!0,n.exports.default=n.exports},function(n,e,t){var a=t(3),r=t(0).RegExp,i=a((function(){var n=r("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),o=i||a((function(){return!r("a","y").sticky})),l=i||a((function(){var n=r("^r","gy");return n.lastIndex=2,null!=n.exec("str")}));n.exports={BROKEN_CARET:l,MISSED_STICKY:o,UNSUPPORTED_Y:i}},function(n,e,t){"use strict";t(29);var a=t(2),r=t(17),i=t(88),o=t(3),l=t(4),s=t(26),c=l("species"),u=RegExp.prototype;n.exports=function(n,e,t,p){var d=l(n),m=!o((function(){var e={};return e[d]=function(){return 7},7!=""[n](e)})),f=m&&!o((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[c]=function(){return t},t.flags="",t[d]=/./[d]),t.exec=function(){return e=!0,null},t[d](""),!e}));if(!m||!f||t){var v=a(/./[d]),y=e(d,""[n],(function(n,e,t,r,o){var l=a(n),s=e.exec;return s===i||s===u.exec?m&&!o?{done:!0,value:v(e,t,r)}:{done:!0,value:l(t,e,r)}:{done:!1}}));r(String.prototype,n,y[0]),r(u,d,y[1])}p&&s(u[d],"sham",!0)}},function(n,e,t){var a=t(0),r=t(10),i=t(8),o=t(5),l=t(23),s=t(88),c=a.TypeError;n.exports=function(n,e){var t=n.exec;if(o(t)){var a=r(t,n,e);return null!==a&&i(a),a}if("RegExp"===l(n))return r(s,n,e);throw c("RegExp#exec called on incompatible receiver")}},function(n,e,t){"use strict";var a=t(1),r=t(2),i=t(93).indexOf,o=t(39),l=r([].indexOf),s=!!l&&1/l([1],1,-0)<0,c=o("indexOf");a({target:"Array",proto:!0,forced:s||!c},{indexOf:function(n){var e=arguments.length>1?arguments[1]:void 0;return s?l(this,n,e)||0:i(this,n,e)}})},function(n,e,t){var a=t(7),r=t(23),i=t(4)("match");n.exports=function(n){var e;return a(n)&&(void 0!==(e=n[i])?!!e:"RegExp"==r(n))}},function(n,e,t){var a=t(0),r=t(94),i=t(22),o=t(49),l=a.Array,s=Math.max;n.exports=function(n,e,t){for(var a=i(n),c=r(e,a),u=r(void 0===t?a:t,a),p=l(s(u-c,0)),d=0;c<u;c++,d++)o(p,d,n[c]);return p.length=d,p}},function(n,e,t){"use strict";var a=t(8);n.exports=function(){var n=a(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e,t){var a=t(3),r=t(0).RegExp;n.exports=a((function(){var n=r(".","s");return!(n.dotAll&&n.exec("\n")&&"s"===n.flags)}))},function(n,e,t){"use strict";var a=t(144).charAt;n.exports=function(n,e,t){return e+(t?a(n,e).length:1)}},function(n,e,t){"use strict";var a=t(1),r=t(2),i=t(45),o=t(15),l=t(39),s=r([].join),c=i!=Object,u=l("join",",");a({target:"Array",proto:!0,forced:c||!u},{join:function(n){return s(o(this),void 0===n?",":n)}})},function(n,e,t){"use strict";var a=t(1),r=t(0),i=t(3),o=t(42),l=t(7),s=t(13),c=t(22),u=t(49),p=t(124),d=t(73),m=t(4),f=t(46),v=m("isConcatSpreadable"),y=r.TypeError,b=f>=51||!i((function(){var n=[];return n[v]=!1,n.concat()[0]!==n})),h=d("concat"),x=function(n){if(!l(n))return!1;var e=n[v];return void 0!==e?!!e:o(n)};a({target:"Array",proto:!0,forced:!b||!h},{concat:function(n){var e,t,a,r,i,o=s(this),l=p(o,0),d=0;for(e=-1,a=arguments.length;e<a;e++)if(x(i=-1===e?o:arguments[e])){if(d+(r=c(i))>9007199254740991)throw y("Maximum allowed index exceeded");for(t=0;t<r;t++,d++)t in i&&u(l,d,i[t])}else{if(d>=9007199254740991)throw y("Maximum allowed index exceeded");u(l,d++,i)}return l.length=d,l}})},function(n,e,t){var a=t(9),r=t(12),i=t(8),o=t(15),l=t(66);n.exports=a?Object.defineProperties:function(n,e){i(n);for(var t,a=o(e),s=l(e),c=s.length,u=0;c>u;)r.f(n,t=s[u++],a[t]);return n}},function(n,e,t){"use strict";var a=t(133).IteratorPrototype,r=t(25),i=t(40),o=t(41),l=t(48),s=function(){return this};n.exports=function(n,e,t,c){var u=e+" Iterator";return n.prototype=r(a,{next:i(+!c,t)}),o(n,u,!1,!0),l[u]=s,n}},function(n,e,t){var a=t(17);n.exports=function(n,e,t){for(var r in e)a(n,r,e[r],t);return n}},function(n,e,t){"use strict";var a=t(14),r=t(12),i=t(4),o=t(9),l=i("species");n.exports=function(n){var e=a(n),t=r.f;o&&e&&!e[l]&&t(e,l,{configurable:!0,get:function(){return this}})}},function(n,e,t){var a=t(0),r=t(35),i=a.TypeError;n.exports=function(n,e){if(r(e,n))return n;throw i("Incorrect invocation")}},function(n,e,t){var a=t(1),r=t(9),i=t(132),o=t(15),l=t(32),s=t(49);a({target:"Object",stat:!0,sham:!r},{getOwnPropertyDescriptors:function(n){for(var e,t,a=o(n),r=l.f,c=i(a),u={},p=0;c.length>p;)void 0!==(t=r(a,e=c[p++]))&&s(u,e,t);return u}})},function(n,e,t){var a=t(3),r=t(0).RegExp;n.exports=a((function(){var n=r("(?<a>b)","g");return"b"!==n.exec("b").groups.a||"bc"!=="b".replace(n,"$<a>c")}))},function(n,e,t){"use strict";var a=t(1),r=t(93).includes,i=t(116);a({target:"Array",proto:!0},{includes:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}}),i("includes")},function(n,e,t){"use strict";var a=t(1),r=t(2),i=t(148),o=t(30),l=t(21),s=t(149),c=r("".indexOf);a({target:"String",proto:!0,forced:!s("includes")},{includes:function(n){return!!~c(l(o(this)),l(i(n)),arguments.length>1?arguments[1]:void 0)}})},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){n.exports=t(336)},function(n,e,t){var a=t(0),r=t(10),i=t(7),o=t(92),l=t(55),s=t(209),c=t(4),u=a.TypeError,p=c("toPrimitive");n.exports=function(n,e){if(!i(n)||o(n))return n;var t,a=l(n,p);if(a){if(void 0===e&&(e="default"),t=r(a,n,e),!i(t)||o(t))return t;throw u("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){var a=t(0),r=t(10),i=t(5),o=t(7),l=a.TypeError;n.exports=function(n,e){var t,a;if("string"===e&&i(t=n.toString)&&!o(a=r(t,n)))return a;if(i(t=n.valueOf)&&!o(a=r(t,n)))return a;if("string"!==e&&i(t=n.toString)&&!o(a=r(t,n)))return a;throw l("Can't convert object to primitive value")}},function(n,e,t){var a=t(0),r=t(5),i=t(68),o=a.WeakMap;n.exports=r(o)&&/native code/.test(i(o))},function(n,e,t){var a=t(0),r=t(5),i=a.String,o=a.TypeError;n.exports=function(n){if("object"==typeof n||r(n))return n;throw o("Can't set "+i(n)+" as a prototype")}},function(n,e,t){"use strict";var a,r,i,o,l=t(1),s=t(24),c=t(0),u=t(14),p=t(10),d=t(135),m=t(17),f=t(199),v=t(86),y=t(41),b=t(200),h=t(27),x=t(5),_=t(7),g=t(201),j=t(68),T=t(213),k=t(138),w=t(123),I=t(140).set,C=t(214),E=t(142),S=t(217),z=t(143),A=t(218),O=t(31),L=t(121),P=t(4),$=t(219),D=t(71),R=t(46),U=P("species"),M="Promise",N=O.getterFor(M),F=O.set,B=O.getterFor(M),G=d&&d.prototype,V=d,q=G,W=c.TypeError,H=c.document,K=c.process,X=z.f,Y=X,J=!!(H&&H.createEvent&&c.dispatchEvent),Q=x(c.PromiseRejectionEvent),Z=!1,nn=L(M,(function(){var n=j(V),e=n!==String(V);if(!e&&66===R)return!0;if(s&&!q.finally)return!0;if(R>=51&&/native code/.test(n))return!1;var t=new V((function(n){n(1)})),a=function(n){n((function(){}),(function(){}))};return(t.constructor={})[U]=a,!(Z=t.then((function(){}))instanceof a)||!e&&$&&!Q})),en=nn||!k((function(n){V.all(n).catch((function(){}))})),tn=function(n){var e;return!(!_(n)||!x(e=n.then))&&e},an=function(n,e){if(!n.notified){n.notified=!0;var t=n.reactions;C((function(){for(var a=n.value,r=1==n.state,i=0;t.length>i;){var o,l,s,c=t[i++],u=r?c.ok:c.fail,d=c.resolve,m=c.reject,f=c.domain;try{u?(r||(2===n.rejection&&sn(n),n.rejection=1),!0===u?o=a:(f&&f.enter(),o=u(a),f&&(f.exit(),s=!0)),o===c.promise?m(W("Promise-chain cycle")):(l=tn(o))?p(l,o,d,m):d(o)):m(a)}catch(n){f&&!s&&f.exit(),m(n)}}n.reactions=[],n.notified=!1,e&&!n.rejection&&on(n)}))}},rn=function(n,e,t){var a,r;J?((a=H.createEvent("Event")).promise=e,a.reason=t,a.initEvent(n,!1,!0),c.dispatchEvent(a)):a={promise:e,reason:t},!Q&&(r=c["on"+n])?r(a):"unhandledrejection"===n&&S("Unhandled promise rejection",t)},on=function(n){p(I,c,(function(){var e,t=n.facade,a=n.value;if(ln(n)&&(e=A((function(){D?K.emit("unhandledRejection",a,t):rn("unhandledrejection",t,a)})),n.rejection=D||ln(n)?2:1,e.error))throw e.value}))},ln=function(n){return 1!==n.rejection&&!n.parent},sn=function(n){p(I,c,(function(){var e=n.facade;D?K.emit("rejectionHandled",e):rn("rejectionhandled",e,n.value)}))},cn=function(n,e,t){return function(a){n(e,a,t)}},un=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,an(n,!0))},pn=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw W("Promise can't be resolved itself");var a=tn(e);a?C((function(){var t={done:!1};try{p(a,e,cn(pn,t,n),cn(un,t,n))}catch(e){un(t,e,n)}})):(n.value=e,n.state=1,an(n,!1))}catch(e){un({done:!1},e,n)}}};if(nn&&(q=(V=function(n){g(this,q),h(n),p(a,this);var e=N(this);try{n(cn(pn,e),cn(un,e))}catch(n){un(e,n)}}).prototype,(a=function(n){F(this,{type:M,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=f(q,{then:function(n,e){var t=B(this),a=t.reactions,r=X(w(this,V));return r.ok=!x(n)||n,r.fail=x(e)&&e,r.domain=D?K.domain:void 0,t.parent=!0,a[a.length]=r,0!=t.state&&an(t,!1),r.promise},catch:function(n){return this.then(void 0,n)}}),r=function(){var n=new a,e=N(n);this.promise=n,this.resolve=cn(pn,e),this.reject=cn(un,e)},z.f=X=function(n){return n===V||n===i?new r(n):Y(n)},!s&&x(d)&&G!==Object.prototype)){o=G.then,Z||(m(G,"then",(function(n,e){var t=this;return new V((function(n,e){p(o,t,n,e)})).then(n,e)}),{unsafe:!0}),m(G,"catch",q.catch,{unsafe:!0}));try{delete G.constructor}catch(n){}v&&v(G,q)}l({global:!0,wrap:!0,forced:nn},{Promise:V}),y(V,M,!1,!0),b(M),i=u(M),l({target:M,stat:!0,forced:nn},{reject:function(n){var e=X(this);return p(e.reject,void 0,n),e.promise}}),l({target:M,stat:!0,forced:s||nn},{resolve:function(n){return E(s&&this===i?V:this,n)}}),l({target:M,stat:!0,forced:en},{all:function(n){var e=this,t=X(e),a=t.resolve,r=t.reject,i=A((function(){var t=h(e.resolve),i=[],o=0,l=1;T(n,(function(n){var s=o++,c=!1;l++,p(t,e,n).then((function(n){c||(c=!0,i[s]=n,--l||a(i))}),r)})),--l||a(i)}));return i.error&&r(i.value),t.promise},race:function(n){var e=this,t=X(e),a=t.reject,r=A((function(){var r=h(e.resolve);T(n,(function(n){p(r,e,n).then(t.resolve,a)}))}));return r.error&&a(r.value),t.promise}})},function(n,e,t){var a=t(0),r=t(36),i=t(10),o=t(8),l=t(65),s=t(136),c=t(22),u=t(35),p=t(122),d=t(87),m=t(137),f=a.TypeError,v=function(n,e){this.stopped=n,this.result=e},y=v.prototype;n.exports=function(n,e,t){var a,b,h,x,_,g,j,T=t&&t.that,k=!(!t||!t.AS_ENTRIES),w=!(!t||!t.IS_ITERATOR),I=!(!t||!t.INTERRUPTED),C=r(e,T),E=function(n){return a&&m(a,"normal",n),new v(!0,n)},S=function(n){return k?(o(n),I?C(n[0],n[1],E):C(n[0],n[1])):I?C(n,E):C(n)};if(w)a=n;else{if(!(b=d(n)))throw f(l(n)+" is not iterable");if(s(b)){for(h=0,x=c(n);x>h;h++)if((_=S(n[h]))&&u(y,_))return _;return new v(!1)}a=p(n,b)}for(g=a.next;!(j=i(g,a)).done;){try{_=S(j.value)}catch(n){m(a,"throw",n)}if("object"==typeof _&&_&&u(y,_))return _}return new v(!1)}},function(n,e,t){var a,r,i,o,l,s,c,u,p=t(0),d=t(36),m=t(32).f,f=t(140).set,v=t(141),y=t(215),b=t(216),h=t(71),x=p.MutationObserver||p.WebKitMutationObserver,_=p.document,g=p.process,j=p.Promise,T=m(p,"queueMicrotask"),k=T&&T.value;k||(a=function(){var n,e;for(h&&(n=g.domain)&&n.exit();r;){e=r.fn,r=r.next;try{e()}catch(n){throw r?o():i=void 0,n}}i=void 0,n&&n.enter()},v||h||b||!x||!_?!y&&j&&j.resolve?((c=j.resolve(void 0)).constructor=j,u=d(c.then,c),o=function(){u(a)}):h?o=function(){g.nextTick(a)}:(f=d(f,p),o=function(){f(a)}):(l=!0,s=_.createTextNode(""),new x(a).observe(s,{characterData:!0}),o=function(){s.data=l=!l})),n.exports=k||function(n){var e={fn:n,next:void 0};i&&(i.next=e),r||(r=e,o()),i=e}},function(n,e,t){var a=t(62),r=t(0);n.exports=/ipad|iphone|ipod/i.test(a)&&void 0!==r.Pebble},function(n,e,t){var a=t(62);n.exports=/web0s(?!.*chrome)/i.test(a)},function(n,e,t){var a=t(0);n.exports=function(n,e){var t=a.console;t&&t.error&&(1==arguments.length?t.error(n):t.error(n,e))}},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e){n.exports="object"==typeof window},function(n,e,t){var a=t(1),r=t(221);a({target:"Object",stat:!0,forced:Object.assign!==r},{assign:r})},function(n,e,t){"use strict";var a=t(9),r=t(2),i=t(10),o=t(3),l=t(66),s=t(97),c=t(96),u=t(13),p=t(45),d=Object.assign,m=Object.defineProperty,f=r([].concat);n.exports=!d||o((function(){if(a&&1!==d({b:1},d(m({},"a",{enumerable:!0,get:function(){m(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=d({},n)[t]||"abcdefghijklmnopqrst"!=l(d({},e)).join("")}))?function(n,e){for(var t=u(n),r=arguments.length,o=1,d=s.f,m=c.f;r>o;)for(var v,y=p(arguments[o++]),b=d?f(l(y),d(y)):l(y),h=b.length,x=0;h>x;)v=b[x++],a&&!i(m,y,v)||(t[v]=y[v]);return t}:d},function(n,e,t){"use strict";var a=t(1),r=t(24),i=t(135),o=t(3),l=t(14),s=t(5),c=t(123),u=t(142),p=t(17);if(a({target:"Promise",proto:!0,real:!0,forced:!!i&&o((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=c(this,l("Promise")),t=s(n);return this.then(t?function(t){return u(e,n()).then((function(){return t}))}:n,t?function(t){return u(e,n()).then((function(){throw t}))}:n)}}),!r&&s(i)){var d=l("Promise").prototype.finally;i.prototype.finally!==d&&p(i.prototype,"finally",d,{unsafe:!0})}},function(n,e,t){"use strict";var a=t(99),r=t(59);n.exports=a?{}.toString:function(){return"[object "+r(this)+"]"}},function(n,e,t){var a=t(0),r=t(42),i=t(69),o=t(7),l=t(4)("species"),s=a.Array;n.exports=function(n){var e;return r(n)&&(e=n.constructor,(i(e)&&(e===s||r(e.prototype))||o(e)&&null===(e=e[l]))&&(e=void 0)),void 0===e?s:e}},function(n,e,t){"use strict";var a=t(1),r=t(226).left,i=t(39),o=t(46),l=t(71);a({target:"Array",proto:!0,forced:!i("reduce")||!l&&o>79&&o<83},{reduce:function(n){var e=arguments.length;return r(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){var a=t(0),r=t(27),i=t(13),o=t(45),l=t(22),s=a.TypeError,c=function(n){return function(e,t,a,c){r(t);var u=i(e),p=o(u),d=l(u),m=n?d-1:0,f=n?-1:1;if(a<2)for(;;){if(m in p){c=p[m],m+=f;break}if(m+=f,n?m<0:d<=m)throw s("Reduce of empty array with no initial value")}for(;n?m>=0:d>m;m+=f)m in p&&(c=t(c,p[m],m,u));return c}};n.exports={left:c(!1),right:c(!0)}},function(n,e,t){"use strict";var a,r=t(1),i=t(2),o=t(32).f,l=t(84),s=t(21),c=t(148),u=t(30),p=t(149),d=t(24),m=i("".startsWith),f=i("".slice),v=Math.min,y=p("startsWith");r({target:"String",proto:!0,forced:!!(d||y||(a=o(String.prototype,"startsWith"),!a||a.writable))&&!y},{startsWith:function(n){var e=s(u(this));c(n);var t=l(v(arguments.length>1?arguments[1]:void 0,e.length)),a=s(n);return m?m(e,a,t):f(e,t,t+a.length)===a}})},function(n,e,t){var a=t(1),r=t(151),i=t(3),o=t(7),l=t(229).onFreeze,s=Object.freeze;a({target:"Object",stat:!0,forced:i((function(){s(1)})),sham:!r},{freeze:function(n){return s&&o(n)?s(l(n)):n}})},function(n,e,t){var a=t(1),r=t(2),i=t(47),o=t(7),l=t(11),s=t(12).f,c=t(58),u=t(152),p=t(230),d=t(61),m=t(151),f=!1,v=d("meta"),y=0,b=function(n){s(n,v,{value:{objectID:"O"+y++,weakData:{}}})},h=n.exports={enable:function(){h.enable=function(){},f=!0;var n=c.f,e=r([].splice),t={};t[v]=1,n(t).length&&(c.f=function(t){for(var a=n(t),r=0,i=a.length;r<i;r++)if(a[r]===v){e(a,r,1);break}return a},a({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:u.f}))},fastKey:function(n,e){if(!o(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!l(n,v)){if(!p(n))return"F";if(!e)return"E";b(n)}return n[v].objectID},getWeakData:function(n,e){if(!l(n,v)){if(!p(n))return!0;if(!e)return!1;b(n)}return n[v].weakData},onFreeze:function(n){return m&&f&&p(n)&&!l(n,v)&&b(n),n}};i[v]=!0},function(n,e,t){var a=t(3),r=t(7),i=t(23),o=t(231),l=Object.isExtensible,s=a((function(){l(1)}));n.exports=s||o?function(n){return!!r(n)&&((!o||"ArrayBuffer"!=i(n))&&(!l||l(n)))}:l},function(n,e,t){var a=t(3);n.exports=a((function(){if("function"==typeof ArrayBuffer){var n=new ArrayBuffer(8);Object.isExtensible(n)&&Object.defineProperty(n,"a",{value:8})}}))},function(n,e,t){var a=t(0);n.exports=a},function(n,e,t){"use strict";var a=t(0),r=t(36),i=t(10),o=t(13),l=t(234),s=t(136),c=t(69),u=t(22),p=t(49),d=t(122),m=t(87),f=a.Array;n.exports=function(n){var e=o(n),t=c(this),a=arguments.length,v=a>1?arguments[1]:void 0,y=void 0!==v;y&&(v=r(v,a>2?arguments[2]:void 0));var b,h,x,_,g,j,T=m(e),k=0;if(!T||this==f&&s(T))for(b=u(e),h=t?new this(b):f(b);b>k;k++)j=y?v(e[k],k):e[k],p(h,k,j);else for(g=(_=d(e,T)).next,h=t?new this:[];!(x=i(g,_)).done;k++)j=y?l(_,v,[x.value,k],!0):x.value,p(h,k,j);return h.length=k,h}},function(n,e,t){var a=t(8),r=t(137);n.exports=function(n,e,t,i){try{return i?e(a(t)[0],t[1]):e(t)}catch(e){r(n,"throw",e)}}},function(n,e,t){var a=t(2),r=t(13),i=Math.floor,o=a("".charAt),l=a("".replace),s=a("".slice),c=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,u=/\$([$&'`]|\d{1,2})/g;n.exports=function(n,e,t,a,p,d){var m=t+n.length,f=a.length,v=u;return void 0!==p&&(p=r(p),v=c),l(d,v,(function(r,l){var c;switch(o(l,0)){case"$":return"$";case"&":return n;case"`":return s(e,0,t);case"'":return s(e,m);case"<":c=p[s(l,1,-1)];break;default:var u=+l;if(0===u)return r;if(u>f){var d=i(u/10);return 0===d?r:d<=f?void 0===a[d-1]?o(l,1):a[d-1]+o(l,1):r}c=a[u-1]}return void 0===c?"":c}))}},function(n,e,t){var a=t(1),r=t(0),i=t(14),o=t(37),l=t(2),s=t(3),c=r.Array,u=i("JSON","stringify"),p=l(/./.exec),d=l("".charAt),m=l("".charCodeAt),f=l("".replace),v=l(1..toString),y=/[\uD800-\uDFFF]/g,b=/^[\uD800-\uDBFF]$/,h=/^[\uDC00-\uDFFF]$/,x=function(n,e,t){var a=d(t,e-1),r=d(t,e+1);return p(b,n)&&!p(h,r)||p(h,n)&&!p(b,a)?"\\u"+v(m(n,0),16):n},_=s((function(){return'"\\udf06\\ud834"'!==u("\udf06\ud834")||'"\\udead"'!==u("\udead")}));u&&a({target:"JSON",stat:!0,forced:_},{stringify:function(n,e,t){for(var a=0,r=arguments.length,i=c(r);a<r;a++)i[a]=arguments[a];var l=o(u,null,i);return"string"==typeof l?f(l,y,x):l}})},function(n,e,t){var a=t(157),r=t(238);n.exports=function n(e,t,i,o,l){var s=-1,c=e.length;for(i||(i=r),l||(l=[]);++s<c;){var u=e[s];t>0&&i(u)?t>1?n(u,t-1,i,o,l):a(l,u):o||(l[l.length]=u)}return l}},function(n,e,t){var a=t(51),r=t(101),i=t(19),o=a?a.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||r(n)||!!(o&&n&&n[o])}},function(n,e,t){var a=t(44),r=t(33);n.exports=function(n){return r(n)&&"[object Arguments]"==a(n)}},function(n,e,t){var a=t(51),r=Object.prototype,i=r.hasOwnProperty,o=r.toString,l=a?a.toStringTag:void 0;n.exports=function(n){var e=i.call(n,l),t=n[l];try{n[l]=void 0;var a=!0}catch(n){}var r=o.call(n);return a&&(e?n[l]=t:delete n[l]),r}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var a=t(243),r=t(299),i=t(109),o=t(19),l=t(310);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?o(n)?r(n[0],n[1]):a(n):l(n)}},function(n,e,t){var a=t(244),r=t(298),i=t(174);n.exports=function(n){var e=r(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||a(t,n,e)}}},function(n,e,t){var a=t(159),r=t(163);n.exports=function(n,e,t,i){var o=t.length,l=o,s=!i;if(null==n)return!l;for(n=Object(n);o--;){var c=t[o];if(s&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++o<l;){var u=(c=t[o])[0],p=n[u],d=c[1];if(s&&c[2]){if(void 0===p&&!(u in n))return!1}else{var m=new a;if(i)var f=i(p,d,u,n,e,m);if(!(void 0===f?r(d,p,3,i,m):f))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var a=t(76),r=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=a(e,n);return!(t<0)&&(t==e.length-1?e.pop():r.call(e,t,1),--this.size,!0)}},function(n,e,t){var a=t(76);n.exports=function(n){var e=this.__data__,t=a(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var a=t(76);n.exports=function(n){return a(this.__data__,n)>-1}},function(n,e,t){var a=t(76);n.exports=function(n,e){var t=this.__data__,r=a(t,n);return r<0?(++this.size,t.push([n,e])):t[r][1]=e,this}},function(n,e,t){var a=t(75);n.exports=function(){this.__data__=new a,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var a=t(75),r=t(102),i=t(104);n.exports=function(n,e){var t=this.__data__;if(t instanceof a){var o=t.__data__;if(!r||o.length<199)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(o)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var a=t(161),r=t(256),i=t(103),o=t(162),l=/^\[object .+?Constructor\]$/,s=Function.prototype,c=Object.prototype,u=s.toString,p=c.hasOwnProperty,d=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||r(n))&&(a(n)?d:l).test(o(n))}},function(n,e,t){var a,r=t(257),i=(a=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var a=t(20)["__core-js_shared__"];n.exports=a},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var a=t(260),r=t(75),i=t(102);n.exports=function(){this.size=0,this.__data__={hash:new a,map:new(i||r),string:new a}}},function(n,e,t){var a=t(261),r=t(262),i=t(263),o=t(264),l=t(265);function s(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=i,s.prototype.has=o,s.prototype.set=l,n.exports=s},function(n,e,t){var a=t(77);n.exports=function(){this.__data__=a?a(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var a=t(77),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(a){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(e,n)?e[n]:void 0}},function(n,e,t){var a=t(77),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return a?void 0!==e[n]:r.call(e,n)}},function(n,e,t){var a=t(77);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=a&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var a=t(78);n.exports=function(n){var e=a(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var a=t(78);n.exports=function(n){return a(this,n).get(n)}},function(n,e,t){var a=t(78);n.exports=function(n){return a(this,n).has(n)}},function(n,e,t){var a=t(78);n.exports=function(n,e){var t=a(this,n),r=t.size;return t.set(n,e),this.size+=t.size==r?0:1,this}},function(n,e,t){var a=t(159),r=t(164),i=t(275),o=t(278),l=t(294),s=t(19),c=t(168),u=t(170),p="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,f,v){var y=s(n),b=s(e),h=y?"[object Array]":l(n),x=b?"[object Array]":l(e),_=(h="[object Arguments]"==h?p:h)==p,g=(x="[object Arguments]"==x?p:x)==p,j=h==x;if(j&&c(n)){if(!c(e))return!1;y=!0,_=!1}if(j&&!_)return v||(v=new a),y||u(n)?r(n,e,t,m,f,v):i(n,e,h,t,m,f,v);if(!(1&t)){var T=_&&d.call(n,"__wrapped__"),k=g&&d.call(e,"__wrapped__");if(T||k){var w=T?n.value():n,I=k?e.value():e;return v||(v=new a),f(w,I,t,m,v)}}return!!j&&(v||(v=new a),o(n,e,t,m,f,v))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length;++t<a;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var a=t(51),r=t(276),i=t(160),o=t(164),l=t(277),s=t(105),c=a?a.prototype:void 0,u=c?c.valueOf:void 0;n.exports=function(n,e,t,a,c,p,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!p(new r(n),new r(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=l;case"[object Set]":var f=1&a;if(m||(m=s),n.size!=e.size&&!f)return!1;var v=d.get(n);if(v)return v==e;a|=2,d.set(n,e);var y=o(m(n),m(e),a,c,p,d);return d.delete(n),y;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,t){var a=t(20).Uint8Array;n.exports=a},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,a){t[++e]=[a,n]})),t}},function(n,e,t){var a=t(279),r=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,o,l){var s=1&t,c=a(n),u=c.length;if(u!=a(e).length&&!s)return!1;for(var p=u;p--;){var d=c[p];if(!(s?d in e:r.call(e,d)))return!1}var m=l.get(n),f=l.get(e);if(m&&f)return m==e&&f==n;var v=!0;l.set(n,e),l.set(e,n);for(var y=s;++p<u;){var b=n[d=c[p]],h=e[d];if(i)var x=s?i(h,b,d,e,n,l):i(b,h,d,n,e,l);if(!(void 0===x?b===h||o(b,h,t,i,l):x)){v=!1;break}y||(y="constructor"==d)}if(v&&!y){var _=n.constructor,g=e.constructor;_==g||!("constructor"in n)||!("constructor"in e)||"function"==typeof _&&_ instanceof _&&"function"==typeof g&&g instanceof g||(v=!1)}return l.delete(n),l.delete(e),v}},function(n,e,t){var a=t(280),r=t(281),i=t(167);n.exports=function(n){return a(n,i,r)}},function(n,e,t){var a=t(157),r=t(19);n.exports=function(n,e,t){var i=e(n);return r(n)?i:a(i,t(n))}},function(n,e,t){var a=t(282),r=t(283),i=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,l=o?function(n){return null==n?[]:(n=Object(n),a(o(n),(function(e){return i.call(n,e)})))}:r;n.exports=l},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length,r=0,i=[];++t<a;){var o=n[t];e(o,t,n)&&(i[r++]=o)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var a=t(285),r=t(101),i=t(19),o=t(168),l=t(169),s=t(170),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),u=!t&&r(n),p=!t&&!u&&o(n),d=!t&&!u&&!p&&s(n),m=t||u||p||d,f=m?a(n.length,String):[],v=f.length;for(var y in n)!e&&!c.call(n,y)||m&&("length"==y||p&&("offset"==y||"parent"==y)||d&&("buffer"==y||"byteLength"==y||"byteOffset"==y)||l(y,v))||f.push(y);return f}},function(n,e){n.exports=function(n,e){for(var t=-1,a=Array(n);++t<n;)a[t]=e(t);return a}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var a=t(44),r=t(106),i=t(33),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&r(n.length)&&!!o[a(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var a=t(158),r=e&&!e.nodeType&&e,i=r&&"object"==typeof n&&n&&!n.nodeType&&n,o=i&&i.exports===r&&a.process,l=function(){try{var n=i&&i.require&&i.require("util").types;return n||o&&o.binding&&o.binding("util")}catch(n){}}();n.exports=l}).call(this,t(125)(n))},function(n,e,t){var a=t(291),r=t(292),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!a(n))return r(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var a=t(293)(Object.keys,Object);n.exports=a},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var a=t(295),r=t(102),i=t(296),o=t(172),l=t(297),s=t(44),c=t(162),u=c(a),p=c(r),d=c(i),m=c(o),f=c(l),v=s;(a&&"[object DataView]"!=v(new a(new ArrayBuffer(1)))||r&&"[object Map]"!=v(new r)||i&&"[object Promise]"!=v(i.resolve())||o&&"[object Set]"!=v(new o)||l&&"[object WeakMap]"!=v(new l))&&(v=function(n){var e=s(n),t="[object Object]"==e?n.constructor:void 0,a=t?c(t):"";if(a)switch(a){case u:return"[object DataView]";case p:return"[object Map]";case d:return"[object Promise]";case m:return"[object Set]";case f:return"[object WeakMap]"}return e}),n.exports=v},function(n,e,t){var a=t(28)(t(20),"DataView");n.exports=a},function(n,e,t){var a=t(28)(t(20),"Promise");n.exports=a},function(n,e,t){var a=t(28)(t(20),"WeakMap");n.exports=a},function(n,e,t){var a=t(173),r=t(167);n.exports=function(n){for(var e=r(n),t=e.length;t--;){var i=e[t],o=n[i];e[t]=[i,o,a(o)]}return e}},function(n,e,t){var a=t(163),r=t(300),i=t(307),o=t(107),l=t(173),s=t(174),c=t(79);n.exports=function(n,e){return o(n)&&l(e)?s(c(n),e):function(t){var o=r(t,n);return void 0===o&&o===e?i(t,n):a(e,o,3)}}},function(n,e,t){var a=t(175);n.exports=function(n,e,t){var r=null==n?void 0:a(n,e);return void 0===r?t:r}},function(n,e,t){var a=t(302),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,o=a((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(r,(function(n,t,a,r){e.push(a?r.replace(i,"$1"):t||n)})),e}));n.exports=o},function(n,e,t){var a=t(303);n.exports=function(n){var e=a(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var a=t(104);function r(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var a=arguments,r=e?e.apply(this,a):a[0],i=t.cache;if(i.has(r))return i.get(r);var o=n.apply(this,a);return t.cache=i.set(r,o)||i,o};return t.cache=new(r.Cache||a),t}r.Cache=a,n.exports=r},function(n,e,t){var a=t(305);n.exports=function(n){return null==n?"":a(n)}},function(n,e,t){var a=t(51),r=t(306),i=t(19),o=t(108),l=a?a.prototype:void 0,s=l?l.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return r(e,n)+"";if(o(e))return s?s.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length,r=Array(a);++t<a;)r[t]=e(n[t],t,n);return r}},function(n,e,t){var a=t(308),r=t(309);n.exports=function(n,e){return null!=n&&r(n,e,a)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var a=t(176),r=t(101),i=t(19),o=t(169),l=t(106),s=t(79);n.exports=function(n,e,t){for(var c=-1,u=(e=a(e,n)).length,p=!1;++c<u;){var d=s(e[c]);if(!(p=null!=n&&t(n,d)))break;n=n[d]}return p||++c!=u?p:!!(u=null==n?0:n.length)&&l(u)&&o(d,u)&&(i(n)||r(n))}},function(n,e,t){var a=t(311),r=t(312),i=t(107),o=t(79);n.exports=function(n){return i(n)?a(o(n)):r(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var a=t(175);n.exports=function(n){return function(e){return a(e,n)}}},function(n,e,t){var a=t(109),r=t(314),i=t(316);n.exports=function(n,e){return i(r(n,e,a),n+"")}},function(n,e,t){var a=t(315),r=Math.max;n.exports=function(n,e,t){return e=r(void 0===e?n.length-1:e,0),function(){for(var i=arguments,o=-1,l=r(i.length-e,0),s=Array(l);++o<l;)s[o]=i[e+o];o=-1;for(var c=Array(e+1);++o<e;)c[o]=i[o];return c[e]=t(s),a(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var a=t(317),r=t(320)(a);n.exports=r},function(n,e,t){var a=t(318),r=t(319),i=t(109),o=r?function(n,e){return r(n,"toString",{configurable:!0,enumerable:!1,value:a(e),writable:!0})}:i;n.exports=o},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var a=t(28),r=function(){try{var n=a(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=r},function(n,e){var t=Date.now;n.exports=function(n){var e=0,a=0;return function(){var r=t(),i=16-(r-a);if(a=r,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var a=t(165),r=t(322),i=t(327),o=t(166),l=t(328),s=t(105);n.exports=function(n,e,t){var c=-1,u=r,p=n.length,d=!0,m=[],f=m;if(t)d=!1,u=i;else if(p>=200){var v=e?null:l(n);if(v)return s(v);d=!1,u=o,f=new a}else f=e?[]:m;n:for(;++c<p;){var y=n[c],b=e?e(y):y;if(y=t||0!==y?y:0,d&&b==b){for(var h=f.length;h--;)if(f[h]===b)continue n;e&&f.push(b),m.push(y)}else u(f,b,t)||(f!==m&&f.push(b),m.push(y))}return m}},function(n,e,t){var a=t(323);n.exports=function(n,e){return!!(null==n?0:n.length)&&a(n,e,0)>-1}},function(n,e,t){var a=t(324),r=t(325),i=t(326);n.exports=function(n,e,t){return e==e?i(n,e,t):a(n,r,t)}},function(n,e){n.exports=function(n,e,t,a){for(var r=n.length,i=t+(a?1:-1);a?i--:++i<r;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var a=t-1,r=n.length;++a<r;)if(n[a]===e)return a;return-1}},function(n,e){n.exports=function(n,e,t){for(var a=-1,r=null==n?0:n.length;++a<r;)if(t(e,n[a]))return!0;return!1}},function(n,e,t){var a=t(172),r=t(329),i=t(105),o=a&&1/i(new a([,-0]))[1]==1/0?function(n){return new a(n)}:r;n.exports=o},function(n,e){n.exports=function(){}},function(n,e,t){var a=t(171),r=t(33);n.exports=function(n){return r(n)&&a(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var a=t(0),r=t(2),i=t(27),o=t(7),l=t(11),s=t(70),c=a.Function,u=r([].concat),p=r([].join),d={},m=function(n,e,t){if(!l(d,e)){for(var a=[],r=0;r<e;r++)a[r]="a["+r+"]";d[e]=c("C,a","return new C("+p(a,",")+")")}return d[e](n,t)};n.exports=c.bind||function(n){var e=i(this),t=e.prototype,a=s(arguments,1),r=function(){var t=u(a,s(arguments));return this instanceof r?m(e,t.length,t):e.apply(n,t)};return o(t)&&(r.prototype=t),r}},function(n,e,t){"use strict";t(180)},function(n,e,t){"use strict";t(181)},function(n,e,t){"use strict";t.r(e);t(120),t(212),t(220),t(222);var a=t(72),r=(t(117),t(57),t(6),t(16),t(18),t(82),t(34),Object.freeze({}));function i(n){return null==n}function o(n){return null!=n}function l(n){return!0===n}function s(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function p(n){return"[object Object]"===u.call(n)}function d(n){return"[object RegExp]"===u.call(n)}function m(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function f(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function v(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function y(n){var e=parseFloat(n);return isNaN(e)?n:e}function b(n,e){for(var t=Object.create(null),a=n.split(","),r=0;r<a.length;r++)t[a[r]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}b("slot,component",!0);var h=b("key,ref,slot,slot-scope,is");function x(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var _=Object.prototype.hasOwnProperty;function g(n,e){return _.call(n,e)}function j(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var T=/-(\w)/g,k=j((function(n){return n.replace(T,(function(n,e){return e?e.toUpperCase():""}))})),w=j((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),I=/\B([A-Z])/g,C=j((function(n){return n.replace(I,"-$1").toLowerCase()}));var E=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var a=arguments.length;return a?a>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function S(n,e){e=e||0;for(var t=n.length-e,a=new Array(t);t--;)a[t]=n[t+e];return a}function z(n,e){for(var t in e)n[t]=e[t];return n}function A(n){for(var e={},t=0;t<n.length;t++)n[t]&&z(e,n[t]);return e}function O(n,e,t){}var L=function(n,e,t){return!1},P=function(n){return n};function $(n,e){if(n===e)return!0;var t=c(n),a=c(e);if(!t||!a)return!t&&!a&&String(n)===String(e);try{var r=Array.isArray(n),i=Array.isArray(e);if(r&&i)return n.length===e.length&&n.every((function(n,t){return $(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(r||i)return!1;var o=Object.keys(n),l=Object.keys(e);return o.length===l.length&&o.every((function(t){return $(n[t],e[t])}))}catch(n){return!1}}function D(n,e){for(var t=0;t<n.length;t++)if($(n[t],e))return t;return-1}function R(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var U=["component","directive","filter"],M=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],N={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:L,isReservedAttr:L,isUnknownElement:L,getTagNamespace:O,parsePlatformTagName:P,mustUseProp:L,async:!0,_lifecycleHooks:M},F=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function B(n,e,t,a){Object.defineProperty(n,e,{value:t,enumerable:!!a,writable:!0,configurable:!0})}var G=new RegExp("[^"+F.source+".$_\\d]");var V,q="__proto__"in{},W="undefined"!=typeof window,H="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=H&&WXEnvironment.platform.toLowerCase(),X=W&&window.navigator.userAgent.toLowerCase(),Y=X&&/msie|trident/.test(X),J=X&&X.indexOf("msie 9.0")>0,Q=X&&X.indexOf("edge/")>0,Z=(X&&X.indexOf("android"),X&&/iphone|ipad|ipod|ios/.test(X)||"ios"===K),nn=(X&&/chrome\/\d+/.test(X),X&&/phantomjs/.test(X),X&&X.match(/firefox\/(\d+)/)),en={}.watch,tn=!1;if(W)try{var an={};Object.defineProperty(an,"passive",{get:function(){tn=!0}}),window.addEventListener("test-passive",null,an)}catch(n){}var rn=function(){return void 0===V&&(V=!W&&!H&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),V},on=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ln(n){return"function"==typeof n&&/native code/.test(n.toString())}var sn,cn="undefined"!=typeof Symbol&&ln(Symbol)&&"undefined"!=typeof Reflect&&ln(Reflect.ownKeys);sn="undefined"!=typeof Set&&ln(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=O,pn=0,dn=function(){this.id=pn++,this.subs=[]};dn.prototype.addSub=function(n){this.subs.push(n)},dn.prototype.removeSub=function(n){x(this.subs,n)},dn.prototype.depend=function(){dn.target&&dn.target.addDep(this)},dn.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},dn.target=null;var mn=[];function fn(n){mn.push(n),dn.target=n}function vn(){mn.pop(),dn.target=mn[mn.length-1]}var yn=function(n,e,t,a,r,i,o,l){this.tag=n,this.data=e,this.children=t,this.text=a,this.elm=r,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=l,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},bn={child:{configurable:!0}};bn.child.get=function(){return this.componentInstance},Object.defineProperties(yn.prototype,bn);var hn=function(n){void 0===n&&(n="");var e=new yn;return e.text=n,e.isComment=!0,e};function xn(n){return new yn(void 0,void 0,void 0,String(n))}function _n(n){var e=new yn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var gn=Array.prototype,jn=Object.create(gn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=gn[n];B(jn,n,(function(){for(var t=[],a=arguments.length;a--;)t[a]=arguments[a];var r,i=e.apply(this,t),o=this.__ob__;switch(n){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&o.observeArray(r),o.dep.notify(),i}))}));var Tn=Object.getOwnPropertyNames(jn),kn=!0;function wn(n){kn=n}var In=function(n){this.value=n,this.dep=new dn,this.vmCount=0,B(n,"__ob__",this),Array.isArray(n)?(q?function(n,e){n.__proto__=e}(n,jn):function(n,e,t){for(var a=0,r=t.length;a<r;a++){var i=t[a];B(n,i,e[i])}}(n,jn,Tn),this.observeArray(n)):this.walk(n)};function Cn(n,e){var t;if(c(n)&&!(n instanceof yn))return g(n,"__ob__")&&n.__ob__ instanceof In?t=n.__ob__:kn&&!rn()&&(Array.isArray(n)||p(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new In(n)),e&&t&&t.vmCount++,t}function En(n,e,t,a,r){var i=new dn,o=Object.getOwnPropertyDescriptor(n,e);if(!o||!1!==o.configurable){var l=o&&o.get,s=o&&o.set;l&&!s||2!==arguments.length||(t=n[e]);var c=!r&&Cn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=l?l.call(n):t;return dn.target&&(i.depend(),c&&(c.dep.depend(),Array.isArray(e)&&An(e))),e},set:function(e){var a=l?l.call(n):t;e===a||e!=e&&a!=a||l&&!s||(s?s.call(n,e):t=e,c=!r&&Cn(e),i.notify())}})}}function Sn(n,e,t){if(Array.isArray(n)&&m(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var a=n.__ob__;return n._isVue||a&&a.vmCount?t:a?(En(a.value,e,t),a.dep.notify(),t):(n[e]=t,t)}function zn(n,e){if(Array.isArray(n)&&m(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||g(n,e)&&(delete n[e],t&&t.dep.notify())}}function An(n){for(var e=void 0,t=0,a=n.length;t<a;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&An(e)}In.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)En(n,e[t])},In.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Cn(n[e])};var On=N.optionMergeStrategies;function Ln(n,e){if(!e)return n;for(var t,a,r,i=cn?Reflect.ownKeys(e):Object.keys(e),o=0;o<i.length;o++)"__ob__"!==(t=i[o])&&(a=n[t],r=e[t],g(n,t)?a!==r&&p(a)&&p(r)&&Ln(a,r):Sn(n,t,r));return n}function Pn(n,e,t){return t?function(){var a="function"==typeof e?e.call(t,t):e,r="function"==typeof n?n.call(t,t):n;return a?Ln(a,r):r}:e?n?function(){return Ln("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function $n(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Dn(n,e,t,a){var r=Object.create(n||null);return e?z(r,e):r}On.data=function(n,e,t){return t?Pn(n,e,t):e&&"function"!=typeof e?n:Pn(n,e)},M.forEach((function(n){On[n]=$n})),U.forEach((function(n){On[n+"s"]=Dn})),On.watch=function(n,e,t,a){if(n===en&&(n=void 0),e===en&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var r={};for(var i in z(r,n),e){var o=r[i],l=e[i];o&&!Array.isArray(o)&&(o=[o]),r[i]=o?o.concat(l):Array.isArray(l)?l:[l]}return r},On.props=On.methods=On.inject=On.computed=function(n,e,t,a){if(!n)return e;var r=Object.create(null);return z(r,n),e&&z(r,e),r},On.provide=Pn;var Rn=function(n,e){return void 0===e?n:e};function Un(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var a,r,i={};if(Array.isArray(t))for(a=t.length;a--;)"string"==typeof(r=t[a])&&(i[k(r)]={type:null});else if(p(t))for(var o in t)r=t[o],i[k(o)]=p(r)?r:{type:r};else 0;n.props=i}}(e),function(n,e){var t=n.inject;if(t){var a=n.inject={};if(Array.isArray(t))for(var r=0;r<t.length;r++)a[t[r]]={from:t[r]};else if(p(t))for(var i in t){var o=t[i];a[i]=p(o)?z({from:i},o):{from:o}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var a=e[t];"function"==typeof a&&(e[t]={bind:a,update:a})}}(e),!e._base&&(e.extends&&(n=Un(n,e.extends,t)),e.mixins))for(var a=0,r=e.mixins.length;a<r;a++)n=Un(n,e.mixins[a],t);var i,o={};for(i in n)l(i);for(i in e)g(n,i)||l(i);function l(a){var r=On[a]||Rn;o[a]=r(n[a],e[a],t,a)}return o}function Mn(n,e,t,a){if("string"==typeof t){var r=n[e];if(g(r,t))return r[t];var i=k(t);if(g(r,i))return r[i];var o=w(i);return g(r,o)?r[o]:r[t]||r[i]||r[o]}}function Nn(n,e,t,a){var r=e[n],i=!g(t,n),o=t[n],l=Vn(Boolean,r.type);if(l>-1)if(i&&!g(r,"default"))o=!1;else if(""===o||o===C(n)){var s=Vn(String,r.type);(s<0||l<s)&&(o=!0)}if(void 0===o){o=function(n,e,t){if(!g(e,"default"))return;var a=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof a&&"Function"!==Bn(e.type)?a.call(n):a}(a,r,n);var c=kn;wn(!0),Cn(o),wn(c)}return o}var Fn=/^\s*function (\w+)/;function Bn(n){var e=n&&n.toString().match(Fn);return e?e[1]:""}function Gn(n,e){return Bn(n)===Bn(e)}function Vn(n,e){if(!Array.isArray(e))return Gn(e,n)?0:-1;for(var t=0,a=e.length;t<a;t++)if(Gn(e[t],n))return t;return-1}function qn(n,e,t){fn();try{if(e)for(var a=e;a=a.$parent;){var r=a.$options.errorCaptured;if(r)for(var i=0;i<r.length;i++)try{if(!1===r[i].call(a,n,e,t))return}catch(n){Hn(n,a,"errorCaptured hook")}}Hn(n,e,t)}finally{vn()}}function Wn(n,e,t,a,r){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&f(i)&&!i._handled&&(i.catch((function(n){return qn(n,a,r+" (Promise/async)")})),i._handled=!0)}catch(n){qn(n,a,r)}return i}function Hn(n,e,t){if(N.errorHandler)try{return N.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Kn(e,null,"config.errorHandler")}Kn(n,e,t)}function Kn(n,e,t){if(!W&&!H||"undefined"==typeof console)throw n;console.error(n)}var Xn,Yn=!1,Jn=[],Qn=!1;function Zn(){Qn=!1;var n=Jn.slice(0);Jn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&ln(Promise)){var ne=Promise.resolve();Xn=function(){ne.then(Zn),Z&&setTimeout(O)},Yn=!0}else if(Y||"undefined"==typeof MutationObserver||!ln(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Xn="undefined"!=typeof setImmediate&&ln(setImmediate)?function(){setImmediate(Zn)}:function(){setTimeout(Zn,0)};else{var ee=1,te=new MutationObserver(Zn),ae=document.createTextNode(String(ee));te.observe(ae,{characterData:!0}),Xn=function(){ee=(ee+1)%2,ae.data=String(ee)},Yn=!0}function re(n,e){var t;if(Jn.push((function(){if(n)try{n.call(e)}catch(n){qn(n,e,"nextTick")}else t&&t(e)})),Qn||(Qn=!0,Xn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var ie=new sn;function oe(n){!function n(e,t){var a,r,i=Array.isArray(e);if(!i&&!c(e)||Object.isFrozen(e)||e instanceof yn)return;if(e.__ob__){var o=e.__ob__.dep.id;if(t.has(o))return;t.add(o)}if(i)for(a=e.length;a--;)n(e[a],t);else for(r=Object.keys(e),a=r.length;a--;)n(e[r[a]],t)}(n,ie),ie.clear()}var le=j((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),a="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=a?n.slice(1):n,once:t,capture:a,passive:e}}));function se(n,e){function t(){var n=arguments,a=t.fns;if(!Array.isArray(a))return Wn(a,null,arguments,e,"v-on handler");for(var r=a.slice(),i=0;i<r.length;i++)Wn(r[i],null,n,e,"v-on handler")}return t.fns=n,t}function ce(n,e,t,a,r,o){var s,c,u,p;for(s in n)c=n[s],u=e[s],p=le(s),i(c)||(i(u)?(i(c.fns)&&(c=n[s]=se(c,o)),l(p.once)&&(c=n[s]=r(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==u&&(u.fns=c,n[s]=u));for(s in e)i(n[s])&&a((p=le(s)).name,e[s],p.capture)}function ue(n,e,t){var a;n instanceof yn&&(n=n.data.hook||(n.data.hook={}));var r=n[e];function s(){t.apply(this,arguments),x(a.fns,s)}i(r)?a=se([s]):o(r.fns)&&l(r.merged)?(a=r).fns.push(s):a=se([r,s]),a.merged=!0,n[e]=a}function pe(n,e,t,a,r){if(o(e)){if(g(e,t))return n[t]=e[t],r||delete e[t],!0;if(g(e,a))return n[t]=e[a],r||delete e[a],!0}return!1}function de(n){return s(n)?[xn(n)]:Array.isArray(n)?function n(e,t){var a,r,c,u,p=[];for(a=0;a<e.length;a++)i(r=e[a])||"boolean"==typeof r||(c=p.length-1,u=p[c],Array.isArray(r)?r.length>0&&(me((r=n(r,(t||"")+"_"+a))[0])&&me(u)&&(p[c]=xn(u.text+r[0].text),r.shift()),p.push.apply(p,r)):s(r)?me(u)?p[c]=xn(u.text+r):""!==r&&p.push(xn(r)):me(r)&&me(u)?p[c]=xn(u.text+r.text):(l(e._isVList)&&o(r.tag)&&i(r.key)&&o(t)&&(r.key="__vlist"+t+"_"+a+"__"),p.push(r)));return p}(n):void 0}function me(n){return o(n)&&o(n.text)&&!1===n.isComment}function fe(n,e){if(n){for(var t=Object.create(null),a=cn?Reflect.ownKeys(n):Object.keys(n),r=0;r<a.length;r++){var i=a[r];if("__ob__"!==i){for(var o=n[i].from,l=e;l;){if(l._provided&&g(l._provided,o)){t[i]=l._provided[o];break}l=l.$parent}if(!l)if("default"in n[i]){var s=n[i].default;t[i]="function"==typeof s?s.call(e):s}else 0}}return t}}function ve(n,e){if(!n||!n.length)return{};for(var t={},a=0,r=n.length;a<r;a++){var i=n[a],o=i.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,i.context!==e&&i.fnContext!==e||!o||null==o.slot)(t.default||(t.default=[])).push(i);else{var l=o.slot,s=t[l]||(t[l]=[]);"template"===i.tag?s.push.apply(s,i.children||[]):s.push(i)}}for(var c in t)t[c].every(ye)&&delete t[c];return t}function ye(n){return n.isComment&&!n.asyncFactory||" "===n.text}function be(n){return n.isComment&&n.asyncFactory}function he(n,e,t){var a,i=Object.keys(e).length>0,o=n?!!n.$stable:!i,l=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(o&&t&&t!==r&&l===t.$key&&!i&&!t.$hasNormal)return t;for(var s in a={},n)n[s]&&"$"!==s[0]&&(a[s]=xe(e,s,n[s]))}else a={};for(var c in e)c in a||(a[c]=_e(e,c));return n&&Object.isExtensible(n)&&(n._normalized=a),B(a,"$stable",o),B(a,"$key",l),B(a,"$hasNormal",i),a}function xe(n,e,t){var a=function(){var n=arguments.length?t.apply(null,arguments):t({}),e=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:de(n))&&n[0];return n&&(!e||1===n.length&&e.isComment&&!be(e))?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:a,enumerable:!0,configurable:!0}),a}function _e(n,e){return function(){return n[e]}}function ge(n,e){var t,a,r,i,l;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),a=0,r=n.length;a<r;a++)t[a]=e(n[a],a);else if("number"==typeof n)for(t=new Array(n),a=0;a<n;a++)t[a]=e(a+1,a);else if(c(n))if(cn&&n[Symbol.iterator]){t=[];for(var s=n[Symbol.iterator](),u=s.next();!u.done;)t.push(e(u.value,t.length)),u=s.next()}else for(i=Object.keys(n),t=new Array(i.length),a=0,r=i.length;a<r;a++)l=i[a],t[a]=e(n[l],l,a);return o(t)||(t=[]),t._isVList=!0,t}function je(n,e,t,a){var r,i=this.$scopedSlots[n];i?(t=t||{},a&&(t=z(z({},a),t)),r=i(t)||("function"==typeof e?e():e)):r=this.$slots[n]||("function"==typeof e?e():e);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},r):r}function Te(n){return Mn(this.$options,"filters",n)||P}function ke(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function we(n,e,t,a,r){var i=N.keyCodes[e]||t;return r&&a&&!N.keyCodes[e]?ke(r,a):i?ke(i,n):a?C(a)!==e:void 0===n}function Ie(n,e,t,a,r){if(t)if(c(t)){var i;Array.isArray(t)&&(t=A(t));var o=function(o){if("class"===o||"style"===o||h(o))i=n;else{var l=n.attrs&&n.attrs.type;i=a||N.mustUseProp(e,l,o)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var s=k(o),c=C(o);s in i||c in i||(i[o]=t[o],r&&((n.on||(n.on={}))["update:"+o]=function(n){t[o]=n}))};for(var l in t)o(l)}else;return n}function Ce(n,e){var t=this._staticTrees||(this._staticTrees=[]),a=t[n];return a&&!e||Se(a=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),a}function Ee(n,e,t){return Se(n,"__once__"+e+(t?"_"+t:""),!0),n}function Se(n,e,t){if(Array.isArray(n))for(var a=0;a<n.length;a++)n[a]&&"string"!=typeof n[a]&&ze(n[a],e+"_"+a,t);else ze(n,e,t)}function ze(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function Ae(n,e){if(e)if(p(e)){var t=n.on=n.on?z({},n.on):{};for(var a in e){var r=t[a],i=e[a];t[a]=r?[].concat(r,i):i}}else;return n}function Oe(n,e,t,a){e=e||{$stable:!t};for(var r=0;r<n.length;r++){var i=n[r];Array.isArray(i)?Oe(i,e,t):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return a&&(e.$key=a),e}function Le(n,e){for(var t=0;t<e.length;t+=2){var a=e[t];"string"==typeof a&&a&&(n[e[t]]=e[t+1])}return n}function Pe(n,e){return"string"==typeof n?e+n:n}function $e(n){n._o=Ee,n._n=y,n._s=v,n._l=ge,n._t=je,n._q=$,n._i=D,n._m=Ce,n._f=Te,n._k=we,n._b=Ie,n._v=xn,n._e=hn,n._u=Oe,n._g=Ae,n._d=Le,n._p=Pe}function De(n,e,t,a,i){var o,s=this,c=i.options;g(a,"_uid")?(o=Object.create(a))._original=a:(o=a,a=a._original);var u=l(c._compiled),p=!u;this.data=n,this.props=e,this.children=t,this.parent=a,this.listeners=n.on||r,this.injections=fe(c.inject,a),this.slots=function(){return s.$slots||he(n.scopedSlots,s.$slots=ve(t,a)),s.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return he(n.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=he(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,r){var i=Ge(o,n,e,t,r,p);return i&&!Array.isArray(i)&&(i.fnScopeId=c._scopeId,i.fnContext=a),i}:this._c=function(n,e,t,a){return Ge(o,n,e,t,a,p)}}function Re(n,e,t,a,r){var i=_n(n);return i.fnContext=t,i.fnOptions=a,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function Ue(n,e){for(var t in e)n[k(t)]=e[t]}$e(De.prototype);var Me={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;Me.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},a=n.data.inlineTemplate;o(a)&&(t.render=a.render,t.staticRenderFns=a.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Qe)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,a,i){0;var o=a.data.scopedSlots,l=n.$scopedSlots,s=!!(o&&!o.$stable||l!==r&&!l.$stable||o&&n.$scopedSlots.$key!==o.$key||!o&&n.$scopedSlots.$key),c=!!(i||n.$options._renderChildren||s);n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a);if(n.$options._renderChildren=i,n.$attrs=a.data.attrs||r,n.$listeners=t||r,e&&n.$options.props){wn(!1);for(var u=n._props,p=n.$options._propKeys||[],d=0;d<p.length;d++){var m=p[d],f=n.$options.props;u[m]=Nn(m,f,e,n)}wn(!0),n.$options.propsData=e}t=t||r;var v=n.$options._parentListeners;n.$options._parentListeners=t,Je(n,t,v),c&&(n.$slots=ve(i,a.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,a=n.componentInstance;a._isMounted||(a._isMounted=!0,tt(a,"mounted")),n.data.keepAlive&&(t._isMounted?((e=a)._inactive=!1,rt.push(e)):et(a,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,nt(e)))return;if(!e._inactive){e._inactive=!0;for(var a=0;a<e.$children.length;a++)n(e.$children[a]);tt(e,"deactivated")}}(e,!0):e.$destroy())}},Ne=Object.keys(Me);function Fe(n,e,t,a,s){if(!i(n)){var u=t.$options._base;if(c(n)&&(n=u.extend(n)),"function"==typeof n){var p;if(i(n.cid)&&void 0===(n=function(n,e){if(l(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=qe;t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(l(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var a=n.owners=[t],r=!0,s=null,u=null;t.$on("hook:destroyed",(function(){return x(a,t)}));var p=function(n){for(var e=0,t=a.length;e<t;e++)a[e].$forceUpdate();n&&(a.length=0,null!==s&&(clearTimeout(s),s=null),null!==u&&(clearTimeout(u),u=null))},d=R((function(t){n.resolved=We(t,e),r?a.length=0:p(!0)})),m=R((function(e){o(n.errorComp)&&(n.error=!0,p(!0))})),v=n(d,m);return c(v)&&(f(v)?i(n.resolved)&&v.then(d,m):f(v.component)&&(v.component.then(d,m),o(v.error)&&(n.errorComp=We(v.error,e)),o(v.loading)&&(n.loadingComp=We(v.loading,e),0===v.delay?n.loading=!0:s=setTimeout((function(){s=null,i(n.resolved)&&i(n.error)&&(n.loading=!0,p(!1))}),v.delay||200)),o(v.timeout)&&(u=setTimeout((function(){u=null,i(n.resolved)&&m(null)}),v.timeout)))),r=!1,n.loading?n.loadingComp:n.resolved}}(p=n,u)))return function(n,e,t,a,r){var i=hn();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:a,tag:r},i}(p,e,t,a,s);e=e||{},kt(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",a=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var r=e.on||(e.on={}),i=r[a],l=e.model.callback;o(i)?(Array.isArray(i)?-1===i.indexOf(l):i!==l)&&(r[a]=[l].concat(i)):r[a]=l}(n.options,e);var d=function(n,e,t){var a=e.options.props;if(!i(a)){var r={},l=n.attrs,s=n.props;if(o(l)||o(s))for(var c in a){var u=C(c);pe(r,s,c,u,!0)||pe(r,l,c,u,!1)}return r}}(e,n);if(l(n.options.functional))return function(n,e,t,a,i){var l=n.options,s={},c=l.props;if(o(c))for(var u in c)s[u]=Nn(u,c,e||r);else o(t.attrs)&&Ue(s,t.attrs),o(t.props)&&Ue(s,t.props);var p=new De(t,s,i,a,n),d=l.render.call(null,p._c,p);if(d instanceof yn)return Re(d,t,p.parent,l,p);if(Array.isArray(d)){for(var m=de(d)||[],f=new Array(m.length),v=0;v<m.length;v++)f[v]=Re(m[v],t,p.parent,l,p);return f}}(n,d,e,t,a);var m=e.on;if(e.on=e.nativeOn,l(n.options.abstract)){var v=e.slot;e={},v&&(e.slot=v)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Ne.length;t++){var a=Ne[t],r=e[a],i=Me[a];r===i||r&&r._merged||(e[a]=r?Be(i,r):i)}}(e);var y=n.options.name||s;return new yn("vue-component-"+n.cid+(y?"-"+y:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:d,listeners:m,tag:s,children:a},p)}}}function Be(n,e){var t=function(t,a){n(t,a),e(t,a)};return t._merged=!0,t}function Ge(n,e,t,a,r,u){return(Array.isArray(t)||s(t))&&(r=a,a=t,t=void 0),l(u)&&(r=2),function(n,e,t,a,r){if(o(t)&&o(t.__ob__))return hn();o(t)&&o(t.is)&&(e=t.is);if(!e)return hn();0;Array.isArray(a)&&"function"==typeof a[0]&&((t=t||{}).scopedSlots={default:a[0]},a.length=0);2===r?a=de(a):1===r&&(a=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(a));var s,u;if("string"==typeof e){var p;u=n.$vnode&&n.$vnode.ns||N.getTagNamespace(e),s=N.isReservedTag(e)?new yn(N.parsePlatformTagName(e),t,a,void 0,void 0,n):t&&t.pre||!o(p=Mn(n.$options,"components",e))?new yn(e,t,a,void 0,void 0,n):Fe(p,t,n,a,e)}else s=Fe(e,t,n,a);return Array.isArray(s)?s:o(s)?(o(u)&&function n(e,t,a){e.ns=t,"foreignObject"===e.tag&&(t=void 0,a=!0);if(o(e.children))for(var r=0,s=e.children.length;r<s;r++){var c=e.children[r];o(c.tag)&&(i(c.ns)||l(a)&&"svg"!==c.tag)&&n(c,t,a)}}(s,u),o(t)&&function(n){c(n.style)&&oe(n.style);c(n.class)&&oe(n.class)}(t),s):hn()}(n,e,t,a,r)}var Ve,qe=null;function We(n,e){return(n.__esModule||cn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),c(n)?e.extend(n):n}function He(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||be(t)))return t}}function Ke(n,e){Ve.$on(n,e)}function Xe(n,e){Ve.$off(n,e)}function Ye(n,e){var t=Ve;return function a(){var r=e.apply(null,arguments);null!==r&&t.$off(n,a)}}function Je(n,e,t){Ve=n,ce(e,t||{},Ke,Xe,Ye,n),Ve=void 0}var Qe=null;function Ze(n){var e=Qe;return Qe=n,function(){Qe=e}}function nt(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function et(n,e){if(e){if(n._directInactive=!1,nt(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)et(n.$children[t]);tt(n,"activated")}}function tt(n,e){fn();var t=n.$options[e],a=e+" hook";if(t)for(var r=0,i=t.length;r<i;r++)Wn(t[r],n,null,n,a);n._hasHookEvent&&n.$emit("hook:"+e),vn()}var at=[],rt=[],it={},ot=!1,lt=!1,st=0;var ct=0,ut=Date.now;if(W&&!Y){var pt=window.performance;pt&&"function"==typeof pt.now&&ut()>document.createEvent("Event").timeStamp&&(ut=function(){return pt.now()})}function dt(){var n,e;for(ct=ut(),lt=!0,at.sort((function(n,e){return n.id-e.id})),st=0;st<at.length;st++)(n=at[st]).before&&n.before(),e=n.id,it[e]=null,n.run();var t=rt.slice(),a=at.slice();st=at.length=rt.length=0,it={},ot=lt=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,et(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],a=t.vm;a._watcher===t&&a._isMounted&&!a._isDestroyed&&tt(a,"updated")}}(a),on&&N.devtools&&on.emit("flush")}var mt=0,ft=function(n,e,t,a,r){this.vm=n,r&&(n._watcher=this),n._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++mt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new sn,this.newDepIds=new sn,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!G.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()};ft.prototype.get=function(){var n;fn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;qn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&oe(n),vn(),this.cleanupDeps()}return n},ft.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},ft.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},ft.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==it[e]){if(it[e]=!0,lt){for(var t=at.length-1;t>st&&at[t].id>n.id;)t--;at.splice(t+1,0,n)}else at.push(n);ot||(ot=!0,re(dt))}}(this)},ft.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||c(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'+this.expression+'"';Wn(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},ft.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},ft.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},ft.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||x(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var vt={enumerable:!0,configurable:!0,get:O,set:O};function yt(n,e,t){vt.get=function(){return this[e][t]},vt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,vt)}function bt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},a=n._props={},r=n.$options._propKeys=[];n.$parent&&wn(!1);var i=function(i){r.push(i);var o=Nn(i,e,t,n);En(a,i,o),i in n||yt(n,"_props",i)};for(var o in e)i(o);wn(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?O:E(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;p(e=n._data="function"==typeof e?function(n,e){fn();try{return n.call(e,e)}catch(n){return qn(n,e,"data()"),{}}finally{vn()}}(e,n):e||{})||(e={});var t=Object.keys(e),a=n.$options.props,r=(n.$options.methods,t.length);for(;r--;){var i=t[r];0,a&&g(a,i)||(o=void 0,36!==(o=(i+"").charCodeAt(0))&&95!==o&&yt(n,"_data",i))}var o;Cn(e,!0)}(n):Cn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),a=rn();for(var r in e){var i=e[r],o="function"==typeof i?i:i.get;0,a||(t[r]=new ft(n,o||O,O,ht)),r in n||xt(n,r,i)}}(n,e.computed),e.watch&&e.watch!==en&&function(n,e){for(var t in e){var a=e[t];if(Array.isArray(a))for(var r=0;r<a.length;r++)jt(n,t,a[r]);else jt(n,t,a)}}(n,e.watch)}var ht={lazy:!0};function xt(n,e,t){var a=!rn();"function"==typeof t?(vt.get=a?_t(e):gt(t),vt.set=O):(vt.get=t.get?a&&!1!==t.cache?_t(e):gt(t.get):O,vt.set=t.set||O),Object.defineProperty(n,e,vt)}function _t(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),dn.target&&e.depend(),e.value}}function gt(n){return function(){return n.call(this,this)}}function jt(n,e,t,a){return p(t)&&(a=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,a)}var Tt=0;function kt(n){var e=n.options;if(n.super){var t=kt(n.super);if(t!==n.superOptions){n.superOptions=t;var a=function(n){var e,t=n.options,a=n.sealedOptions;for(var r in t)t[r]!==a[r]&&(e||(e={}),e[r]=t[r]);return e}(n);a&&z(n.extendOptions,a),(e=n.options=Un(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function wt(n){this._init(n)}function It(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,a=t.cid,r=n._Ctor||(n._Ctor={});if(r[a])return r[a];var i=n.name||t.options.name;var o=function(n){this._init(n)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=e++,o.options=Un(t.options,n),o.super=t,o.options.props&&function(n){var e=n.options.props;for(var t in e)yt(n.prototype,"_props",t)}(o),o.options.computed&&function(n){var e=n.options.computed;for(var t in e)xt(n.prototype,t,e[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,U.forEach((function(n){o[n]=t[n]})),i&&(o.options.components[i]=o),o.superOptions=t.options,o.extendOptions=n,o.sealedOptions=z({},o.options),r[a]=o,o}}function Ct(n){return n&&(n.Ctor.options.name||n.tag)}function Et(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!d(n)&&n.test(e)}function St(n,e){var t=n.cache,a=n.keys,r=n._vnode;for(var i in t){var o=t[i];if(o){var l=o.name;l&&!e(l)&&zt(t,i,a,r)}}}function zt(n,e,t,a){var r=n[e];!r||a&&r.tag===a.tag||r.componentInstance.$destroy(),n[e]=null,x(t,e)}wt.prototype._init=function(n){var e=this;e._uid=Tt++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),a=e._parentVnode;t.parent=e.parent,t._parentVnode=a;var r=a.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Un(kt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Je(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,a=t&&t.context;n.$slots=ve(e._renderChildren,a),n.$scopedSlots=r,n._c=function(e,t,a,r){return Ge(n,e,t,a,r,!1)},n.$createElement=function(e,t,a,r){return Ge(n,e,t,a,r,!0)};var i=t&&t.data;En(n,"$attrs",i&&i.attrs||r,null,!0),En(n,"$listeners",e._parentListeners||r,null,!0)}(e),tt(e,"beforeCreate"),function(n){var e=fe(n.$options.inject,n);e&&(wn(!1),Object.keys(e).forEach((function(t){En(n,t,e[t])})),wn(!0))}(e),bt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),tt(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Sn,n.prototype.$delete=zn,n.prototype.$watch=function(n,e,t){if(p(e))return jt(this,n,e,t);(t=t||{}).user=!0;var a=new ft(this,n,e,t);if(t.immediate){var r='callback for immediate watcher "'+a.expression+'"';fn(),Wn(e,this,[a.value],this,r),vn()}return function(){a.teardown()}}}(wt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var a=this;if(Array.isArray(n))for(var r=0,i=n.length;r<i;r++)a.$on(n[r],t);else(a._events[n]||(a._events[n]=[])).push(t),e.test(n)&&(a._hasHookEvent=!0);return a},n.prototype.$once=function(n,e){var t=this;function a(){t.$off(n,a),e.apply(t,arguments)}return a.fn=e,t.$on(n,a),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var a=0,r=n.length;a<r;a++)t.$off(n[a],e);return t}var i,o=t._events[n];if(!o)return t;if(!e)return t._events[n]=null,t;for(var l=o.length;l--;)if((i=o[l])===e||i.fn===e){o.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?S(t):t;for(var a=S(arguments,1),r='event handler for "'+n+'"',i=0,o=t.length;i<o;i++)Wn(t[i],e,a,e,r)}return e}}(wt),function(n){n.prototype._update=function(n,e){var t=this,a=t.$el,r=t._vnode,i=Ze(t);t._vnode=n,t.$el=r?t.__patch__(r,n):t.__patch__(t.$el,n,e,!1),i(),a&&(a.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){tt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||x(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),tt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(wt),function(n){$e(n.prototype),n.prototype.$nextTick=function(n){return re(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,a=t.render,r=t._parentVnode;r&&(e.$scopedSlots=he(r.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=r;try{qe=e,n=a.call(e._renderProxy,e.$createElement)}catch(t){qn(t,e,"render"),n=e._vnode}finally{qe=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof yn||(n=hn()),n.parent=r,n}}(wt);var At=[String,RegExp,Array],Ot={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:At,exclude:At,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,a=this.keyToCache;if(t){var r=t.tag,i=t.componentInstance,o=t.componentOptions;n[a]={name:Ct(o),tag:r,componentInstance:i},e.push(a),this.max&&e.length>parseInt(this.max)&&zt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)zt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){St(n,(function(n){return Et(e,n)}))})),this.$watch("exclude",(function(e){St(n,(function(n){return!Et(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=He(n),t=e&&e.componentOptions;if(t){var a=Ct(t),r=this.include,i=this.exclude;if(r&&(!a||!Et(r,a))||i&&a&&Et(i,a))return e;var o=this.cache,l=this.keys,s=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;o[s]?(e.componentInstance=o[s].componentInstance,x(l,s),l.push(s)):(this.vnodeToCache=e,this.keyToCache=s),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return N}};Object.defineProperty(n,"config",e),n.util={warn:un,extend:z,mergeOptions:Un,defineReactive:En},n.set=Sn,n.delete=zn,n.nextTick=re,n.observable=function(n){return Cn(n),n},n.options=Object.create(null),U.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,z(n.options.components,Ot),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=S(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Un(this.options,n),this}}(n),It(n),function(n){U.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(wt),Object.defineProperty(wt.prototype,"$isServer",{get:rn}),Object.defineProperty(wt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(wt,"FunctionalRenderContext",{value:De}),wt.version="2.6.14";var Lt=b("style,class"),Pt=b("input,textarea,option,select,progress"),$t=b("contenteditable,draggable,spellcheck"),Dt=b("events,caret,typing,plaintext-only"),Rt=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Ut="http://www.w3.org/1999/xlink",Mt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Nt=function(n){return Mt(n)?n.slice(6,n.length):""},Ft=function(n){return null==n||!1===n};function Bt(n){for(var e=n.data,t=n,a=n;o(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(e=Gt(a.data,e));for(;o(t=t.parent);)t&&t.data&&(e=Gt(e,t.data));return function(n,e){if(o(n)||o(e))return Vt(n,qt(e));return""}(e.staticClass,e.class)}function Gt(n,e){return{staticClass:Vt(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function Vt(n,e){return n?e?n+" "+e:n:e||""}function qt(n){return Array.isArray(n)?function(n){for(var e,t="",a=0,r=n.length;a<r;a++)o(e=qt(n[a]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):c(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Wt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Ht=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Kt=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Xt=function(n){return Ht(n)||Kt(n)};var Yt=Object.create(null);var Jt=b("text,number,password,search,email,tel,url");var Qt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Wt[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Zt={create:function(n,e){na(e)},update:function(n,e){n.data.ref!==e.data.ref&&(na(n,!0),na(e))},destroy:function(n){na(n,!0)}};function na(n,e){var t=n.data.ref;if(o(t)){var a=n.context,r=n.componentInstance||n.elm,i=a.$refs;e?Array.isArray(i[t])?x(i[t],r):i[t]===r&&(i[t]=void 0):n.data.refInFor?Array.isArray(i[t])?i[t].indexOf(r)<0&&i[t].push(r):i[t]=[r]:i[t]=r}}var ea=new yn("",{},[]),ta=["create","activate","update","remove","destroy"];function aa(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,a=o(t=n.data)&&o(t=t.attrs)&&t.type,r=o(t=e.data)&&o(t=t.attrs)&&t.type;return a===r||Jt(a)&&Jt(r)}(n,e)||l(n.isAsyncPlaceholder)&&i(e.asyncFactory.error))}function ra(n,e,t){var a,r,i={};for(a=e;a<=t;++a)o(r=n[a].key)&&(i[r]=a);return i}var ia={create:oa,update:oa,destroy:function(n){oa(n,ea)}};function oa(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,a,r,i=n===ea,o=e===ea,l=sa(n.data.directives,n.context),s=sa(e.data.directives,e.context),c=[],u=[];for(t in s)a=l[t],r=s[t],a?(r.oldValue=a.value,r.oldArg=a.arg,ua(r,"update",e,n),r.def&&r.def.componentUpdated&&u.push(r)):(ua(r,"bind",e,n),r.def&&r.def.inserted&&c.push(r));if(c.length){var p=function(){for(var t=0;t<c.length;t++)ua(c[t],"inserted",e,n)};i?ue(e,"insert",p):p()}u.length&&ue(e,"postpatch",(function(){for(var t=0;t<u.length;t++)ua(u[t],"componentUpdated",e,n)}));if(!i)for(t in l)s[t]||ua(l[t],"unbind",n,n,o)}(n,e)}var la=Object.create(null);function sa(n,e){var t,a,r=Object.create(null);if(!n)return r;for(t=0;t<n.length;t++)(a=n[t]).modifiers||(a.modifiers=la),r[ca(a)]=a,a.def=Mn(e.$options,"directives",a.name);return r}function ca(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function ua(n,e,t,a,r){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,a,r)}catch(a){qn(a,t.context,"directive "+n.name+" "+e+" hook")}}var pa=[Zt,ia];function da(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||i(n.data.attrs)&&i(e.data.attrs))){var a,r,l=e.elm,s=n.data.attrs||{},c=e.data.attrs||{};for(a in o(c.__ob__)&&(c=e.data.attrs=z({},c)),c)r=c[a],s[a]!==r&&ma(l,a,r,e.data.pre);for(a in(Y||Q)&&c.value!==s.value&&ma(l,"value",c.value),s)i(c[a])&&(Mt(a)?l.removeAttributeNS(Ut,Nt(a)):$t(a)||l.removeAttribute(a))}}function ma(n,e,t,a){a||n.tagName.indexOf("-")>-1?fa(n,e,t):Rt(e)?Ft(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):$t(e)?n.setAttribute(e,function(n,e){return Ft(e)||"false"===e?"false":"contenteditable"===n&&Dt(e)?e:"true"}(e,t)):Mt(e)?Ft(t)?n.removeAttributeNS(Ut,Nt(e)):n.setAttributeNS(Ut,e,t):fa(n,e,t)}function fa(n,e,t){if(Ft(t))n.removeAttribute(e);else{if(Y&&!J&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var a=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",a)};n.addEventListener("input",a),n.__ieph=!0}n.setAttribute(e,t)}}var va={create:da,update:da};function ya(n,e){var t=e.elm,a=e.data,r=n.data;if(!(i(a.staticClass)&&i(a.class)&&(i(r)||i(r.staticClass)&&i(r.class)))){var l=Bt(e),s=t._transitionClasses;o(s)&&(l=Vt(l,qt(s))),l!==t._prevClass&&(t.setAttribute("class",l),t._prevClass=l)}}var ba,ha={create:ya,update:ya};function xa(n,e,t){var a=ba;return function r(){var i=e.apply(null,arguments);null!==i&&ja(n,r,t,a)}}var _a=Yn&&!(nn&&Number(nn[1])<=53);function ga(n,e,t,a){if(_a){var r=ct,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=r||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}ba.addEventListener(n,e,tn?{capture:t,passive:a}:t)}function ja(n,e,t,a){(a||ba).removeEventListener(n,e._wrapper||e,t)}function Ta(n,e){if(!i(n.data.on)||!i(e.data.on)){var t=e.data.on||{},a=n.data.on||{};ba=e.elm,function(n){if(o(n.__r)){var e=Y?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),ce(t,a,ga,ja,xa,e.context),ba=void 0}}var ka,wa={create:Ta,update:Ta};function Ia(n,e){if(!i(n.data.domProps)||!i(e.data.domProps)){var t,a,r=e.elm,l=n.data.domProps||{},s=e.data.domProps||{};for(t in o(s.__ob__)&&(s=e.data.domProps=z({},s)),l)t in s||(r[t]="");for(t in s){if(a=s[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),a===l[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=a;var c=i(a)?"":String(a);Ca(r,c)&&(r.value=c)}else if("innerHTML"===t&&Kt(r.tagName)&&i(r.innerHTML)){(ka=ka||document.createElement("div")).innerHTML="<svg>"+a+"</svg>";for(var u=ka.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;u.firstChild;)r.appendChild(u.firstChild)}else if(a!==l[t])try{r[t]=a}catch(n){}}}}function Ca(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,a=n._vModifiers;if(o(a)){if(a.number)return y(t)!==y(e);if(a.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Ea={create:Ia,update:Ia},Sa=j((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var a=n.split(t);a.length>1&&(e[a[0].trim()]=a[1].trim())}})),e}));function za(n){var e=Aa(n.style);return n.staticStyle?z(n.staticStyle,e):e}function Aa(n){return Array.isArray(n)?A(n):"string"==typeof n?Sa(n):n}var Oa,La=/^--/,Pa=/\s*!important$/,$a=function(n,e,t){if(La.test(e))n.style.setProperty(e,t);else if(Pa.test(t))n.style.setProperty(C(e),t.replace(Pa,""),"important");else{var a=Ra(e);if(Array.isArray(t))for(var r=0,i=t.length;r<i;r++)n.style[a]=t[r];else n.style[a]=t}},Da=["Webkit","Moz","ms"],Ra=j((function(n){if(Oa=Oa||document.createElement("div").style,"filter"!==(n=k(n))&&n in Oa)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Da.length;t++){var a=Da[t]+e;if(a in Oa)return a}}));function Ua(n,e){var t=e.data,a=n.data;if(!(i(t.staticStyle)&&i(t.style)&&i(a.staticStyle)&&i(a.style))){var r,l,s=e.elm,c=a.staticStyle,u=a.normalizedStyle||a.style||{},p=c||u,d=Aa(e.data.style)||{};e.data.normalizedStyle=o(d.__ob__)?z({},d):d;var m=function(n,e){var t,a={};if(e)for(var r=n;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=za(r.data))&&z(a,t);(t=za(n.data))&&z(a,t);for(var i=n;i=i.parent;)i.data&&(t=za(i.data))&&z(a,t);return a}(e,!0);for(l in p)i(m[l])&&$a(s,l,"");for(l in m)(r=m[l])!==p[l]&&$a(s,l,null==r?"":r)}}var Ma={create:Ua,update:Ua},Na=/\s+/;function Fa(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Na).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Ba(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Na).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",a=" "+e+" ";t.indexOf(a)>=0;)t=t.replace(a," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Ga(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&z(e,Va(n.name||"v")),z(e,n),e}return"string"==typeof n?Va(n):void 0}}var Va=j((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),qa=W&&!J,Wa="transition",Ha="transitionend",Ka="animation",Xa="animationend";qa&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Wa="WebkitTransition",Ha="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Ka="WebkitAnimation",Xa="webkitAnimationEnd"));var Ya=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Ja(n){Ya((function(){Ya(n)}))}function Qa(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Fa(n,e))}function Za(n,e){n._transitionClasses&&x(n._transitionClasses,e),Ba(n,e)}function nr(n,e,t){var a=tr(n,e),r=a.type,i=a.timeout,o=a.propCount;if(!r)return t();var l="transition"===r?Ha:Xa,s=0,c=function(){n.removeEventListener(l,u),t()},u=function(e){e.target===n&&++s>=o&&c()};setTimeout((function(){s<o&&c()}),i+1),n.addEventListener(l,u)}var er=/\b(transform|all)(,|$)/;function tr(n,e){var t,a=window.getComputedStyle(n),r=(a[Wa+"Delay"]||"").split(", "),i=(a[Wa+"Duration"]||"").split(", "),o=ar(r,i),l=(a[Ka+"Delay"]||"").split(", "),s=(a[Ka+"Duration"]||"").split(", "),c=ar(l,s),u=0,p=0;return"transition"===e?o>0&&(t="transition",u=o,p=i.length):"animation"===e?c>0&&(t="animation",u=c,p=s.length):p=(t=(u=Math.max(o,c))>0?o>c?"transition":"animation":null)?"transition"===t?i.length:s.length:0,{type:t,timeout:u,propCount:p,hasTransform:"transition"===t&&er.test(a[Wa+"Property"])}}function ar(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return rr(e)+rr(n[t])})))}function rr(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function ir(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var a=Ga(n.data.transition);if(!i(a)&&!o(t._enterCb)&&1===t.nodeType){for(var r=a.css,l=a.type,s=a.enterClass,u=a.enterToClass,p=a.enterActiveClass,d=a.appearClass,m=a.appearToClass,f=a.appearActiveClass,v=a.beforeEnter,b=a.enter,h=a.afterEnter,x=a.enterCancelled,_=a.beforeAppear,g=a.appear,j=a.afterAppear,T=a.appearCancelled,k=a.duration,w=Qe,I=Qe.$vnode;I&&I.parent;)w=I.context,I=I.parent;var C=!w._isMounted||!n.isRootInsert;if(!C||g||""===g){var E=C&&d?d:s,S=C&&f?f:p,z=C&&m?m:u,A=C&&_||v,O=C&&"function"==typeof g?g:b,L=C&&j||h,P=C&&T||x,$=y(c(k)?k.enter:k);0;var D=!1!==r&&!J,U=sr(O),M=t._enterCb=R((function(){D&&(Za(t,z),Za(t,S)),M.cancelled?(D&&Za(t,E),P&&P(t)):L&&L(t),t._enterCb=null}));n.data.show||ue(n,"insert",(function(){var e=t.parentNode,a=e&&e._pending&&e._pending[n.key];a&&a.tag===n.tag&&a.elm._leaveCb&&a.elm._leaveCb(),O&&O(t,M)})),A&&A(t),D&&(Qa(t,E),Qa(t,S),Ja((function(){Za(t,E),M.cancelled||(Qa(t,z),U||(lr($)?setTimeout(M,$):nr(t,l,M)))}))),n.data.show&&(e&&e(),O&&O(t,M)),D||U||M()}}}function or(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var a=Ga(n.data.transition);if(i(a)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var r=a.css,l=a.type,s=a.leaveClass,u=a.leaveToClass,p=a.leaveActiveClass,d=a.beforeLeave,m=a.leave,f=a.afterLeave,v=a.leaveCancelled,b=a.delayLeave,h=a.duration,x=!1!==r&&!J,_=sr(m),g=y(c(h)?h.leave:h);0;var j=t._leaveCb=R((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),x&&(Za(t,u),Za(t,p)),j.cancelled?(x&&Za(t,s),v&&v(t)):(e(),f&&f(t)),t._leaveCb=null}));b?b(T):T()}function T(){j.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),x&&(Qa(t,s),Qa(t,p),Ja((function(){Za(t,s),j.cancelled||(Qa(t,u),_||(lr(g)?setTimeout(j,g):nr(t,l,j)))}))),m&&m(t,j),x||_||j())}}function lr(n){return"number"==typeof n&&!isNaN(n)}function sr(n){if(i(n))return!1;var e=n.fns;return o(e)?sr(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function cr(n,e){!0!==e.data.show&&ir(e)}var ur=function(n){var e,t,a={},r=n.modules,c=n.nodeOps;for(e=0;e<ta.length;++e)for(a[ta[e]]=[],t=0;t<r.length;++t)o(r[t][ta[e]])&&a[ta[e]].push(r[t][ta[e]]);function u(n){var e=c.parentNode(n);o(e)&&c.removeChild(e,n)}function p(n,e,t,r,i,s,u){if(o(n.elm)&&o(s)&&(n=s[u]=_n(n)),n.isRootInsert=!i,!function(n,e,t,r){var i=n.data;if(o(i)){var s=o(n.componentInstance)&&i.keepAlive;if(o(i=i.hook)&&o(i=i.init)&&i(n,!1),o(n.componentInstance))return d(n,e),m(t,n.elm,r),l(s)&&function(n,e,t,r){var i,l=n;for(;l.componentInstance;)if(l=l.componentInstance._vnode,o(i=l.data)&&o(i=i.transition)){for(i=0;i<a.activate.length;++i)a.activate[i](ea,l);e.push(l);break}m(t,n.elm,r)}(n,e,t,r),!0}}(n,e,t,r)){var p=n.data,v=n.children,b=n.tag;o(b)?(n.elm=n.ns?c.createElementNS(n.ns,b):c.createElement(b,n),h(n),f(n,v,e),o(p)&&y(n,e),m(t,n.elm,r)):l(n.isComment)?(n.elm=c.createComment(n.text),m(t,n.elm,r)):(n.elm=c.createTextNode(n.text),m(t,n.elm,r))}}function d(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,v(n)?(y(n,e),h(n)):(na(n),e.push(n))}function m(n,e,t){o(n)&&(o(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function f(n,e,t){if(Array.isArray(e)){0;for(var a=0;a<e.length;++a)p(e[a],t,n.elm,null,!0,e,a)}else s(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function v(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function y(n,t){for(var r=0;r<a.create.length;++r)a.create[r](ea,n);o(e=n.data.hook)&&(o(e.create)&&e.create(ea,n),o(e.insert)&&t.push(n))}function h(n){var e;if(o(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;o(e=Qe)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function x(n,e,t,a,r,i){for(;a<=r;++a)p(t[a],i,n,e,!1,t,a)}function _(n){var e,t,r=n.data;if(o(r))for(o(e=r.hook)&&o(e=e.destroy)&&e(n),e=0;e<a.destroy.length;++e)a.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)_(n.children[t])}function g(n,e,t){for(;e<=t;++e){var a=n[e];o(a)&&(o(a.tag)?(j(a),_(a)):u(a.elm))}}function j(n,e){if(o(e)||o(n.data)){var t,r=a.remove.length+1;for(o(e)?e.listeners+=r:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,r),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&j(t,e),t=0;t<a.remove.length;++t)a.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else u(n.elm)}function T(n,e,t,a){for(var r=t;r<a;r++){var i=e[r];if(o(i)&&aa(n,i))return r}}function k(n,e,t,r,s,u){if(n!==e){o(e.elm)&&o(r)&&(e=r[s]=_n(e));var d=e.elm=n.elm;if(l(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?C(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(l(e.isStatic)&&l(n.isStatic)&&e.key===n.key&&(l(e.isCloned)||l(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,f=e.data;o(f)&&o(m=f.hook)&&o(m=m.prepatch)&&m(n,e);var y=n.children,b=e.children;if(o(f)&&v(e)){for(m=0;m<a.update.length;++m)a.update[m](n,e);o(m=f.hook)&&o(m=m.update)&&m(n,e)}i(e.text)?o(y)&&o(b)?y!==b&&function(n,e,t,a,r){var l,s,u,d=0,m=0,f=e.length-1,v=e[0],y=e[f],b=t.length-1,h=t[0],_=t[b],j=!r;for(0;d<=f&&m<=b;)i(v)?v=e[++d]:i(y)?y=e[--f]:aa(v,h)?(k(v,h,a,t,m),v=e[++d],h=t[++m]):aa(y,_)?(k(y,_,a,t,b),y=e[--f],_=t[--b]):aa(v,_)?(k(v,_,a,t,b),j&&c.insertBefore(n,v.elm,c.nextSibling(y.elm)),v=e[++d],_=t[--b]):aa(y,h)?(k(y,h,a,t,m),j&&c.insertBefore(n,y.elm,v.elm),y=e[--f],h=t[++m]):(i(l)&&(l=ra(e,d,f)),i(s=o(h.key)?l[h.key]:T(h,e,d,f))?p(h,a,n,v.elm,!1,t,m):aa(u=e[s],h)?(k(u,h,a,t,m),e[s]=void 0,j&&c.insertBefore(n,u.elm,v.elm)):p(h,a,n,v.elm,!1,t,m),h=t[++m]);d>f?x(n,i(t[b+1])?null:t[b+1].elm,t,m,b,a):m>b&&g(e,d,f)}(d,y,b,t,u):o(b)?(o(n.text)&&c.setTextContent(d,""),x(d,null,b,0,b.length-1,t)):o(y)?g(y,0,y.length-1):o(n.text)&&c.setTextContent(d,""):n.text!==e.text&&c.setTextContent(d,e.text),o(f)&&o(m=f.hook)&&o(m=m.postpatch)&&m(n,e)}}}function w(n,e,t){if(l(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var a=0;a<e.length;++a)e[a].data.hook.insert(e[a])}var I=b("attrs,class,staticClass,staticStyle,key");function C(n,e,t,a){var r,i=e.tag,s=e.data,c=e.children;if(a=a||s&&s.pre,e.elm=n,l(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(s)&&(o(r=s.hook)&&o(r=r.init)&&r(e,!0),o(r=e.componentInstance)))return d(e,t),!0;if(o(i)){if(o(c))if(n.hasChildNodes())if(o(r=s)&&o(r=r.domProps)&&o(r=r.innerHTML)){if(r!==n.innerHTML)return!1}else{for(var u=!0,p=n.firstChild,m=0;m<c.length;m++){if(!p||!C(p,c[m],t,a)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else f(e,c,t);if(o(s)){var v=!1;for(var b in s)if(!I(b)){v=!0,y(e,t);break}!v&&s.class&&oe(s.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,r){if(!i(e)){var s,u=!1,d=[];if(i(n))u=!0,p(e,d);else{var m=o(n.nodeType);if(!m&&aa(n,e))k(n,e,d,null,null,r);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),l(t)&&C(n,e,d))return w(e,d,!0),n;s=n,n=new yn(c.tagName(s).toLowerCase(),{},[],void 0,s)}var f=n.elm,y=c.parentNode(f);if(p(e,d,f._leaveCb?null:y,c.nextSibling(f)),o(e.parent))for(var b=e.parent,h=v(e);b;){for(var x=0;x<a.destroy.length;++x)a.destroy[x](b);if(b.elm=e.elm,h){for(var j=0;j<a.create.length;++j)a.create[j](ea,b);var T=b.data.hook.insert;if(T.merged)for(var I=1;I<T.fns.length;I++)T.fns[I]()}else na(b);b=b.parent}o(y)?g([n],0,0):o(n.tag)&&_(n)}}return w(e,d,u),e.elm}o(n)&&_(n)}}({nodeOps:Qt,modules:[va,ha,wa,Ea,Ma,W?{create:cr,activate:cr,remove:function(n,e){!0!==n.data.show?or(n,e):e()}}:{}].concat(pa)});J&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&hr(n,"input")}));var pr={inserted:function(n,e,t,a){"select"===t.tag?(a.elm&&!a.elm._vOptions?ue(t,"postpatch",(function(){pr.componentUpdated(n,e,t)})):dr(n,e,t.context),n._vOptions=[].map.call(n.options,vr)):("textarea"===t.tag||Jt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",yr),n.addEventListener("compositionend",br),n.addEventListener("change",br),J&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){dr(n,e,t.context);var a=n._vOptions,r=n._vOptions=[].map.call(n.options,vr);if(r.some((function(n,e){return!$(n,a[e])})))(n.multiple?e.value.some((function(n){return fr(n,r)})):e.value!==e.oldValue&&fr(e.value,r))&&hr(n,"change")}}};function dr(n,e,t){mr(n,e,t),(Y||Q)&&setTimeout((function(){mr(n,e,t)}),0)}function mr(n,e,t){var a=e.value,r=n.multiple;if(!r||Array.isArray(a)){for(var i,o,l=0,s=n.options.length;l<s;l++)if(o=n.options[l],r)i=D(a,vr(o))>-1,o.selected!==i&&(o.selected=i);else if($(vr(o),a))return void(n.selectedIndex!==l&&(n.selectedIndex=l));r||(n.selectedIndex=-1)}}function fr(n,e){return e.every((function(e){return!$(e,n)}))}function vr(n){return"_value"in n?n._value:n.value}function yr(n){n.target.composing=!0}function br(n){n.target.composing&&(n.target.composing=!1,hr(n.target,"input"))}function hr(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function xr(n){return!n.componentInstance||n.data&&n.data.transition?n:xr(n.componentInstance._vnode)}var _r={model:pr,show:{bind:function(n,e,t){var a=e.value,r=(t=xr(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;a&&r?(t.data.show=!0,ir(t,(function(){n.style.display=i}))):n.style.display=a?i:"none"},update:function(n,e,t){var a=e.value;!a!=!e.oldValue&&((t=xr(t)).data&&t.data.transition?(t.data.show=!0,a?ir(t,(function(){n.style.display=n.__vOriginalDisplay})):or(t,(function(){n.style.display="none"}))):n.style.display=a?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,a,r){r||(n.style.display=n.__vOriginalDisplay)}}},gr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function jr(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?jr(He(e.children)):n}function Tr(n){var e={},t=n.$options;for(var a in t.propsData)e[a]=n[a];var r=t._parentListeners;for(var i in r)e[k(i)]=r[i];return e}function kr(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var wr=function(n){return n.tag||be(n)},Ir=function(n){return"show"===n.name},Cr={name:"transition",props:gr,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(wr)).length){0;var a=this.mode;0;var r=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return r;var i=jr(r);if(!i)return r;if(this._leaving)return kr(n,r);var o="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?o+"comment":o+i.tag:s(i.key)?0===String(i.key).indexOf(o)?i.key:o+i.key:i.key;var l=(i.data||(i.data={})).transition=Tr(this),c=this._vnode,u=jr(c);if(i.data.directives&&i.data.directives.some(Ir)&&(i.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,u)&&!be(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=z({},l);if("out-in"===a)return this._leaving=!0,ue(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),kr(n,r);if("in-out"===a){if(be(i))return c;var d,m=function(){d()};ue(l,"afterEnter",m),ue(l,"enterCancelled",m),ue(p,"delayLeave",(function(n){d=n}))}}return r}}},Er=z({tag:String,moveClass:String},gr);function Sr(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function zr(n){n.data.newPos=n.elm.getBoundingClientRect()}function Ar(n){var e=n.data.pos,t=n.data.newPos,a=e.left-t.left,r=e.top-t.top;if(a||r){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate("+a+"px,"+r+"px)",i.transitionDuration="0s"}}delete Er.mode;var Or={Transition:Cr,TransitionGroup:{props:Er,beforeMount:function(){var n=this,e=this._update;this._update=function(t,a){var r=Ze(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,r(),e.call(n,t,a)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),a=this.prevChildren=this.children,r=this.$slots.default||[],i=this.children=[],o=Tr(this),l=0;l<r.length;l++){var s=r[l];if(s.tag)if(null!=s.key&&0!==String(s.key).indexOf("__vlist"))i.push(s),t[s.key]=s,(s.data||(s.data={})).transition=o;else;}if(a){for(var c=[],u=[],p=0;p<a.length;p++){var d=a[p];d.data.transition=o,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?c.push(d):u.push(d)}this.kept=n(e,null,c),this.removed=u}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Sr),n.forEach(zr),n.forEach(Ar),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,a=t.style;Qa(t,e),a.transform=a.WebkitTransform=a.transitionDuration="",t.addEventListener(Ha,t._moveCb=function n(a){a&&a.target!==t||a&&!/transform$/.test(a.propertyName)||(t.removeEventListener(Ha,n),t._moveCb=null,Za(t,e))})}})))},methods:{hasMove:function(n,e){if(!qa)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Ba(t,n)})),Fa(t,e),t.style.display="none",this.$el.appendChild(t);var a=tr(t);return this.$el.removeChild(t),this._hasMove=a.hasTransform}}}};wt.config.mustUseProp=function(n,e,t){return"value"===t&&Pt(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},wt.config.isReservedTag=Xt,wt.config.isReservedAttr=Lt,wt.config.getTagNamespace=function(n){return Kt(n)?"svg":"math"===n?"math":void 0},wt.config.isUnknownElement=function(n){if(!W)return!0;if(Xt(n))return!1;if(n=n.toLowerCase(),null!=Yt[n])return Yt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Yt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Yt[n]=/HTMLUnknownElement/.test(e.toString())},z(wt.options.directives,_r),z(wt.options.components,Or),wt.prototype.__patch__=W?ur:O,wt.prototype.$mount=function(n,e){return function(n,e,t){var a;return n.$el=e,n.$options.render||(n.$options.render=hn),tt(n,"beforeMount"),a=function(){n._update(n._render(),t)},new ft(n,a,O,{before:function(){n._isMounted&&!n._isDestroyed&&tt(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,tt(n,"mounted")),n}(this,n=n&&W?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},W&&setTimeout((function(){N.devtools&&on&&on.emit("init",wt)}),0);var Lr=wt;
/*!
  * vue-router v3.5.3
  * (c) 2021 Evan You
  * @license MIT
  */function Pr(n,e){for(var t in e)n[t]=e[t];return n}var $r=/[!'()*]/g,Dr=function(n){return"%"+n.charCodeAt(0).toString(16)},Rr=/%2C/g,Ur=function(n){return encodeURIComponent(n).replace($r,Dr).replace(Rr,",")};function Mr(n){try{return decodeURIComponent(n)}catch(n){0}return n}var Nr=function(n){return null==n||"object"==typeof n?n:String(n)};function Fr(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),a=Mr(t.shift()),r=t.length>0?Mr(t.join("=")):null;void 0===e[a]?e[a]=r:Array.isArray(e[a])?e[a].push(r):e[a]=[e[a],r]})),e):e}function Br(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return Ur(e);if(Array.isArray(t)){var a=[];return t.forEach((function(n){void 0!==n&&(null===n?a.push(Ur(e)):a.push(Ur(e)+"="+Ur(n)))})),a.join("&")}return Ur(e)+"="+Ur(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var Gr=/\/?$/;function Vr(n,e,t,a){var r=a&&a.options.stringifyQuery,i=e.query||{};try{i=qr(i)}catch(n){}var o={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:Kr(e,r),matched:n?Hr(n):[]};return t&&(o.redirectedFrom=Kr(t,r)),Object.freeze(o)}function qr(n){if(Array.isArray(n))return n.map(qr);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=qr(n[t]);return e}return n}var Wr=Vr(null,{path:"/"});function Hr(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function Kr(n,e){var t=n.path,a=n.query;void 0===a&&(a={});var r=n.hash;return void 0===r&&(r=""),(t||"/")+(e||Br)(a)+r}function Xr(n,e,t){return e===Wr?n===e:!!e&&(n.path&&e.path?n.path.replace(Gr,"")===e.path.replace(Gr,"")&&(t||n.hash===e.hash&&Yr(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&Yr(n.query,e.query)&&Yr(n.params,e.params))))}function Yr(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),a=Object.keys(e).sort();return t.length===a.length&&t.every((function(t,r){var i=n[t];if(a[r]!==t)return!1;var o=e[t];return null==i||null==o?i===o:"object"==typeof i&&"object"==typeof o?Yr(i,o):String(i)===String(o)}))}function Jr(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var a in t.instances){var r=t.instances[a],i=t.enteredCbs[a];if(r&&i){delete t.enteredCbs[a];for(var o=0;o<i.length;o++)r._isBeingDestroyed||i[o](r)}}}}var Qr={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,a=e.children,r=e.parent,i=e.data;i.routerView=!0;for(var o=r.$createElement,l=t.name,s=r.$route,c=r._routerViewCache||(r._routerViewCache={}),u=0,p=!1;r&&r._routerRoot!==r;){var d=r.$vnode?r.$vnode.data:{};d.routerView&&u++,d.keepAlive&&r._directInactive&&r._inactive&&(p=!0),r=r.$parent}if(i.routerViewDepth=u,p){var m=c[l],f=m&&m.component;return f?(m.configProps&&Zr(f,i,m.route,m.configProps),o(f,i,a)):o()}var v=s.matched[u],y=v&&v.components[l];if(!v||!y)return c[l]=null,o();c[l]={component:y},i.registerRouteInstance=function(n,e){var t=v.instances[l];(e&&t!==n||!e&&t===n)&&(v.instances[l]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){v.instances[l]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==v.instances[l]&&(v.instances[l]=n.componentInstance),Jr(s)};var b=v.props&&v.props[l];return b&&(Pr(c[l],{route:s,configProps:b}),Zr(y,i,s,b)),o(y,i,a)}};function Zr(n,e,t,a){var r=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,a);if(r){r=e.props=Pr({},r);var i=e.attrs=e.attrs||{};for(var o in r)n.props&&o in n.props||(i[o]=r[o],delete r[o])}}function ni(n,e,t){var a=n.charAt(0);if("/"===a)return n;if("?"===a||"#"===a)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var i=n.replace(/^\//,"").split("/"),o=0;o<i.length;o++){var l=i[o];".."===l?r.pop():"."!==l&&r.push(l)}return""!==r[0]&&r.unshift(""),r.join("/")}function ei(n){return n.replace(/\/+/g,"/")}var ti=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},ai=bi,ri=ci,ii=function(n,e){return pi(ci(n,e),e)},oi=pi,li=yi,si=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function ci(n,e){for(var t,a=[],r=0,i=0,o="",l=e&&e.delimiter||"/";null!=(t=si.exec(n));){var s=t[0],c=t[1],u=t.index;if(o+=n.slice(i,u),i=u+s.length,c)o+=c[1];else{var p=n[i],d=t[2],m=t[3],f=t[4],v=t[5],y=t[6],b=t[7];o&&(a.push(o),o="");var h=null!=d&&null!=p&&p!==d,x="+"===y||"*"===y,_="?"===y||"*"===y,g=t[2]||l,j=f||v;a.push({name:m||r++,prefix:d||"",delimiter:g,optional:_,repeat:x,partial:h,asterisk:!!b,pattern:j?mi(j):b?".*":"[^"+di(g)+"]+?"})}}return i<n.length&&(o+=n.substr(i)),o&&a.push(o),a}function ui(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function pi(n,e){for(var t=new Array(n.length),a=0;a<n.length;a++)"object"==typeof n[a]&&(t[a]=new RegExp("^(?:"+n[a].pattern+")$",vi(e)));return function(e,a){for(var r="",i=e||{},o=(a||{}).pretty?ui:encodeURIComponent,l=0;l<n.length;l++){var s=n[l];if("string"!=typeof s){var c,u=i[s.name];if(null==u){if(s.optional){s.partial&&(r+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(ti(u)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(c=o(u[p]),!t[l].test(c))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(c)+"`");r+=(0===p?s.prefix:s.delimiter)+c}}else{if(c=s.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):o(u),!t[l].test(c))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+c+'"');r+=s.prefix+c}}else r+=s}return r}}function di(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function mi(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function fi(n,e){return n.keys=e,n}function vi(n){return n&&n.sensitive?"":"i"}function yi(n,e,t){ti(e)||(t=e||t,e=[]);for(var a=(t=t||{}).strict,r=!1!==t.end,i="",o=0;o<n.length;o++){var l=n[o];if("string"==typeof l)i+=di(l);else{var s=di(l.prefix),c="(?:"+l.pattern+")";e.push(l),l.repeat&&(c+="(?:"+s+c+")*"),i+=c=l.optional?l.partial?s+"("+c+")?":"(?:"+s+"("+c+"))?":s+"("+c+")"}}var u=di(t.delimiter||"/"),p=i.slice(-u.length)===u;return a||(i=(p?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=r?"$":a&&p?"":"(?="+u+"|$)",fi(new RegExp("^"+i,vi(t)),e)}function bi(n,e,t){return ti(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var a=0;a<t.length;a++)e.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return fi(n,e)}(n,e):ti(n)?function(n,e,t){for(var a=[],r=0;r<n.length;r++)a.push(bi(n[r],e,t).source);return fi(new RegExp("(?:"+a.join("|")+")",vi(t)),e)}(n,e,t):function(n,e,t){return yi(ci(n,t),e,t)}(n,e,t)}ai.parse=ri,ai.compile=ii,ai.tokensToFunction=oi,ai.tokensToRegExp=li;var hi=Object.create(null);function xi(n,e,t){e=e||{};try{var a=hi[n]||(hi[n]=ai.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),a(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function _i(n,e,t,a){var r="string"==typeof n?{path:n}:n;if(r._normalized)return r;if(r.name){var i=(r=Pr({},n)).params;return i&&"object"==typeof i&&(r.params=Pr({},i)),r}if(!r.path&&r.params&&e){(r=Pr({},r))._normalized=!0;var o=Pr(Pr({},e.params),r.params);if(e.name)r.name=e.name,r.params=o;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;r.path=xi(l,o,e.path)}else 0;return r}var s=function(n){var e="",t="",a=n.indexOf("#");a>=0&&(e=n.slice(a),n=n.slice(0,a));var r=n.indexOf("?");return r>=0&&(t=n.slice(r+1),n=n.slice(0,r)),{path:n,query:t,hash:e}}(r.path||""),c=e&&e.path||"/",u=s.path?ni(s.path,c,t||r.append):c,p=function(n,e,t){void 0===e&&(e={});var a,r=t||Fr;try{a=r(n||"")}catch(n){a={}}for(var i in e){var o=e[i];a[i]=Array.isArray(o)?o.map(Nr):Nr(o)}return a}(s.query,r.query,a&&a.options.parseQuery),d=r.hash||s.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:u,query:p,hash:d}}var gi,ji=function(){},Ti={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,a=this.$route,r=t.resolve(this.to,a,this.append),i=r.location,o=r.route,l=r.href,s={},c=t.options.linkActiveClass,u=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,d=null==u?"router-link-exact-active":u,m=null==this.activeClass?p:this.activeClass,f=null==this.exactActiveClass?d:this.exactActiveClass,v=o.redirectedFrom?Vr(null,_i(o.redirectedFrom),null,t):o;s[f]=Xr(a,v,this.exactPath),s[m]=this.exact||this.exactPath?s[f]:function(n,e){return 0===n.path.replace(Gr,"/").indexOf(e.path.replace(Gr,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(a,v);var y=s[f]?this.ariaCurrentValue:null,b=function(n){ki(n)&&(e.replace?t.replace(i,ji):t.push(i,ji))},h={click:ki};Array.isArray(this.event)?this.event.forEach((function(n){h[n]=b})):h[this.event]=b;var x={class:s},_=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:o,navigate:b,isActive:s[m],isExactActive:s[f]});if(_){if(1===_.length)return _[0];if(_.length>1||!_.length)return 0===_.length?n():n("span",{},_)}if("a"===this.tag)x.on=h,x.attrs={href:l,"aria-current":y};else{var g=function n(e){var t;if(e)for(var a=0;a<e.length;a++){if("a"===(t=e[a]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(g){g.isStatic=!1;var j=g.data=Pr({},g.data);for(var T in j.on=j.on||{},j.on){var k=j.on[T];T in h&&(j.on[T]=Array.isArray(k)?k:[k])}for(var w in h)w in j.on?j.on[w].push(h[w]):j.on[w]=b;var I=g.data.attrs=Pr({},g.data.attrs);I.href=l,I["aria-current"]=y}else x.on=h}return n(this.tag,x,this.$slots.default)}};function ki(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var wi="undefined"!=typeof window;function Ii(n,e,t,a,r){var i=e||[],o=t||Object.create(null),l=a||Object.create(null);n.forEach((function(n){!function n(e,t,a,r,i,o){var l=r.path,s=r.name;0;var c=r.pathToRegexpOptions||{},u=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return ei(e.path+"/"+n)}(l,i,c.strict);"boolean"==typeof r.caseSensitive&&(c.sensitive=r.caseSensitive);var p={path:u,regex:Ci(u,c),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:s,parent:i,matchAs:o,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var i=o?ei(o+"/"+r.path):void 0;n(e,t,a,r,p,i)}));t[p.path]||(e.push(p.path),t[p.path]=p);if(void 0!==r.alias)for(var d=Array.isArray(r.alias)?r.alias:[r.alias],m=0;m<d.length;++m){0;var f={path:d[m],children:r.children};n(e,t,a,f,i,p.path||"/")}s&&(a[s]||(a[s]=p))}(i,o,l,n,r)}));for(var s=0,c=i.length;s<c;s++)"*"===i[s]&&(i.push(i.splice(s,1)[0]),c--,s--);return{pathList:i,pathMap:o,nameMap:l}}function Ci(n,e){return ai(n,[],e)}function Ei(n,e){var t=Ii(n),a=t.pathList,r=t.pathMap,i=t.nameMap;function o(n,t,o){var l=_i(n,t,!1,e),c=l.name;if(c){var u=i[c];if(!u)return s(null,l);var p=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof l.params&&(l.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in l.params)&&p.indexOf(d)>-1&&(l.params[d]=t.params[d]);return l.path=xi(u.path,l.params),s(u,l,o)}if(l.path){l.params={};for(var m=0;m<a.length;m++){var f=a[m],v=r[f];if(Si(v.regex,l.path,l.params))return s(v,l,o)}}return s(null,l)}function l(n,t){var a=n.redirect,r="function"==typeof a?a(Vr(n,t,null,e)):a;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return s(null,t);var l=r,c=l.name,u=l.path,p=t.query,d=t.hash,m=t.params;if(p=l.hasOwnProperty("query")?l.query:p,d=l.hasOwnProperty("hash")?l.hash:d,m=l.hasOwnProperty("params")?l.params:m,c){i[c];return o({_normalized:!0,name:c,query:p,hash:d,params:m},void 0,t)}if(u){var f=function(n,e){return ni(n,e.parent?e.parent.path:"/",!0)}(u,n);return o({_normalized:!0,path:xi(f,m),query:p,hash:d},void 0,t)}return s(null,t)}function s(n,t,a){return n&&n.redirect?l(n,a||t):n&&n.matchAs?function(n,e,t){var a=o({_normalized:!0,path:xi(t,e.params)});if(a){var r=a.matched,i=r[r.length-1];return e.params=a.params,s(i,e)}return s(null,e)}(0,t,n.matchAs):Vr(n,t,a,e)}return{match:o,addRoute:function(n,e){var t="object"!=typeof n?i[n]:void 0;Ii([e||n],a,r,i,t),t&&t.alias.length&&Ii(t.alias.map((function(n){return{path:n,children:[e]}})),a,r,i,t)},getRoutes:function(){return a.map((function(n){return r[n]}))},addRoutes:function(n){Ii(n,a,r,i)}}}function Si(n,e,t){var a=e.match(n);if(!a)return!1;if(!t)return!0;for(var r=1,i=a.length;r<i;++r){var o=n.keys[r-1];o&&(t[o.name||"pathMatch"]="string"==typeof a[r]?Mr(a[r]):a[r])}return!0}var zi=wi&&window.performance&&window.performance.now?window.performance:Date;function Ai(){return zi.now().toFixed(3)}var Oi=Ai();function Li(){return Oi}function Pi(n){return Oi=n}var $i=Object.create(null);function Di(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=Pr({},window.history.state);return t.key=Li(),window.history.replaceState(t,"",e),window.addEventListener("popstate",Mi),function(){window.removeEventListener("popstate",Mi)}}function Ri(n,e,t,a){if(n.app){var r=n.options.scrollBehavior;r&&n.app.$nextTick((function(){var i=function(){var n=Li();if(n)return $i[n]}(),o=r.call(n,e,t,a?i:null);o&&("function"==typeof o.then?o.then((function(n){Vi(n,i)})).catch((function(n){0})):Vi(o,i))}))}}function Ui(){var n=Li();n&&($i[n]={x:window.pageXOffset,y:window.pageYOffset})}function Mi(n){Ui(),n.state&&n.state.key&&Pi(n.state.key)}function Ni(n){return Bi(n.x)||Bi(n.y)}function Fi(n){return{x:Bi(n.x)?n.x:window.pageXOffset,y:Bi(n.y)?n.y:window.pageYOffset}}function Bi(n){return"number"==typeof n}var Gi=/^#\d/;function Vi(n,e){var t,a="object"==typeof n;if(a&&"string"==typeof n.selector){var r=Gi.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(r){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),a=n.getBoundingClientRect();return{x:a.left-t.left-e.x,y:a.top-t.top-e.y}}(r,i={x:Bi((t=i).x)?t.x:0,y:Bi(t.y)?t.y:0})}else Ni(n)&&(e=Fi(n))}else a&&Ni(n)&&(e=Fi(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var qi,Wi=wi&&((-1===(qi=window.navigator.userAgent).indexOf("Android 2.")&&-1===qi.indexOf("Android 4.0")||-1===qi.indexOf("Mobile Safari")||-1!==qi.indexOf("Chrome")||-1!==qi.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Hi(n,e){Ui();var t=window.history;try{if(e){var a=Pr({},t.state);a.key=Li(),t.replaceState(a,"",n)}else t.pushState({key:Pi(Ai())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function Ki(n){Hi(n,!0)}function Xi(n,e,t){var a=function(r){r>=n.length?t():n[r]?e(n[r],(function(){a(r+1)})):a(r+1)};a(0)}var Yi={redirected:2,aborted:4,cancelled:8,duplicated:16};function Ji(n,e){return Zi(n,e,Yi.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return no.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function Qi(n,e){return Zi(n,e,Yi.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function Zi(n,e,t,a){var r=new Error(a);return r._isRouter=!0,r.from=n,r.to=e,r.type=t,r}var no=["params","query","hash"];function eo(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function to(n,e){return eo(n)&&n._isRouter&&(null==e||n.type===e)}function ao(n){return function(e,t,a){var r=!1,i=0,o=null;ro(n,(function(n,e,t,l){if("function"==typeof n&&void 0===n.cid){r=!0,i++;var s,c=lo((function(e){var r;((r=e).__esModule||oo&&"Module"===r[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:gi.extend(e),t.components[l]=e,--i<=0&&a()})),u=lo((function(n){var e="Failed to resolve async component "+l+": "+n;o||(o=eo(n)?n:new Error(e),a(o))}));try{s=n(c,u)}catch(n){u(n)}if(s)if("function"==typeof s.then)s.then(c,u);else{var p=s.component;p&&"function"==typeof p.then&&p.then(c,u)}}})),r||a()}}function ro(n,e){return io(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function io(n){return Array.prototype.concat.apply([],n)}var oo="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function lo(n){var e=!1;return function(){for(var t=[],a=arguments.length;a--;)t[a]=arguments[a];if(!e)return e=!0,n.apply(this,t)}}var so=function(n,e){this.router=n,this.base=function(n){if(!n)if(wi){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=Wr,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function co(n,e,t,a){var r=ro(n,(function(n,a,r,i){var o=function(n,e){"function"!=typeof n&&(n=gi.extend(n));return n.options[e]}(n,e);if(o)return Array.isArray(o)?o.map((function(n){return t(n,a,r,i)})):t(o,a,r,i)}));return io(a?r.reverse():r)}function uo(n,e){if(e)return function(){return n.apply(e,arguments)}}so.prototype.listen=function(n){this.cb=n},so.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},so.prototype.onError=function(n){this.errorCbs.push(n)},so.prototype.transitionTo=function(n,e,t){var a,r=this;try{a=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var i=this.current;this.confirmTransition(a,(function(){r.updateRoute(a),e&&e(a),r.ensureURL(),r.router.afterHooks.forEach((function(n){n&&n(a,i)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(n){n(a)})))}),(function(n){t&&t(n),n&&!r.ready&&(to(n,Yi.redirected)&&i===Wr||(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(n)}))))}))},so.prototype.confirmTransition=function(n,e,t){var a=this,r=this.current;this.pending=n;var i,o,l=function(n){!to(n)&&eo(n)&&(a.errorCbs.length?a.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},s=n.matched.length-1,c=r.matched.length-1;if(Xr(n,r)&&s===c&&n.matched[s]===r.matched[c])return this.ensureURL(),n.hash&&Ri(this.router,r,n,!1),l(((o=Zi(i=r,n,Yi.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",o));var u=function(n,e){var t,a=Math.max(n.length,e.length);for(t=0;t<a&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),p=u.updated,d=u.deactivated,m=u.activated,f=[].concat(function(n){return co(n,"beforeRouteLeave",uo,!0)}(d),this.router.beforeHooks,function(n){return co(n,"beforeRouteUpdate",uo)}(p),m.map((function(n){return n.beforeEnter})),ao(m)),v=function(e,t){if(a.pending!==n)return l(Qi(r,n));try{e(n,r,(function(e){!1===e?(a.ensureURL(!0),l(function(n,e){return Zi(n,e,Yi.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(r,n))):eo(e)?(a.ensureURL(!0),l(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(l(Ji(r,n)),"object"==typeof e&&e.replace?a.replace(e):a.push(e)):t(e)}))}catch(n){l(n)}};Xi(f,v,(function(){Xi(function(n){return co(n,"beforeRouteEnter",(function(n,e,t,a){return function(n,e,t){return function(a,r,i){return n(a,r,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),i(n)}))}}(n,t,a)}))}(m).concat(a.router.resolveHooks),v,(function(){if(a.pending!==n)return l(Qi(r,n));a.pending=null,e(n),a.router.app&&a.router.app.$nextTick((function(){Jr(n)}))}))}))},so.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},so.prototype.setupListeners=function(){},so.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=Wr,this.pending=null};var po=function(n){function e(e,t){n.call(this,e,t),this._startLocation=mo(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,a=Wi&&t;a&&this.listeners.push(Di());var r=function(){var t=n.current,r=mo(n.base);n.current===Wr&&r===n._startLocation||n.transitionTo(r,(function(n){a&&Ri(e,n,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){Hi(ei(a.base+n.fullPath)),Ri(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){Ki(ei(a.base+n.fullPath)),Ri(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(mo(this.base)!==this.current.fullPath){var e=ei(this.base+this.current.fullPath);n?Hi(e):Ki(e)}},e.prototype.getCurrentLocation=function(){return mo(this.base)},e}(so);function mo(n){var e=window.location.pathname,t=e.toLowerCase(),a=n.toLowerCase();return!n||t!==a&&0!==t.indexOf(ei(a+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var fo=function(n){function e(e,t,a){n.call(this,e,t),a&&function(n){var e=mo(n);if(!/^\/#/.test(e))return window.location.replace(ei(n+"/#"+e)),!0}(this.base)||vo()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=Wi&&e;t&&this.listeners.push(Di());var a=function(){var e=n.current;vo()&&n.transitionTo(yo(),(function(a){t&&Ri(n.router,a,e,!0),Wi||xo(a.fullPath)}))},r=Wi?"popstate":"hashchange";window.addEventListener(r,a),this.listeners.push((function(){window.removeEventListener(r,a)}))}},e.prototype.push=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){ho(n.fullPath),Ri(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){xo(n.fullPath),Ri(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;yo()!==e&&(n?ho(e):xo(e))},e.prototype.getCurrentLocation=function(){return yo()},e}(so);function vo(){var n=yo();return"/"===n.charAt(0)||(xo("/"+n),!1)}function yo(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function bo(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function ho(n){Wi?Hi(bo(n)):window.location.hash=n}function xo(n){Wi?Ki(bo(n)):window.location.replace(bo(n))}var _o=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var a=this;this.transitionTo(n,(function(n){a.stack=a.stack.slice(0,a.index+1).concat(n),a.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this;this.transitionTo(n,(function(n){a.stack=a.stack.slice(0,a.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var a=this.stack[t];this.confirmTransition(a,(function(){var n=e.current;e.index=t,e.updateRoute(a),e.router.afterHooks.forEach((function(e){e&&e(a,n)}))}),(function(n){to(n,Yi.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(so),go=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ei(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!Wi&&!1!==n.fallback,this.fallback&&(e="hash"),wi||(e="abstract"),this.mode=e,e){case"history":this.history=new po(this,n.base);break;case"hash":this.history=new fo(this,n.base,this.fallback);break;case"abstract":this.history=new _o(this,n.base);break;default:0}},jo={currentRoute:{configurable:!0}};function To(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}go.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},jo.currentRoute.get=function(){return this.history&&this.history.current},go.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof po||t instanceof fo){var a=function(n){t.setupListeners(),function(n){var a=t.current,r=e.options.scrollBehavior;Wi&&r&&"fullPath"in n&&Ri(e,n,a,!1)}(n)};t.transitionTo(t.getCurrentLocation(),a,a)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},go.prototype.beforeEach=function(n){return To(this.beforeHooks,n)},go.prototype.beforeResolve=function(n){return To(this.resolveHooks,n)},go.prototype.afterEach=function(n){return To(this.afterHooks,n)},go.prototype.onReady=function(n,e){this.history.onReady(n,e)},go.prototype.onError=function(n){this.history.onError(n)},go.prototype.push=function(n,e,t){var a=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){a.history.push(n,e,t)}));this.history.push(n,e,t)},go.prototype.replace=function(n,e,t){var a=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){a.history.replace(n,e,t)}));this.history.replace(n,e,t)},go.prototype.go=function(n){this.history.go(n)},go.prototype.back=function(){this.go(-1)},go.prototype.forward=function(){this.go(1)},go.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},go.prototype.resolve=function(n,e,t){var a=_i(n,e=e||this.history.current,t,this),r=this.match(a,e),i=r.redirectedFrom||r.fullPath;return{location:a,route:r,href:function(n,e,t){var a="hash"===t?"#"+e:e;return n?ei(n+"/"+a):a}(this.history.base,i,this.mode),normalizedTo:a,resolved:r}},go.prototype.getRoutes=function(){return this.matcher.getRoutes()},go.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==Wr&&this.history.transitionTo(this.history.getCurrentLocation())},go.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==Wr&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(go.prototype,jo),go.install=function n(e){if(!n.installed||gi!==e){n.installed=!0,gi=e;var t=function(n){return void 0!==n},a=function(n,e){var a=n.$options._parentVnode;t(a)&&t(a=a.data)&&t(a=a.registerRouteInstance)&&a(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",Qr),e.component("RouterLink",Ti);var r=e.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},go.version="3.5.3",go.isNavigationFailure=to,go.NavigationFailureType=Yi,go.START_LOCATION=Wr,wi&&window.Vue&&window.Vue.use(go);var ko=go;t(202),t(147),t(225),t(113),t(227),t(114),t(115),t(228);function wo(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}t(43),t(50),t(74);var Io=t(52),Co=(t(156),t(29),t(83),t(204),t(205),{NotFound:function(){return t.e(6).then(t.bind(null,408))},Layout:function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,407))}}),Eo={"v-22835364":function(){return t.e(7).then(t.bind(null,411))},"v-75d3a616":function(){return t.e(9).then(t.bind(null,412))},"v-86491b5c":function(){return t.e(8).then(t.bind(null,413))},"v-612f6124":function(){return t.e(11).then(t.bind(null,414))},"v-5cf77684":function(){return t.e(13).then(t.bind(null,415))},"v-0d264b78":function(){return t.e(10).then(t.bind(null,416))},"v-12a63cc4":function(){return t.e(12).then(t.bind(null,417))},"v-50df31ec":function(){return t.e(14).then(t.bind(null,418))},"v-0239ac0c":function(){return t.e(15).then(t.bind(null,419))},"v-332a37b8":function(){return t.e(16).then(t.bind(null,420))},"v-4624977c":function(){return t.e(18).then(t.bind(null,421))},"v-790cf330":function(){return t.e(19).then(t.bind(null,422))},"v-3d2a049a":function(){return t.e(17).then(t.bind(null,423))},"v-21a1da36":function(){return t.e(20).then(t.bind(null,424))},"v-615799f6":function(){return t.e(22).then(t.bind(null,425))},"v-04ed35c4":function(){return t.e(21).then(t.bind(null,426))},"v-ddf06438":function(){return t.e(23).then(t.bind(null,427))},"v-75ed03ac":function(){return t.e(25).then(t.bind(null,428))},"v-b0c67b38":function(){return t.e(24).then(t.bind(null,429))},"v-35dfc85d":function(){return t.e(26).then(t.bind(null,430))},"v-2084f0ca":function(){return t.e(27).then(t.bind(null,431))},"v-764374f0":function(){return t.e(28).then(t.bind(null,432))},"v-ac75e678":function(){return t.e(29).then(t.bind(null,433))},"v-63cec984":function(){return t.e(31).then(t.bind(null,434))},"v-1ec31224":function(){return t.e(32).then(t.bind(null,435))},"v-0e60c004":function(){return t.e(30).then(t.bind(null,436))},"v-71ad7044":function(){return t.e(33).then(t.bind(null,437))},"v-36207560":function(){return t.e(34).then(t.bind(null,438))},"v-6fb443e4":function(){return t.e(35).then(t.bind(null,439))},"v-0141311c":function(){return t.e(36).then(t.bind(null,440))},"v-258ba8c6":function(){return t.e(37).then(t.bind(null,441))},"v-67a81464":function(){return t.e(38).then(t.bind(null,442))}};function So(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var zo=/-(\w)/g,Ao=So((function(n){return n.replace(zo,(function(n,e){return e?e.toUpperCase():""}))})),Oo=/\B([A-Z])/g,Lo=So((function(n){return n.replace(Oo,"-$1").toLowerCase()})),Po=So((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function $o(n,e){if(e)return n(e)?n(e):e.includes("-")?n(Po(Ao(e))):n(Po(e))||n(Lo(e))}var Do=Object.assign({},Co,Eo),Ro=function(n){return Do[n]},Uo=function(n){return Eo[n]},Mo=function(n){return Co[n]},No=function(n){return Lr.component(n)};function Fo(n){return $o(Uo,n)}function Bo(n){return $o(Mo,n)}function Go(n){return $o(Ro,n)}function Vo(n){return $o(No,n)}function qo(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(a.a)(regeneratorRuntime.mark((function n(e){var t;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(Vo(e)||!Go(e)){n.next=5;break}return n.next=3,Go(e)();case 3:t=n.sent,Lr.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function Wo(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var Ho=t(110),Ko=(t(236),t(195),t(196),t(182)),Xo=t.n(Ko),Yo=t(183),Jo=t.n(Yo),Qo={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(Ho.a)(n,1)[0]})).map((function(n){var e=Object(Ho.a)(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(Jo()(n[t]),'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=nl(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(Io.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=el(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return Xo()([{name:"description",content:this.$description}],n,this.siteMeta,tl)},updateCanonicalLink:function(){Zo(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",nl(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){el(null,this.currentMetaTags),Zo()}};function Zo(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function nl(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function el(n,e){if(e&&Object(Io.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function tl(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var a=t[e];if(n.hasOwnProperty(a))return n[a]+a}return JSON.stringify(n)}t(112);var al=t(184),rl={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(al)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),a=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+a,o=0;o<t.length;o++){var l=t[o],s=t[o+1],c=0===o&&0===a||a>=l.parentElement.offsetTop+10&&(!s||a<s.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(c&&u!==decodeURIComponent(l.hash)){var p=l;if(i===r)for(var d=o+1;d<t.length;d++)if(u===decodeURIComponent(t[d].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(p.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},il=(t(100),t(81)),ol=t.n(il),ll=[Qo,rl,{mounted:function(){var n=this;ol.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||Lr.component(n.name)||ol.a.start(),t()})),this.$router.afterEach((function(){ol.a.done(),n.isSidebarOpen=!1}))}}],sl={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return Wo("layout",n),Lr.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},cl=t(54),ul=Object(cl.a)(sl,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){var a;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(a=n[e]).push.apply(a,Object(Io.a)(t));break;default:throw new Error("Unknown option name.")}}(ul,"mixins",ll);var pl=[{name:"v-22835364",path:"/FAQ.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-22835364").then(t)}},{name:"v-75d3a616",path:"/best_practices.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-75d3a616").then(t)}},{name:"v-86491b5c",path:"/Home.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-86491b5c").then(t)}},{name:"v-612f6124",path:"/changelog.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-612f6124").then(t)}},{name:"v-5cf77684",path:"/data_json.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-5cf77684").then(t)}},{name:"v-0d264b78",path:"/catalog.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-0d264b78").then(t)}},{name:"v-12a63cc4",path:"/command_tools.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-12a63cc4").then(t)}},{name:"v-50df31ec",path:"/data_lua.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-50df31ec").then(t)}},{name:"v-0239ac0c",path:"/data_xml.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-0239ac0c").then(t)}},{name:"v-332a37b8",path:"/data_yaml.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-332a37b8").then(t)}},{name:"v-4624977c",path:"/deploy.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-4624977c").then(t)}},{name:"v-790cf330",path:"/dynamic_bean.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-790cf330").then(t)}},{name:"v-3d2a049a",path:"/define.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-3d2a049a").then(t)}},{name:"v-21a1da36",path:"/editor.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-21a1da36").then(t)}},{name:"v-615799f6",path:"/excel2textdiff.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-615799f6").then(t)}},{name:"v-04ed35c4",path:"/excel.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-04ed35c4").then(t)}},{name:"v-ddf06438",path:"/excel_sep.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-ddf06438").then(t)}},{name:"v-75ed03ac",path:"/generate_code_data.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-75ed03ac").then(t)}},{name:"v-b0c67b38",path:"/feature.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-b0c67b38").then(t)}},{name:"v-35dfc85d",path:"/",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-35dfc85d").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-2084f0ca",path:"/l10n.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-2084f0ca").then(t)}},{name:"v-764374f0",path:"/load_config_at_runtime.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-764374f0").then(t)}},{name:"v-ac75e678",path:"/luban_assistant.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-ac75e678").then(t)}},{name:"v-63cec984",path:"/render_template.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-63cec984").then(t)}},{name:"v-1ec31224",path:"/roadmap.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-1ec31224").then(t)}},{name:"v-0e60c004",path:"/manual.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-0e60c004").then(t)}},{name:"v-71ad7044",path:"/samples.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-71ad7044").then(t)}},{name:"v-36207560",path:"/start_up.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-36207560").then(t)}},{name:"v-6fb443e4",path:"/tag.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-6fb443e4").then(t)}},{name:"v-0141311c",path:"/template.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-0141311c").then(t)}},{name:"v-258ba8c6",path:"/traits.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-258ba8c6").then(t)}},{name:"v-67a81464",path:"/validator.html",component:ul,beforeEnter:function(n,e,t){qo("Layout","v-67a81464").then(t)}},{path:"*",component:ul}],dl={title:"Luban使用文档",description:"",base:"/lubandoc/",headTags:[["link",{rel:"icon",href:"/lubandoc/logo.jpg"}]],pages:[{title:"FAQ",frontmatter:{},regularPath:"/FAQ.html",relativePath:"FAQ.md",key:"v-22835364",path:"/FAQ.html",headers:[{level:2,title:"我运行 luban_examples 项目Projects目录下的示例项目中的生成脚本，为什么提示我 connect fail，失败了？",slug:"我运行-luban-examples-项目projects目录下的示例项目中的生成脚本-为什么提示我-connect-fail-失败了",normalizedTitle:"我运行 luban_examples 项目projects目录下的示例项目中的生成脚本，为什么提示我 connect fail，失败了？",charIndex:10},{level:2,title:"如何指定主键",slug:"如何指定主键",normalizedTitle:"如何指定主键",charIndex:545},{level:2,title:"支持多主键吗？",slug:"支持多主键吗",normalizedTitle:"支持多主键吗？",charIndex:1040},{level:2,title:"支持按client和server导出不同表及不同字段吗？",slug:"支持按client和server导出不同表及不同字段吗",normalizedTitle:"支持按client和server导出不同表及不同字段吗？",charIndex:1131},{level:2,title:"支持哪些源数据文件类型",slug:"支持哪些源数据文件类型",normalizedTitle:"支持哪些源数据文件类型",charIndex:1199},{level:2,title:"配置表的数据可以来源于多个文件吗？",slug:"配置表的数据可以来源于多个文件吗",normalizedTitle:"配置表的数据可以来源于多个文件吗？",charIndex:1337},{level:2,title:"可以将多个表放到同一个excel文件吗？",slug:"可以将多个表放到同一个excel文件吗",normalizedTitle:"可以将多个表放到同一个excel文件吗？",charIndex:1399},{level:2,title:"当数据文件为xlsx文件时，luban会读入第一个sheet还是所有sheet？",slug:"当数据文件为xlsx文件时-luban会读入第一个sheet还是所有sheet",normalizedTitle:"当数据文件为xlsx文件时，luban会读入第一个sheet还是所有sheet？",charIndex:1464},{level:2,title:"策划想在xlsx中有一个非数据的sheet，该怎么做呢",slug:"策划想在xlsx中有一个非数据的sheet-该怎么做呢",normalizedTitle:"策划想在xlsx中有一个非数据的sheet，该怎么做呢",charIndex:1548},{level:2,title:"想注释掉某一列，该如何做",slug:"想注释掉某一列-该如何做",normalizedTitle:"想注释掉某一列，该如何做",charIndex:1605},{level:2,title:"想注释掉某一行记录，该如何做",slug:"想注释掉某一行记录-该如何做",normalizedTitle:"想注释掉某一行记录，该如何做",charIndex:1653},{level:2,title:"有些配置只想开发期内部测试用，正式发布时不导出，该如何做？",slug:"有些配置只想开发期内部测试用-正式发布时不导出-该如何做",normalizedTitle:"有些配置只想开发期内部测试用，正式发布时不导出，该如何做？",charIndex:1690},{level:2,title:"我想每个json保存一个记录，文件太多，在input中指定很麻烦，怎么解决？",slug:"我想每个json保存一个记录-文件太多-在input中指定很麻烦-怎么解决",normalizedTitle:"我想每个json保存一个记录，文件太多，在input中指定很麻烦，怎么解决？",charIndex:1844},{level:2,title:"一个json文件可以包含多个记录吗？",slug:"一个json文件可以包含多个记录吗",normalizedTitle:"一个json文件可以包含多个记录吗？",charIndex:1976},{level:2,title:"记录可以来自json文件的某个深层次字段吗？",slug:"记录可以来自json文件的某个深层次字段吗",normalizedTitle:"记录可以来自json文件的某个深层次字段吗？",charIndex:2037},{level:2,title:"可以像xlsx那样，将多个表的数据都放到一个json文件中吗？",slug:"可以像xlsx那样-将多个表的数据都放到一个json文件中吗",normalizedTitle:"可以像xlsx那样，将多个表的数据都放到一个json文件中吗？",charIndex:2159},{level:2,title:"支持异步加载配置表吗？",slug:"支持异步加载配置表吗",normalizedTitle:"支持异步加载配置表吗？",charIndex:2267},{level:2,title:"支持自定义代码或者数据生成吗",slug:"支持自定义代码或者数据生成吗",normalizedTitle:"支持自定义代码或者数据生成吗",charIndex:2354},{level:2,title:"如何导出protobuf的定义及数据",slug:"如何导出protobuf的定义及数据",normalizedTitle:"如何导出protobuf的定义及数据",charIndex:2389},{level:2,title:"如何导出msgpack的数据",slug:"如何导出msgpack的数据",normalizedTitle:"如何导出msgpack的数据",charIndex:2424},{level:2,title:"如何导出flatbuffers的定义及数据",slug:"如何导出flatbuffers的定义及数据",normalizedTitle:"如何导出flatbuffers的定义及数据",charIndex:2455},{level:2,title:"生成后，本地目录会产生一个 .cache.meta，这个文件的用途是什么？",slug:"生成后-本地目录会产生一个-cache-meta-这个文件的用途是什么",normalizedTitle:"生成后，本地目录会产生一个 .cache.meta，这个文件的用途是什么？",charIndex:2493},{level:2,title:"可以引用现有的枚举和结构吗？比如生成的代码中想使用UnityEngine.AudioType和UnityEngine.Color",slug:"可以引用现有的枚举和结构吗-比如生成的代码中想使用unityengine-audiotype和unityengine-color",normalizedTitle:"可以引用现有的枚举和结构吗？比如生成的代码中想使用unityengine.audiotype和unityengine.color",charIndex:3011}],lastUpdated:"3/1/2022, 4:46:59 PM",lastUpdatedTimestamp:1646124419e3,headersStr:"我运行 luban_examples 项目Projects目录下的示例项目中的生成脚本，为什么提示我 connect fail，失败了？ 如何指定主键 支持多主键吗？ 支持按client和server导出不同表及不同字段吗？ 支持哪些源数据文件类型 配置表的数据可以来源于多个文件吗？ 可以将多个表放到同一个excel文件吗？ 当数据文件为xlsx文件时，luban会读入第一个sheet还是所有sheet？ 策划想在xlsx中有一个非数据的sheet，该怎么做呢 想注释掉某一列，该如何做 想注释掉某一行记录，该如何做 有些配置只想开发期内部测试用，正式发布时不导出，该如何做？ 我想每个json保存一个记录，文件太多，在input中指定很麻烦，怎么解决？ 一个json文件可以包含多个记录吗？ 记录可以来自json文件的某个深层次字段吗？ 可以像xlsx那样，将多个表的数据都放到一个json文件中吗？ 支持异步加载配置表吗？ 支持自定义代码或者数据生成吗 如何导出protobuf的定义及数据 如何导出msgpack的数据 如何导出flatbuffers的定义及数据 生成后，本地目录会产生一个 .cache.meta，这个文件的用途是什么？ 可以引用现有的枚举和结构吗？比如生成的代码中想使用UnityEngine.AudioType和UnityEngine.Color",content:'# FAQ\n\n\n# 我运行 luban_examples 项目Projects目录下的示例项目中的生成脚本，为什么提示我 connect fail，失败了？\n\n示例项目的生成脚本使用了luban.client，默认使用云生成，它需要连接到远程的luban.server才能完成生成。有两个办法可以解决\n\n * 运行 luban_examples 项目目录下的 run_luban_server.bat 或者 run_luban_server.sh 。然后再运行生成脚本\n * 将脚本里的 Luban.Client/Luban.Client 换成 Luban.ClientServer/Luban.ClientServer。 因为Luban.ClientServer同时包含了Client和Server ，可以独立完成生成。\n\n@@将脚本里\nset GEN_CLIENT=%WORKSPACE%\\Tools\\Luban.Client\\Luban.Client.exe\n@@换成\nset GEN_CLIENT=%WORKSPACE%\\Tools\\Luban.ClientServer\\Luban.ClientServer.exe\n\n\n1\n2\n3\n4\n\n\n详细参见 luban命令行工具\n\n\n# 如何指定主键\n\ntable的index字段指定主键列表。 详细请参见 wiki-配置相关定义 中关于table的mode和index的相关文档。\n\nmap及list表支持主键概念，未指定mode和index的情况下，自动为mode=map模式，并记录bean的第一个字段作为主键。\n\n假设 TbTest表的记录为Test类型，你想用Test的my_index字段作为key，则：\n\n * 如果在xml里定义表，则在table的index属性中指定主键字段名，如下：\n\n<table name="TbTest" value="Test" index="my_index"/>\n\n\n1\n\n * 如果在 table.xlsx里定义表，则在index列指定主键名，如下\n\n##VAR   FULL_NAME   VALUE_TYPE   DEFINE_FROM_EXCEL   INPUT        INDEX      ...\n        TbTest      Test         true                equip.xlsx   my_index   \n\n\n# 支持多主键吗？\n\n支持。 table mode=list时，支持联合多主键模式和独立多主键模式。详细文档参见 wiki-配置相关定义 中关于table的mode的相关文档。\n\n\n# 支持按client和server导出不同表及不同字段吗？\n\n支持。wiki-配置相关定义 中关于 分级定义及分组导出相关文档。\n\n\n# 支持哪些源数据文件类型\n\n * excel族。 csv、xls、xlm、xlsx、xlsm 等等。 csv支持各种编码，luban会智能猜测它的编码，无论你用gbk还是utf-8或者其他编码，都能正确处理。\n * json\n * xml\n * lua\n * yaml\n\n\n# 配置表的数据可以来源于多个文件吗？\n\n可以。 参见 wiki-配置相关定义 中关于 table.input的文档。\n\n\n# 可以将多个表放到同一个excel文件吗？\n\n可以。 参见 wiki-配置相关定义 中关于 table.input的文档。\n\n\n# 当数据文件为xlsx文件时，luban会读入第一个sheet还是所有sheet？\n\n读入所有sheet，但是会忽略那些A1单元格内容不是##开头的sheet。\n\n\n# 策划想在xlsx中有一个非数据的sheet，该怎么做呢\n\n只要该sheet的A1单元格不以##开头即可。\n\n\n# 想注释掉某一列，该如何做\n\n将列名取空，或者 #xxxx, __xxxx 这样的名称。\n\n\n# 想注释掉某一行记录，该如何做\n\n将该行第一个单元格填以##即可。\n\n\n# 有些配置只想开发期内部测试用，正式发布时不导出，该如何做？\n\nluban支持数据tag的概念。 excel第一列为tag。\n\n * 当tag为##时忽略这个行\n * 当tag为xxx时，如果Luban.Client 命令行中使用 --export_exclude_tags xxx，则不会导出该记录\n\n\n# 我想每个json保存一个记录，文件太多，在input中指定很麻烦，怎么解决？\n\n使用 目录数据源。 把所有json文件放到一个目录下（可以是目录树），将input设为该目录。luban会自动遍历整个目录树，将每个文件当作 一个记录读入。 详细参见json\n\n\n# 一个json文件可以包含多个记录吗？\n\n可以。但必须在数据源中以 *@xxx.json形式指定。详细参见json\n\n\n# 记录可以来自json文件的某个深层次字段吗？\n\n可以。分两种情况：\n\n * 从字段中读入一个记录，则以 a.b.c@xx.json的形式指定\n * 从字段中读入记录列表，则以 *a.b.c@xx.json的形式指定\n\n详细参见json\n\n\n# 可以像xlsx那样，将多个表的数据都放到一个json文件中吗？\n\n可以。 与excel数据源类似，只要每个表用 field@xx.json或者 *field@xx.json的形式指定即可。 详细参见json\n\n\n# 支持异步加载配置表吗？\n\n不直接支持。但你可以通过自定义模板方式实现异步加载。\n\n参见 代码与数据模板，以及相应异步加载示例项目 csharp_async_load\n\n\n# 支持自定义代码或者数据生成吗\n\n支持。 参见 数据与代码模板\n\n\n# 如何导出protobuf的定义及数据\n\n参见 代码与数据生成\n\n\n# 如何导出msgpack的数据\n\n参见 代码与数据生成\n\n\n# 如何导出flatbuffers的定义及数据\n\n参见 代码与数据生成\n\n\n# 生成后，本地目录会产生一个 .cache.meta，这个文件的用途是什么？\n\n.cache.meta 里包含了与Luban.Server交互过程中涉及到的所有文件的 (路径， md5码， 长度，修改时间戳)信息。用于优化生成性能。\n\n由于Luban.Client与Luban.Server的工作模型为云生成模型，Luban.Client向服务器发起生成请求后，服务器并不直接读取生成需要的配置文件，而是先获得 这些文件的元信息（路径,md5）,如果内存缓存中有相同md5的文件，则直接读取，不再向客户端读取文件数据，这样极大提升了增量生成的性能。\n\n服务器生成完成后，也会向客户端发送生成文件元数据列表，包含（路径、md5）这些元数据信息。如果本地不存在这些文件，则下载下载，如果已经存在，则检查 是否有变化，此时Luban.Client并不会直接读取本地文件并且计算md5,而是先查询.cache.meta里是否有对应的文件md5信息，如果本地文件的长度和修改时间戳 与.cache.meta里的相同，则认为.cache.meta里包含了正确的md5值，然后拿这个值到服务器生成的结果的md5对比，只有不相同，才会重新下载。\n\n\n# 可以引用现有的枚举和结构吗？比如生成的代码中想使用UnityEngine.AudioType和UnityEngine.Color\n\n可以，支持external类型的枚举和结构，但目前只支持c#语言。 详细文档参见 配置定义介绍 中的external类型相关文档。',normalizedContent:'# faq\n\n\n# 我运行 luban_examples 项目projects目录下的示例项目中的生成脚本，为什么提示我 connect fail，失败了？\n\n示例项目的生成脚本使用了luban.client，默认使用云生成，它需要连接到远程的luban.server才能完成生成。有两个办法可以解决\n\n * 运行 luban_examples 项目目录下的 run_luban_server.bat 或者 run_luban_server.sh 。然后再运行生成脚本\n * 将脚本里的 luban.client/luban.client 换成 luban.clientserver/luban.clientserver。 因为luban.clientserver同时包含了client和server ，可以独立完成生成。\n\n@@将脚本里\nset gen_client=%workspace%\\tools\\luban.client\\luban.client.exe\n@@换成\nset gen_client=%workspace%\\tools\\luban.clientserver\\luban.clientserver.exe\n\n\n1\n2\n3\n4\n\n\n详细参见 luban命令行工具\n\n\n# 如何指定主键\n\ntable的index字段指定主键列表。 详细请参见 wiki-配置相关定义 中关于table的mode和index的相关文档。\n\nmap及list表支持主键概念，未指定mode和index的情况下，自动为mode=map模式，并记录bean的第一个字段作为主键。\n\n假设 tbtest表的记录为test类型，你想用test的my_index字段作为key，则：\n\n * 如果在xml里定义表，则在table的index属性中指定主键字段名，如下：\n\n<table name="tbtest" value="test" index="my_index"/>\n\n\n1\n\n * 如果在 table.xlsx里定义表，则在index列指定主键名，如下\n\n##var   full_name   value_type   define_from_excel   input        index      ...\n        tbtest      test         true                equip.xlsx   my_index   \n\n\n# 支持多主键吗？\n\n支持。 table mode=list时，支持联合多主键模式和独立多主键模式。详细文档参见 wiki-配置相关定义 中关于table的mode的相关文档。\n\n\n# 支持按client和server导出不同表及不同字段吗？\n\n支持。wiki-配置相关定义 中关于 分级定义及分组导出相关文档。\n\n\n# 支持哪些源数据文件类型\n\n * excel族。 csv、xls、xlm、xlsx、xlsm 等等。 csv支持各种编码，luban会智能猜测它的编码，无论你用gbk还是utf-8或者其他编码，都能正确处理。\n * json\n * xml\n * lua\n * yaml\n\n\n# 配置表的数据可以来源于多个文件吗？\n\n可以。 参见 wiki-配置相关定义 中关于 table.input的文档。\n\n\n# 可以将多个表放到同一个excel文件吗？\n\n可以。 参见 wiki-配置相关定义 中关于 table.input的文档。\n\n\n# 当数据文件为xlsx文件时，luban会读入第一个sheet还是所有sheet？\n\n读入所有sheet，但是会忽略那些a1单元格内容不是##开头的sheet。\n\n\n# 策划想在xlsx中有一个非数据的sheet，该怎么做呢\n\n只要该sheet的a1单元格不以##开头即可。\n\n\n# 想注释掉某一列，该如何做\n\n将列名取空，或者 #xxxx, __xxxx 这样的名称。\n\n\n# 想注释掉某一行记录，该如何做\n\n将该行第一个单元格填以##即可。\n\n\n# 有些配置只想开发期内部测试用，正式发布时不导出，该如何做？\n\nluban支持数据tag的概念。 excel第一列为tag。\n\n * 当tag为##时忽略这个行\n * 当tag为xxx时，如果luban.client 命令行中使用 --export_exclude_tags xxx，则不会导出该记录\n\n\n# 我想每个json保存一个记录，文件太多，在input中指定很麻烦，怎么解决？\n\n使用 目录数据源。 把所有json文件放到一个目录下（可以是目录树），将input设为该目录。luban会自动遍历整个目录树，将每个文件当作 一个记录读入。 详细参见json\n\n\n# 一个json文件可以包含多个记录吗？\n\n可以。但必须在数据源中以 *@xxx.json形式指定。详细参见json\n\n\n# 记录可以来自json文件的某个深层次字段吗？\n\n可以。分两种情况：\n\n * 从字段中读入一个记录，则以 a.b.c@xx.json的形式指定\n * 从字段中读入记录列表，则以 *a.b.c@xx.json的形式指定\n\n详细参见json\n\n\n# 可以像xlsx那样，将多个表的数据都放到一个json文件中吗？\n\n可以。 与excel数据源类似，只要每个表用 field@xx.json或者 *field@xx.json的形式指定即可。 详细参见json\n\n\n# 支持异步加载配置表吗？\n\n不直接支持。但你可以通过自定义模板方式实现异步加载。\n\n参见 代码与数据模板，以及相应异步加载示例项目 csharp_async_load\n\n\n# 支持自定义代码或者数据生成吗\n\n支持。 参见 数据与代码模板\n\n\n# 如何导出protobuf的定义及数据\n\n参见 代码与数据生成\n\n\n# 如何导出msgpack的数据\n\n参见 代码与数据生成\n\n\n# 如何导出flatbuffers的定义及数据\n\n参见 代码与数据生成\n\n\n# 生成后，本地目录会产生一个 .cache.meta，这个文件的用途是什么？\n\n.cache.meta 里包含了与luban.server交互过程中涉及到的所有文件的 (路径， md5码， 长度，修改时间戳)信息。用于优化生成性能。\n\n由于luban.client与luban.server的工作模型为云生成模型，luban.client向服务器发起生成请求后，服务器并不直接读取生成需要的配置文件，而是先获得 这些文件的元信息（路径,md5）,如果内存缓存中有相同md5的文件，则直接读取，不再向客户端读取文件数据，这样极大提升了增量生成的性能。\n\n服务器生成完成后，也会向客户端发送生成文件元数据列表，包含（路径、md5）这些元数据信息。如果本地不存在这些文件，则下载下载，如果已经存在，则检查 是否有变化，此时luban.client并不会直接读取本地文件并且计算md5,而是先查询.cache.meta里是否有对应的文件md5信息，如果本地文件的长度和修改时间戳 与.cache.meta里的相同，则认为.cache.meta里包含了正确的md5值，然后拿这个值到服务器生成的结果的md5对比，只有不相同，才会重新下载。\n\n\n# 可以引用现有的枚举和结构吗？比如生成的代码中想使用unityengine.audiotype和unityengine.color\n\n可以，支持external类型的枚举和结构，但目前只支持c#语言。 详细文档参见 配置定义介绍 中的external类型相关文档。',charsets:{cjk:!0}},{title:"Best Practices",frontmatter:{},regularPath:"/best_practices.html",relativePath:"best_practices.md",key:"v-75d3a616",path:"/best_practices.html",headers:[{level:2,title:"命名约定",slug:"命名约定",normalizedTitle:"命名约定",charIndex:21},{level:2,title:"调整生成的代码的命名约定",slug:"调整生成的代码的命名约定",normalizedTitle:"调整生成的代码的命名约定",charIndex:155},{level:2,title:"灵活选择xml与excel定义",slug:"灵活选择xml与excel定义",normalizedTitle:"灵活选择xml与excel定义",charIndex:324},{level:2,title:"Luban.Server还是Luban.ClientServer",slug:"luban-server还是luban-clientserver",normalizedTitle:"luban.server还是luban.clientserver",charIndex:485},{level:2,title:"模块化",slug:"模块化",normalizedTitle:"模块化",charIndex:694},{level:2,title:"导出格式",slug:"导出格式",normalizedTitle:"导出格式",charIndex:803},{level:2,title:"优雅地在excel中配置复杂结构的数据",slug:"优雅地在excel中配置复杂结构的数据",normalizedTitle:"优雅地在excel中配置复杂结构的数据",charIndex:860},{level:2,title:"使用OOP类型继承来定义游戏中复杂的GamePlay数据",slug:"使用oop类型继承来定义游戏中复杂的gameplay数据",normalizedTitle:"使用oop类型继承来定义游戏中复杂的gameplay数据",charIndex:970},{level:2,title:"使用githooks，在策划提交策划配置前检查数据合法性",slug:"使用githooks-在策划提交策划配置前检查数据合法性",normalizedTitle:"使用githooks，在策划提交策划配置前检查数据合法性",charIndex:1148},{level:2,title:"推荐使用 watch 机制，自动监测变更后 重新生成",slug:"推荐使用-watch-机制-自动监测变更后-重新生成",normalizedTitle:"推荐使用 watch 机制，自动监测变更后 重新生成",charIndex:1199},{level:2,title:"策划检查配置脚本推荐加上 --generateonly 参数",slug:"策划检查配置脚本推荐加上-generateonly-参数",normalizedTitle:"策划检查配置脚本推荐加上 --generateonly 参数",charIndex:1665},{level:2,title:"refgroup",slug:"refgroup",normalizedTitle:"refgroup",charIndex:1904},{level:2,title:"编辑器生成的数据使用json数据格式",slug:"编辑器生成的数据使用json数据格式",normalizedTitle:"编辑器生成的数据使用json数据格式",charIndex:1953},{level:2,title:"使用tag来标识测试和开发期数据",slug:"使用tag来标识测试和开发期数据",normalizedTitle:"使用tag来标识测试和开发期数据",charIndex:2075},{level:2,title:"使用tag unchecked 来标识不校验记录",slug:"使用tag-unchecked-来标识不校验记录",normalizedTitle:"使用tag unchecked 来标识不校验记录",charIndex:2178},{level:2,title:"datetime",slug:"datetime",normalizedTitle:"datetime",charIndex:2297},{level:2,title:"本地化",slug:"本地化",normalizedTitle:"本地化",charIndex:2339}],lastUpdated:"2/11/2022, 11:57:34 AM",lastUpdatedTimestamp:1644551854e3,headersStr:"命名约定 调整生成的代码的命名约定 灵活选择xml与excel定义 Luban.Server还是Luban.ClientServer 模块化 导出格式 优雅地在excel中配置复杂结构的数据 使用OOP类型继承来定义游戏中复杂的GamePlay数据 使用githooks，在策划提交策划配置前检查数据合法性 推荐使用 watch 机制，自动监测变更后 重新生成 策划检查配置脚本推荐加上 --generateonly 参数 refgroup 编辑器生成的数据使用json数据格式 使用tag来标识测试和开发期数据 使用tag unchecked 来标识不校验记录 datetime 本地化",content:"# Best Practices\n\n\n# 命名约定\n\n * table.name 推荐 TbXxxYyy 类风格，便于区别表与普通bean类型\n * bean.var.name 推荐 xx_yy_zz风格，生成时自动会根据目标语言，生成合适的变量名，如c#下为XxYyZz；java下为xxYyZz。\n\n\n# 调整生成的代码的命名约定\n\n默认是按照每个语言的推荐风格生成名称，例如 xxxx_yyyy在c#下是XxxxYyyy。有时候你想调整这个命名风格， 比如说，使用原始形式，你可以通过参数 --naming_convention:bean_member none 来达到这一点。\n\n更多可以参考 command_tools 中的文档\n\n\n# 灵活选择xml与excel定义\n\n * 审美要求高的，习惯像protobuf那样手写表定义的，可以完全在xml里完成表定义\n * 实用主义，方便策划使用或编辑，可以完全在excel中完成表定义\n * 可以适当混用以上两者\n\n如果使用xml定义，建议每个模块对应一个xml文件，并且有独立的模块名，便于管理和查找。\n\n\n# Luban.Server还是Luban.ClientServer\n\nLuban.Server需要部属，对于新手可能有些麻烦，但优点在于能利用缓存极大缩短生成时间，另外，更新Luban时也不需要大家更新工具了，有条件的项目推荐部属Luban.Server(使用docker部属其实就一行命令，非常简单，参见command_tools)。\n\n中小项目，省事起见，也可以直接用Luban.ClientServer。\n\n\n# 模块化\n\n强烈建议按模块管理配置，每个模块一个目录，将该模块的所有配置放到该目录下。\n\n定义表与结构时，也推荐加上合适的模块名，如 item.TbItem, item.ItemInfo，而不是空module。\n\n\n# 导出格式\n\n开发期推荐使用相应语言的json版本，这样不会因为配置格式变动而经常重新发布服务器或者客户端\n\n\n# 优雅地在excel中配置复杂结构的数据\n\n配合 多行记录 + 多级字段列名 + sep机制(字段sep，及type的sep机制)，灵活选择 列限定模式和流式模式， 简洁地配置出复杂数据。 有困难可以在群里咨询。\n\n\n# 使用OOP类型继承来定义游戏中复杂的GamePlay数据\n\n灵活使用OOP类型继承来定义技能、BUFF、AI、副本等等复杂的GamePlay数据。视情况选择excel或json数据来填写 这些复杂数据。千万不要再用传统的 type + param1,param2,param3这种方式来组合表达复杂数据结构，对策划和程序不友好，而且难以检查错误。\n\n\n# 使用githooks，在策划提交策划配置前检查数据合法性\n\n参考 githooks-demo\n\n\n# 推荐使用 watch 机制，自动监测变更后 重新生成\n\nLuban.Client和Luban.ClientServer提供了watch生成机制。使用参数 -w dir1,dir2,.. ，当相应目录变更时自动重新生成。例如一个示例脚本如下，当定义或者配置目录发生变化时，自动触发重新生成。\n\n%GEN_CLIENT% -h %LUBAN_SERVER_IP% -j cfg -w %CONF_ROOT%\\Datas,%CONF_ROOT%\\Defines --^\n -d %DEFINE_FILE%^\n --input_data_dir %CONF_ROOT%\\Datas ^\n --output_code_dir TsScripts/src/Gen/Cfg ^\n --output_data_dir Assets\\StreamingAssets\\ConfigData ^\n --gen_types code_typescript_json,data_json ^\n -s client \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 策划检查配置脚本推荐加上 --generateonly 参数\n\n注意，这个参数是Luban.Client的参数，必须加到 -- 之前。 加上此参数后Luban.Server仍然会生成数据，但Luban.Client不下载生成结果。可以进一步缩短时间。\n\n示例脚本如下\n\n%LUBAN_CLIENT% -j cfg --generateonly -- ^\n --input_data_dir %DATA_DIR^ ^\n -- ...\n -- ...\n\n\n1\n2\n3\n4\n\n\n\n# refgroup\n\n如果很多字段都ref了相同一批表，可以使用refgroup方便引用。\n\n\n# 编辑器生成的数据使用json数据格式\n\n编辑器生成的复杂配置数据建议以json数据保存，每个记录点一个文件，放到目录下。将table.input设置为该目录。 luban支持生成记录从json加载和保存的代码，不要自己手写这个序列化！\n\n\n# 使用tag来标识测试和开发期数据\n\n使用tag来标记那些测试和开发期数据，正式发布时使用 --output:exclude_tags tag1,tag2,... 来过滤这些数据， 不要自己去改它！\n\n\n# 使用tag unchecked 来标识不校验记录\n\n有些数据批量临时制作，很多引用值都不合法，但暂时未被程序使用，生成时因为ref失败而打印大量警告。可以为这些记录加上 unchecked 标签，luban就不会检查这些数据了。\n\n\n# datetime\n\n使用datetime来标识时间，注意配合时区参数使用。\n\n\n# 本地化\n\n * 使用text来标识你要本地化的文本类型，不要像之前那样定义一个本地化key字段！\n * 如果导出时便完成本土化，则请使用静态本土化机制\n * 如果运行时需要切换语言，请使用动态本土化机制。",normalizedContent:"# best practices\n\n\n# 命名约定\n\n * table.name 推荐 tbxxxyyy 类风格，便于区别表与普通bean类型\n * bean.var.name 推荐 xx_yy_zz风格，生成时自动会根据目标语言，生成合适的变量名，如c#下为xxyyzz；java下为xxyyzz。\n\n\n# 调整生成的代码的命名约定\n\n默认是按照每个语言的推荐风格生成名称，例如 xxxx_yyyy在c#下是xxxxyyyy。有时候你想调整这个命名风格， 比如说，使用原始形式，你可以通过参数 --naming_convention:bean_member none 来达到这一点。\n\n更多可以参考 command_tools 中的文档\n\n\n# 灵活选择xml与excel定义\n\n * 审美要求高的，习惯像protobuf那样手写表定义的，可以完全在xml里完成表定义\n * 实用主义，方便策划使用或编辑，可以完全在excel中完成表定义\n * 可以适当混用以上两者\n\n如果使用xml定义，建议每个模块对应一个xml文件，并且有独立的模块名，便于管理和查找。\n\n\n# luban.server还是luban.clientserver\n\nluban.server需要部属，对于新手可能有些麻烦，但优点在于能利用缓存极大缩短生成时间，另外，更新luban时也不需要大家更新工具了，有条件的项目推荐部属luban.server(使用docker部属其实就一行命令，非常简单，参见command_tools)。\n\n中小项目，省事起见，也可以直接用luban.clientserver。\n\n\n# 模块化\n\n强烈建议按模块管理配置，每个模块一个目录，将该模块的所有配置放到该目录下。\n\n定义表与结构时，也推荐加上合适的模块名，如 item.tbitem, item.iteminfo，而不是空module。\n\n\n# 导出格式\n\n开发期推荐使用相应语言的json版本，这样不会因为配置格式变动而经常重新发布服务器或者客户端\n\n\n# 优雅地在excel中配置复杂结构的数据\n\n配合 多行记录 + 多级字段列名 + sep机制(字段sep，及type的sep机制)，灵活选择 列限定模式和流式模式， 简洁地配置出复杂数据。 有困难可以在群里咨询。\n\n\n# 使用oop类型继承来定义游戏中复杂的gameplay数据\n\n灵活使用oop类型继承来定义技能、buff、ai、副本等等复杂的gameplay数据。视情况选择excel或json数据来填写 这些复杂数据。千万不要再用传统的 type + param1,param2,param3这种方式来组合表达复杂数据结构，对策划和程序不友好，而且难以检查错误。\n\n\n# 使用githooks，在策划提交策划配置前检查数据合法性\n\n参考 githooks-demo\n\n\n# 推荐使用 watch 机制，自动监测变更后 重新生成\n\nluban.client和luban.clientserver提供了watch生成机制。使用参数 -w dir1,dir2,.. ，当相应目录变更时自动重新生成。例如一个示例脚本如下，当定义或者配置目录发生变化时，自动触发重新生成。\n\n%gen_client% -h %luban_server_ip% -j cfg -w %conf_root%\\datas,%conf_root%\\defines --^\n -d %define_file%^\n --input_data_dir %conf_root%\\datas ^\n --output_code_dir tsscripts/src/gen/cfg ^\n --output_data_dir assets\\streamingassets\\configdata ^\n --gen_types code_typescript_json,data_json ^\n -s client \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 策划检查配置脚本推荐加上 --generateonly 参数\n\n注意，这个参数是luban.client的参数，必须加到 -- 之前。 加上此参数后luban.server仍然会生成数据，但luban.client不下载生成结果。可以进一步缩短时间。\n\n示例脚本如下\n\n%luban_client% -j cfg --generateonly -- ^\n --input_data_dir %data_dir^ ^\n -- ...\n -- ...\n\n\n1\n2\n3\n4\n\n\n\n# refgroup\n\n如果很多字段都ref了相同一批表，可以使用refgroup方便引用。\n\n\n# 编辑器生成的数据使用json数据格式\n\n编辑器生成的复杂配置数据建议以json数据保存，每个记录点一个文件，放到目录下。将table.input设置为该目录。 luban支持生成记录从json加载和保存的代码，不要自己手写这个序列化！\n\n\n# 使用tag来标识测试和开发期数据\n\n使用tag来标记那些测试和开发期数据，正式发布时使用 --output:exclude_tags tag1,tag2,... 来过滤这些数据， 不要自己去改它！\n\n\n# 使用tag unchecked 来标识不校验记录\n\n有些数据批量临时制作，很多引用值都不合法，但暂时未被程序使用，生成时因为ref失败而打印大量警告。可以为这些记录加上 unchecked 标签，luban就不会检查这些数据了。\n\n\n# datetime\n\n使用datetime来标识时间，注意配合时区参数使用。\n\n\n# 本地化\n\n * 使用text来标识你要本地化的文本类型，不要像之前那样定义一个本地化key字段！\n * 如果导出时便完成本土化，则请使用静态本土化机制\n * 如果运行时需要切换语言，请使用动态本土化机制。",charsets:{cjk:!0}},{title:"新手文档",frontmatter:{},regularPath:"/Home.html",relativePath:"Home.md",key:"v-86491b5c",path:"/Home.html",headers:[{level:3,title:"新手文档",slug:"新手文档",normalizedTitle:"新手文档",charIndex:2},{level:3,title:"手册",slug:"手册",normalizedTitle:"手册",charIndex:190}],lastUpdated:"3/28/2022, 8:26:28 PM",lastUpdatedTimestamp:1648470388e3,headersStr:"新手文档 手册",content:"# 新手文档\n\n * 快速上手\n\n * 示例项目 (github) (gitee)\n\n * FAQ\n\n * === 最佳实践推荐 ===\n\n * 版本变更记录\n\n * 支持与联系\n   \n   * QQ群: 692890842 （Luban开发交流群）。有使用方面的疑问请及时加QQ群询问，随时有人帮助解决。\n   * 邮箱: taojingjian#gmail.com\n\n\n# 手册\n\n * 完整特性\n * luban命令行工具\n * 配置定义\n * excel格式介绍\n * excel sep使用介绍\n * 多态类型介绍\n * 数据校验器\n * 代码与数据生成\n * 项目中加载与使用配置\n * 自定义代码与数据模板\n * 记录tag与过滤导出\n * json数据源\n * xml数据源\n * yaml数据源\n * 本地化\n * Editor支持\n * Excel2TextDiff工具\n * LubanAssistant Excel插件",normalizedContent:"# 新手文档\n\n * 快速上手\n\n * 示例项目 (github) (gitee)\n\n * faq\n\n * === 最佳实践推荐 ===\n\n * 版本变更记录\n\n * 支持与联系\n   \n   * qq群: 692890842 （luban开发交流群）。有使用方面的疑问请及时加qq群询问，随时有人帮助解决。\n   * 邮箱: taojingjian#gmail.com\n\n\n# 手册\n\n * 完整特性\n * luban命令行工具\n * 配置定义\n * excel格式介绍\n * excel sep使用介绍\n * 多态类型介绍\n * 数据校验器\n * 代码与数据生成\n * 项目中加载与使用配置\n * 自定义代码与数据模板\n * 记录tag与过滤导出\n * json数据源\n * xml数据源\n * yaml数据源\n * 本地化\n * editor支持\n * excel2textdiff工具\n * lubanassistant excel插件",charsets:{cjk:!0}},{title:"change log",frontmatter:{},regularPath:"/changelog.html",relativePath:"changelog.md",key:"v-612f6124",path:"/changelog.html",headers:[{level:2,title:"2022.03.12",slug:"_2022-03-12",normalizedTitle:"2022.03.12",charIndex:17},{level:2,title:"2022.02.16",slug:"_2022-02-16",normalizedTitle:"2022.02.16",charIndex:59},{level:2,title:"2022.02.12",slug:"_2022-02-12",normalizedTitle:"2022.02.12",charIndex:118},{level:2,title:"2022.02.11",slug:"_2022-02-11",normalizedTitle:"2022.02.11",charIndex:178},{level:2,title:"2022.02.10",slug:"_2022-02-10",normalizedTitle:"2022.02.10",charIndex:238},{level:2,title:"2022.01.29",slug:"_2022-01-29",normalizedTitle:"2022.01.29",charIndex:337},{level:2,title:"2022.01.28",slug:"_2022-01-28",normalizedTitle:"2022.01.28",charIndex:378},{level:2,title:"2022.01.26",slug:"_2022-01-26",normalizedTitle:"2022.01.26",charIndex:414},{level:2,title:"2022.01.06",slug:"_2022-01-06",normalizedTitle:"2022.01.06",charIndex:528},{level:2,title:"2021.12.22",slug:"_2021-12-22",normalizedTitle:"2021.12.22",charIndex:607},{level:2,title:"2021.12.18",slug:"_2021-12-18",normalizedTitle:"2021.12.18",charIndex:640},{level:2,title:"2021.12.09",slug:"_2021-12-09",normalizedTitle:"2021.12.09",charIndex:829},{level:2,title:"2021.12.08",slug:"_2021-12-08",normalizedTitle:"2021.12.08",charIndex:904},{level:2,title:"2021.12.06",slug:"_2021-12-06",normalizedTitle:"2021.12.06",charIndex:957},{level:2,title:"2021.12.05",slug:"_2021-12-05",normalizedTitle:"2021.12.05",charIndex:1078},{level:2,title:"2021.12.04",slug:"_2021-12-04",normalizedTitle:"2021.12.04",charIndex:1157},{level:2,title:"2021.12.02",slug:"_2021-12-02",normalizedTitle:"2021.12.02",charIndex:1280},{level:2,title:"2021.12.01",slug:"_2021-12-01",normalizedTitle:"2021.12.01",charIndex:1322},{level:2,title:"2021.11.30",slug:"_2021-11-30",normalizedTitle:"2021.11.30",charIndex:1419},{level:2,title:"2021.11.22",slug:"_2021-11-22",normalizedTitle:"2021.11.22",charIndex:1557},{level:2,title:"2021.11.20",slug:"_2021-11-20",normalizedTitle:"2021.11.20",charIndex:1608},{level:2,title:"2021.11.18",slug:"_2021-11-18",normalizedTitle:"2021.11.18",charIndex:1670},{level:2,title:"2021.11.16",slug:"_2021-11-16",normalizedTitle:"2021.11.16",charIndex:1699},{level:2,title:"2021.11.15",slug:"_2021-11-15",normalizedTitle:"2021.11.15",charIndex:1787},{level:2,title:"2021.11.09",slug:"_2021-11-09",normalizedTitle:"2021.11.09",charIndex:2089},{level:2,title:"2021.11.05",slug:"_2021-11-05",normalizedTitle:"2021.11.05",charIndex:2117},{level:2,title:"2021.11.2",slug:"_2021-11-2",normalizedTitle:"2021.11.2",charIndex:1557},{level:2,title:"2021.1.29",slug:"_2021-1-29",normalizedTitle:"2021.1.29",charIndex:2355},{level:2,title:"2021.10.28",slug:"_2021-10-28",normalizedTitle:"2021.10.28",charIndex:2399},{level:2,title:"2021.10.27",slug:"_2021-10-27",normalizedTitle:"2021.10.27",charIndex:2455},{level:2,title:"2021.10.25",slug:"_2021-10-25",normalizedTitle:"2021.10.25",charIndex:2497},{level:2,title:"2021.10.22",slug:"_2021-10-22",normalizedTitle:"2021.10.22",charIndex:2636},{level:2,title:"2021.10.20",slug:"_2021-10-20",normalizedTitle:"2021.10.20",charIndex:2736},{level:2,title:"2021.10.18",slug:"_2021-10-18",normalizedTitle:"2021.10.18",charIndex:2778},{level:2,title:"2021.10.13",slug:"_2021-10-13",normalizedTitle:"2021.10.13",charIndex:2823},{level:2,title:"2021.10.11",slug:"_2021-10-11",normalizedTitle:"2021.10.11",charIndex:2861},{level:2,title:"2021.9.1",slug:"_2021-9-1",normalizedTitle:"2021.9.1",charIndex:2945},{level:2,title:"2021.8.28",slug:"_2021-8-28",normalizedTitle:"2021.8.28",charIndex:3004},{level:2,title:"2021.8.27",slug:"_2021-8-27",normalizedTitle:"2021.8.27",charIndex:3039},{level:2,title:"2021.8.26",slug:"_2021-8-26",normalizedTitle:"2021.8.26",charIndex:3154},{level:2,title:"2021.8.25",slug:"_2021-8-25",normalizedTitle:"2021.8.25",charIndex:3300},{level:2,title:"2021.8.24",slug:"_2021-8-24",normalizedTitle:"2021.8.24",charIndex:3376},{level:2,title:"2021.8.13",slug:"_2021-8-13",normalizedTitle:"2021.8.13",charIndex:3401},{level:2,title:"2021.8.12",slug:"_2021-8-12",normalizedTitle:"2021.8.12",charIndex:3517},{level:2,title:"2021.8.9",slug:"_2021-8-9",normalizedTitle:"2021.8.9",charIndex:3549},{level:2,title:"2021.8.4",slug:"_2021-8-4",normalizedTitle:"2021.8.4",charIndex:3590},{level:2,title:"2021.8.3",slug:"_2021-8-3",normalizedTitle:"2021.8.3",charIndex:3666},{level:2,title:"2021.8.2",slug:"_2021-8-2",normalizedTitle:"2021.8.2",charIndex:3004},{level:2,title:"2021.7.30",slug:"_2021-7-30",normalizedTitle:"2021.7.30",charIndex:3887},{level:2,title:"2021.7.29",slug:"_2021-7-29",normalizedTitle:"2021.7.29",charIndex:3947},{level:2,title:"2021.7.8",slug:"_2021-7-8",normalizedTitle:"2021.7.8",charIndex:4010},{level:2,title:"2021.6.19",slug:"_2021-6-19",normalizedTitle:"2021.6.19",charIndex:4075},{level:2,title:"2021.6.17",slug:"_2021-6-17",normalizedTitle:"2021.6.17",charIndex:4186},{level:2,title:"2021.5.8",slug:"_2021-5-8",normalizedTitle:"2021.5.8",charIndex:4251},{level:2,title:"2021.4.12",slug:"_2021-4-12",normalizedTitle:"2021.4.12",charIndex:4317},{level:2,title:"2021.4.8",slug:"_2021-4-8",normalizedTitle:"2021.4.8",charIndex:4381}],lastUpdated:"3/12/2022, 5:03:31 PM",lastUpdatedTimestamp:1647075811e3,headersStr:"2022.03.12 2022.02.16 2022.02.12 2022.02.11 2022.02.10 2022.01.29 2022.01.28 2022.01.26 2022.01.06 2021.12.22 2021.12.18 2021.12.09 2021.12.08 2021.12.06 2021.12.05 2021.12.04 2021.12.02 2021.12.01 2021.11.30 2021.11.22 2021.11.20 2021.11.18 2021.11.16 2021.11.15 2021.11.09 2021.11.05 2021.11.2 2021.1.29 2021.10.28 2021.10.27 2021.10.25 2021.10.22 2021.10.20 2021.10.18 2021.10.13 2021.10.11 2021.9.1 2021.8.28 2021.8.27 2021.8.26 2021.8.25 2021.8.24 2021.8.13 2021.8.12 2021.8.9 2021.8.4 2021.8.3 2021.8.2 2021.7.30 2021.7.29 2021.7.8 2021.6.19 2021.6.17 2021.5.8 2021.4.12 2021.4.8",content:'# change log\n\n\n# 2022.03.12\n\n * 新增data_yaml yaml导出格式支持\n\n\n# 2022.02.16\n\n * 支持vector2,3,4及datetime类型的externaltype映射\n\n\n# 2022.02.12\n\n * excel、json、xml等数据格式使用$type之类的字段名来读取多态类型名\n\n\n# 2022.02.11\n\n * 对容器元素类型的ref也生成相应的ref变量及resolve代码，目前只支持c#\n\n\n# 2022.02.10\n\n * 删除对简单原生数据列表类型"list,int"之类的自动sep\n * 统一#与&的用法，不再允许因为兼容而混乱的用法了\n * 调整externaltype设计\n\n\n# 2022.01.29\n\n * 允许bean的跨模块继承！较大改动的特性！\n\n\n# 2022.01.28\n\n * excel格式中支持定义多态类型\n\n\n# 2022.01.26\n\n * root.xml新增配置项 option\n * gen_types 新增 code_cs_unity_editor_json\n * enum 支持空单元格取默认值，但要求必须包含值为0的项\n\n\n# 2022.01.06\n\n * path校验支持子资源文件格式，如 Assets/Icons/GoodsIcon.spriteatlas[10000]\n\n\n# 2021.12.22\n\n * 新增 python27支持\n\n\n# 2021.12.18\n\n * 新增Unity asset格式支持，可以从asset中解析出目标数据\n * 允许为目录数据源指定参数，这些参数会作用于所有子数据文件\n * 新增 --output:tables, --output:include_tables, --output:exclude_tables 用于指定包含或者排除某些表\n * 新增convert模板支持\n\n\n# 2021.12.09\n\n * 新增 [xxx, xxx] 这种匹配的格式来标识一个多列字段，方便csv这种不支持单元格合并的格式标识多列字段\n\n\n# 2021.12.08\n\n * 新增 protobuf3 schema生成及对应的json格式导出\n\n\n# 2021.12.06\n\n * 新增msgpack导出格式支持\n * 新增flatbuffers定义生成及相应json导出格式支持(binary格式暂时不支持，但特地生成了转换命令文件，可以使用flat将json格式转成binary)\n\n\n# 2021.12.05\n\n * 新增refgroup支持，方便很多字段都引用同一组表的情形\n * 调整sep设计，从列名移到type，更加灵活并且统一\n\n\n# 2021.12.04\n\n * 新增gen_types类型 code_template，可以新增自定义模板类型了\n * 新增与code_template配套的参数 --template:data:dir\n * 不再生成空的模板生成结果文件\n\n\n# 2021.12.02\n\n * 新增外部 enum与bean支持。重大特性！\n\n\n# 2021.12.01\n\n * 新增table.mode=\'list\'类型， 此类型表支持 无主键，联合多主键，独立多主键 三种模式。\n * ref相应调整，适合新增的list类型表模式\n\n\n# 2021.11.30\n\n * 新增protobuf 定义及数据格式导出。优秀！！！\n * Luban.Server新增 --disable_cache 模式，禁用生成缓存，方便调试模板\n * excel格式支持对于列表水平展开时，每个元素单独指定多级标题头，方便填写\n\n\n# 2021.11.22\n\n * 新增 validator: set 。检查值是否在某一集合内。\n\n\n# 2021.11.20\n\n * 新增"unchecked"Tag，用于指示校验器不检查记录\n * 移除"no"Tag\n\n\n# 2021.11.18\n\n * 新增size校验器\n\n\n# 2021.11.16\n\n * 考虑到##field容易写错，新增 ##var和##var 作为子字段行的标签\n * lua、yaml都支持json那样从子字段读入数据\n\n\n# 2021.11.15\n\n * 新增datetime的别名time\n * 修复因为.net 6对TimeZone相关调整导致datetime计算错误的bug\n * Luban.Server和Luban.ClientServer新增 --timezone 参数用于指定默认时区\n * json数据源支持从json子字段读入bean或者list,bean（即多个表的数据可以配到一个json文件中，虽然实际中罕见这么做），支持用*@xxx.json形式将json当作一个记录列表读入 list,bean形式的数据\n * 类型多态id字段名由ID改名为__ID__,避免与常见的字段名冲突而产生编译错误\n\n\n# 2021.11.09\n\n框架升级到.net 6\n\n\n# 2021.11.05\n\n * 使用ClosedXml替换SpreedSheet库，解决mac下convert_xlsx失败的问题\n * 新增 --input_convert_data_dir,用转换数据convert_xxxx生成文件代替table.input中指定的文件为数据源\n * convert_xlsx 生成的文件中，记录按key排序\n\n\n# 2021.11.2\n\n * 新增 --generateonly 选项，生成但不下载结果，用于单纯的配置合法性检查\n\n\n# 2021.1.29\n\n * 放松对enum的格式要求，可以填枚举值对应的整数了\n\n\n# 2021.10.28\n\n * 将Excel2TextDiff拆成独立项目 Excel2TextDiff\n\n\n# 2021.10.27\n\n * 重构excel数据源格式。 更加清晰优雅美观\n\n\n# 2021.10.25\n\n * 新增 --naming_convention_xxxx 相关选项，可以为生成的代码指定命名风格了（camelCase,PascalCase,under_scores等等）\n * 优化 解析excel格式出错时的错误信息，给出准确的错误位置\n\n\n# 2021.10.22\n\n * 新增 --output_compact_json， 生成紧凑的json数据\n * 大幅优化了LubanAssistant 的加载和保存速度。（慢如牛到快如闪电)\n\n\n# 2021.10.20\n\n * LubanAssistant 支持 多行列表\n\n\n# 2021.10.18\n\n * table新增output属性，可以指定生成文件名\n\n\n# 2021.10.13\n\n * 新增LubanAssistant插件\n\n\n# 2021.10.11\n\n * 移除 --export_test_data ，新增 --export_exclude_tags 选项，允许更加灵活地过滤导出数据\n\n\n# 2021.9.1\n\n * 新增 --data_file_extension选项，允许指定生成的数据文件的后缀\n\n\n# 2021.8.28\n\n * 新增 erlang 导出数据格式\n\n\n# 2021.8.27\n\n * 支持数据模板生成，新增 gen_types类型 data_template及相应配套选项--template_name\n * 新增excel字段的default选项，允许为空白单元格指定默认址\n\n\n# 2021.8.26\n\n * 为enum,bean,table等大多数对象添加attrs属性，方便代码模板中自定义处理\n * Luban.Server的 命令行参数-t 语义调整为额外的模板搜索路径。如果指定，优先搜索此路径，再搜索默认的Templates路径。\n * 支持动态本地化\n\n\n# 2021.8.25\n\n * 新增 Luban.ClientServer一体化程序，可以不必部属Luban.Server，一个程序就能完成生成。\n\n\n# 2021.8.24\n\n * 支持代码模板\n\n\n# 2021.8.13\n\n * 新增data_json2格式。 与data_json区别在于 data_json的map导出成[[k1,v1], ...] 而data_json2的map导出格式为 { k1:v1, ... }\n\n\n# 2021.8.12\n\n * 新增 yaml 数据源支持\n\n\n# 2021.8.9\n\n * 在win下自动禁用console的快速编辑模式\n\n\n# 2021.8.4\n\n * 支持在excel中定义bean\n * 支持在excel定义enum类型\n * 优化cfg日志，不再打印吓人的堆栈信息\n\n\n# 2021.8.3\n\n * 新增 --use_unity_vector命令行参数，允许使用 UnityEngine.Vector{2,3,4} 而不是 System.Numerics.Vector{2,3,4}\n\n\n# 2021.8.2\n\n * 解决不同平台下生成json和lua数据文件（换行符）不同的问题， 统一为 \\n\n * 支持从excel中读入Table列表定义。这样大多数情况下，只通过修改excel文件就能完成添加新表。\n\n\n# 2021.7.30\n\n * 支持从excel文件的标题头里直接读取定义，定义和数据一体了。简化写记录定义的麻烦\n\n\n# 2021.7.29\n\n * 解决Luban.Server和Luban.Client在非大陆地区运行错误日志乱码的问题\n\n\n# 2021.7.8\n\n * 新增go语言json数据加载支持(code_go_json)\n * 修复 go对可空变量的支持\n\n\n# 2021.6.19\n\n * 新增Excel2TextDiff工具项目，用于将excel转换为text或者直接将两个excel文件转换为text后再diff\n * excel、lua、xml、json 支持标签过滤\n\n\n# 2021.6.17\n\n * 支持 主版本+分支版本的 多分支数据合并，用于发布多地区版本极其有用\n * 支持 静态本地化\n\n\n# 2021.5.8\n\n * Luban.Client支持watch机制，监测相关定义或数据改变后自动重新生成。节省迭代时间。\n\n\n# 2021.4.12\n\n * 优化导出的json数据文件。unicode字符以原字符方式导出而不是\\uxxxx这种格式。\n\n\n# 2021.4.8\n\n * 新增gen_type类型 data_json_monolithic:将所有json文件生成到一个文件',normalizedContent:'# change log\n\n\n# 2022.03.12\n\n * 新增data_yaml yaml导出格式支持\n\n\n# 2022.02.16\n\n * 支持vector2,3,4及datetime类型的externaltype映射\n\n\n# 2022.02.12\n\n * excel、json、xml等数据格式使用$type之类的字段名来读取多态类型名\n\n\n# 2022.02.11\n\n * 对容器元素类型的ref也生成相应的ref变量及resolve代码，目前只支持c#\n\n\n# 2022.02.10\n\n * 删除对简单原生数据列表类型"list,int"之类的自动sep\n * 统一#与&的用法，不再允许因为兼容而混乱的用法了\n * 调整externaltype设计\n\n\n# 2022.01.29\n\n * 允许bean的跨模块继承！较大改动的特性！\n\n\n# 2022.01.28\n\n * excel格式中支持定义多态类型\n\n\n# 2022.01.26\n\n * root.xml新增配置项 option\n * gen_types 新增 code_cs_unity_editor_json\n * enum 支持空单元格取默认值，但要求必须包含值为0的项\n\n\n# 2022.01.06\n\n * path校验支持子资源文件格式，如 assets/icons/goodsicon.spriteatlas[10000]\n\n\n# 2021.12.22\n\n * 新增 python27支持\n\n\n# 2021.12.18\n\n * 新增unity asset格式支持，可以从asset中解析出目标数据\n * 允许为目录数据源指定参数，这些参数会作用于所有子数据文件\n * 新增 --output:tables, --output:include_tables, --output:exclude_tables 用于指定包含或者排除某些表\n * 新增convert模板支持\n\n\n# 2021.12.09\n\n * 新增 [xxx, xxx] 这种匹配的格式来标识一个多列字段，方便csv这种不支持单元格合并的格式标识多列字段\n\n\n# 2021.12.08\n\n * 新增 protobuf3 schema生成及对应的json格式导出\n\n\n# 2021.12.06\n\n * 新增msgpack导出格式支持\n * 新增flatbuffers定义生成及相应json导出格式支持(binary格式暂时不支持，但特地生成了转换命令文件，可以使用flat将json格式转成binary)\n\n\n# 2021.12.05\n\n * 新增refgroup支持，方便很多字段都引用同一组表的情形\n * 调整sep设计，从列名移到type，更加灵活并且统一\n\n\n# 2021.12.04\n\n * 新增gen_types类型 code_template，可以新增自定义模板类型了\n * 新增与code_template配套的参数 --template:data:dir\n * 不再生成空的模板生成结果文件\n\n\n# 2021.12.02\n\n * 新增外部 enum与bean支持。重大特性！\n\n\n# 2021.12.01\n\n * 新增table.mode=\'list\'类型， 此类型表支持 无主键，联合多主键，独立多主键 三种模式。\n * ref相应调整，适合新增的list类型表模式\n\n\n# 2021.11.30\n\n * 新增protobuf 定义及数据格式导出。优秀！！！\n * luban.server新增 --disable_cache 模式，禁用生成缓存，方便调试模板\n * excel格式支持对于列表水平展开时，每个元素单独指定多级标题头，方便填写\n\n\n# 2021.11.22\n\n * 新增 validator: set 。检查值是否在某一集合内。\n\n\n# 2021.11.20\n\n * 新增"unchecked"tag，用于指示校验器不检查记录\n * 移除"no"tag\n\n\n# 2021.11.18\n\n * 新增size校验器\n\n\n# 2021.11.16\n\n * 考虑到##field容易写错，新增 ##var和##var 作为子字段行的标签\n * lua、yaml都支持json那样从子字段读入数据\n\n\n# 2021.11.15\n\n * 新增datetime的别名time\n * 修复因为.net 6对timezone相关调整导致datetime计算错误的bug\n * luban.server和luban.clientserver新增 --timezone 参数用于指定默认时区\n * json数据源支持从json子字段读入bean或者list,bean（即多个表的数据可以配到一个json文件中，虽然实际中罕见这么做），支持用*@xxx.json形式将json当作一个记录列表读入 list,bean形式的数据\n * 类型多态id字段名由id改名为__id__,避免与常见的字段名冲突而产生编译错误\n\n\n# 2021.11.09\n\n框架升级到.net 6\n\n\n# 2021.11.05\n\n * 使用closedxml替换spreedsheet库，解决mac下convert_xlsx失败的问题\n * 新增 --input_convert_data_dir,用转换数据convert_xxxx生成文件代替table.input中指定的文件为数据源\n * convert_xlsx 生成的文件中，记录按key排序\n\n\n# 2021.11.2\n\n * 新增 --generateonly 选项，生成但不下载结果，用于单纯的配置合法性检查\n\n\n# 2021.1.29\n\n * 放松对enum的格式要求，可以填枚举值对应的整数了\n\n\n# 2021.10.28\n\n * 将excel2textdiff拆成独立项目 excel2textdiff\n\n\n# 2021.10.27\n\n * 重构excel数据源格式。 更加清晰优雅美观\n\n\n# 2021.10.25\n\n * 新增 --naming_convention_xxxx 相关选项，可以为生成的代码指定命名风格了（camelcase,pascalcase,under_scores等等）\n * 优化 解析excel格式出错时的错误信息，给出准确的错误位置\n\n\n# 2021.10.22\n\n * 新增 --output_compact_json， 生成紧凑的json数据\n * 大幅优化了lubanassistant 的加载和保存速度。（慢如牛到快如闪电)\n\n\n# 2021.10.20\n\n * lubanassistant 支持 多行列表\n\n\n# 2021.10.18\n\n * table新增output属性，可以指定生成文件名\n\n\n# 2021.10.13\n\n * 新增lubanassistant插件\n\n\n# 2021.10.11\n\n * 移除 --export_test_data ，新增 --export_exclude_tags 选项，允许更加灵活地过滤导出数据\n\n\n# 2021.9.1\n\n * 新增 --data_file_extension选项，允许指定生成的数据文件的后缀\n\n\n# 2021.8.28\n\n * 新增 erlang 导出数据格式\n\n\n# 2021.8.27\n\n * 支持数据模板生成，新增 gen_types类型 data_template及相应配套选项--template_name\n * 新增excel字段的default选项，允许为空白单元格指定默认址\n\n\n# 2021.8.26\n\n * 为enum,bean,table等大多数对象添加attrs属性，方便代码模板中自定义处理\n * luban.server的 命令行参数-t 语义调整为额外的模板搜索路径。如果指定，优先搜索此路径，再搜索默认的templates路径。\n * 支持动态本地化\n\n\n# 2021.8.25\n\n * 新增 luban.clientserver一体化程序，可以不必部属luban.server，一个程序就能完成生成。\n\n\n# 2021.8.24\n\n * 支持代码模板\n\n\n# 2021.8.13\n\n * 新增data_json2格式。 与data_json区别在于 data_json的map导出成[[k1,v1], ...] 而data_json2的map导出格式为 { k1:v1, ... }\n\n\n# 2021.8.12\n\n * 新增 yaml 数据源支持\n\n\n# 2021.8.9\n\n * 在win下自动禁用console的快速编辑模式\n\n\n# 2021.8.4\n\n * 支持在excel中定义bean\n * 支持在excel定义enum类型\n * 优化cfg日志，不再打印吓人的堆栈信息\n\n\n# 2021.8.3\n\n * 新增 --use_unity_vector命令行参数，允许使用 unityengine.vector{2,3,4} 而不是 system.numerics.vector{2,3,4}\n\n\n# 2021.8.2\n\n * 解决不同平台下生成json和lua数据文件（换行符）不同的问题， 统一为 \\n\n * 支持从excel中读入table列表定义。这样大多数情况下，只通过修改excel文件就能完成添加新表。\n\n\n# 2021.7.30\n\n * 支持从excel文件的标题头里直接读取定义，定义和数据一体了。简化写记录定义的麻烦\n\n\n# 2021.7.29\n\n * 解决luban.server和luban.client在非大陆地区运行错误日志乱码的问题\n\n\n# 2021.7.8\n\n * 新增go语言json数据加载支持(code_go_json)\n * 修复 go对可空变量的支持\n\n\n# 2021.6.19\n\n * 新增excel2textdiff工具项目，用于将excel转换为text或者直接将两个excel文件转换为text后再diff\n * excel、lua、xml、json 支持标签过滤\n\n\n# 2021.6.17\n\n * 支持 主版本+分支版本的 多分支数据合并，用于发布多地区版本极其有用\n * 支持 静态本地化\n\n\n# 2021.5.8\n\n * luban.client支持watch机制，监测相关定义或数据改变后自动重新生成。节省迭代时间。\n\n\n# 2021.4.12\n\n * 优化导出的json数据文件。unicode字符以原字符方式导出而不是\\uxxxx这种格式。\n\n\n# 2021.4.8\n\n * 新增gen_type类型 data_json_monolithic:将所有json文件生成到一个文件',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/data_json.html",relativePath:"data_json.md",key:"v-5cf77684",path:"/data_json.html",headers:[{level:2,title:"json数据格式",slug:"json数据格式",normalizedTitle:"json数据格式",charIndex:15},{level:2,title:"以复合json文件形式组织",slug:"以复合json文件形式组织",normalizedTitle:"以复合json文件形式组织",charIndex:1569},{level:2,title:"以目录树形式组织",slug:"以目录树形式组织",normalizedTitle:"以目录树形式组织",charIndex:2855},{level:2,title:"数据tag",slug:"数据tag",normalizedTitle:"数据tag",charIndex:3050}],lastUpdated:"2/12/2022, 1:33:01 PM",lastUpdatedTimestamp:1644643981e3,headersStr:"json数据格式 以复合json文件形式组织 以目录树形式组织 数据tag",content:'# json 数据源\n\n\n# json数据格式\n\n大多数数据格式填法符合直觉，有几个数据类型的格式比较特殊：\n\n * set类型。填法为 [v1,v2,...]\n * map类型。由于json只支持string类型的key，因此map格式填法为 [[k1,v1],[k2,v2]...]\n * 多态bean类型。需要 $type 属性来指定具体类型名。\n * text类型，填法为 {"key":key, "text":text}\n\n不同数据结构在json中格式示例如下：\n\n<bean name="DemoType2" >\n <var name="x4" type="int"/>\n <var name="x1" type="bool"/>\n <var name="x5" type="long"/>\n <var name="x6" type="float"/>\n <var name="x7" type="double"/>\n <var name="x10" type="string"/>\n <var name="t1" type="text"/>\n <var name="x12" type="DemoType1"/>\n <var name="x13" type="DemoEnum"/>\n <var name="x14" type="DemoDynamic"/>\n <var name="v2" type="vector2"/>\n <var name="v3" type="vector3"/>\n <var name="v4" type="vector4"/>\n <var name="t1" type="datetime"/>\n <var name="k1" type="array,int"/>\n <var name="k2" type="list,int"/>\n <var name="k8" type="map,int,int"/>\n <var name="k9" type="list,DemoE2"/>\n <var name="k15" type="array,DemoDynamic" /> \n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n示例json文件内容如下\n\n {\n "x1":true,\n "x2":3,\n "x3":128,\n "x4":1,\n "x5":11223344,\n "x6":1.2,\n "x7":1.23432,\n "x10":"hq",\n "t1": {"key":"/key/xx1","text":"apple"},\n "x12": { "x1":10},\n "x13":"B",\n "x14":{"$type": "DemoD2", "x1":1, "x2":2},\n "v2":{"x":1, "y":2},\n "v3":{"x":1.1, "y":2.2, "z":3.4},\n "v4":{"x":10.1, "y":11.2, "z":12.3, "w":13.4},\n "t1":"1970-01-01 00:00:00",\n "k1":[1,2],\n "k2":[2,3],\n "k7":[2,3],\n "k8":[[2,2],[4,10]],\n "k9":[{"y1":1, "y2":true},{"y1":2, "y2":false}],\n "k15":[{"$type": "DemoD2", "x1":1, "x2":2}]\n }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 以复合json文件形式组织\n\n整个表以一个或者多个json文件的形式组织。在table的input属性中手动指定json数据源，有以下几种格式：\n\n * xxx.json，把xxx.json当作一个记录读入。\n * *@xxx.json，把xxx.json当作记录列表读入。\n * field@xxx.json，把 xxx.json中的field字段当作一个记录读入。field可以是深层次字段，比如 a.b.c。\n * *field@xxx.json，把xxx.json中的field字段当作记录列表读入。field可以是深层次字段。\n\n比较有趣的是，与xlsx数据源相似，支持将多个表放到同一个json中，不过实践中极少这么做。\n\n如下列示例：\n\n * TbCompositeJsonTable1 从 composite_tables.json的table1字段中读入记录列表，从composite_tables2.json中读入记录列表，从one_record.json中读入一个记录\n * TbCompositeJsonTable2 从 composite_tables.json的table2字段中读入记录列表\n * TbCompositeJsonTable3 从 composite_tables.json的table3字段中读入一个记录\n\n<bean name="CompositeJsonTable1">\n <var name="id" type="int"/>\n <var name="x" type="string"/>\n</bean>\n<bean name="CompositeJsonTable2">\n <var name="id" type="int"/>\n <var name="y" type="int"/>\n</bean>\n<bean name="CompositeJsonTable3">\n <var name="a" type="int"/>\n <var name="b" type="int"/>\n</bean>\n\n<table name="TbCompositeJsonTable1" value="CompositeJsonTable1" input="*table1@composite_tables.json,*@composite_tables2.json,one_record.json"/>\n<table name="TbCompositeJsonTable2" value="CompositeJsonTable2" input="*table2@composite_tables.json"/>\n<table name="TbCompositeJsonTable3" value="CompositeJsonTable3" mode="one" input="table3@composite_tables.json"/>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 以目录树形式组织\n\n典型用法是，以目录为数据源（会遍历整棵目录树），目录树下每个json文件为一个记录读入。\n\n如下，递归遍历test/json_datas整个目录树，按文件名排序后依次将每个json数据当作一个记录读入。\n\n<table name="TbDataFromJson" value="DemoType2" input="test/json_datas"/>\n\n\n1\n\n\n\n# 数据tag\n\n与excel格式类似，json格式支持记录tag，用 __tag__ 属性来指明tag，示例如下：\n\n{\n "__tag__":"dev",\n "x":1,\n "y":2\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# json 数据源\n\n\n# json数据格式\n\n大多数数据格式填法符合直觉，有几个数据类型的格式比较特殊：\n\n * set类型。填法为 [v1,v2,...]\n * map类型。由于json只支持string类型的key，因此map格式填法为 [[k1,v1],[k2,v2]...]\n * 多态bean类型。需要 $type 属性来指定具体类型名。\n * text类型，填法为 {"key":key, "text":text}\n\n不同数据结构在json中格式示例如下：\n\n<bean name="demotype2" >\n <var name="x4" type="int"/>\n <var name="x1" type="bool"/>\n <var name="x5" type="long"/>\n <var name="x6" type="float"/>\n <var name="x7" type="double"/>\n <var name="x10" type="string"/>\n <var name="t1" type="text"/>\n <var name="x12" type="demotype1"/>\n <var name="x13" type="demoenum"/>\n <var name="x14" type="demodynamic"/>\n <var name="v2" type="vector2"/>\n <var name="v3" type="vector3"/>\n <var name="v4" type="vector4"/>\n <var name="t1" type="datetime"/>\n <var name="k1" type="array,int"/>\n <var name="k2" type="list,int"/>\n <var name="k8" type="map,int,int"/>\n <var name="k9" type="list,demoe2"/>\n <var name="k15" type="array,demodynamic" /> \n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n示例json文件内容如下\n\n {\n "x1":true,\n "x2":3,\n "x3":128,\n "x4":1,\n "x5":11223344,\n "x6":1.2,\n "x7":1.23432,\n "x10":"hq",\n "t1": {"key":"/key/xx1","text":"apple"},\n "x12": { "x1":10},\n "x13":"b",\n "x14":{"$type": "demod2", "x1":1, "x2":2},\n "v2":{"x":1, "y":2},\n "v3":{"x":1.1, "y":2.2, "z":3.4},\n "v4":{"x":10.1, "y":11.2, "z":12.3, "w":13.4},\n "t1":"1970-01-01 00:00:00",\n "k1":[1,2],\n "k2":[2,3],\n "k7":[2,3],\n "k8":[[2,2],[4,10]],\n "k9":[{"y1":1, "y2":true},{"y1":2, "y2":false}],\n "k15":[{"$type": "demod2", "x1":1, "x2":2}]\n }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 以复合json文件形式组织\n\n整个表以一个或者多个json文件的形式组织。在table的input属性中手动指定json数据源，有以下几种格式：\n\n * xxx.json，把xxx.json当作一个记录读入。\n * *@xxx.json，把xxx.json当作记录列表读入。\n * field@xxx.json，把 xxx.json中的field字段当作一个记录读入。field可以是深层次字段，比如 a.b.c。\n * *field@xxx.json，把xxx.json中的field字段当作记录列表读入。field可以是深层次字段。\n\n比较有趣的是，与xlsx数据源相似，支持将多个表放到同一个json中，不过实践中极少这么做。\n\n如下列示例：\n\n * tbcompositejsontable1 从 composite_tables.json的table1字段中读入记录列表，从composite_tables2.json中读入记录列表，从one_record.json中读入一个记录\n * tbcompositejsontable2 从 composite_tables.json的table2字段中读入记录列表\n * tbcompositejsontable3 从 composite_tables.json的table3字段中读入一个记录\n\n<bean name="compositejsontable1">\n <var name="id" type="int"/>\n <var name="x" type="string"/>\n</bean>\n<bean name="compositejsontable2">\n <var name="id" type="int"/>\n <var name="y" type="int"/>\n</bean>\n<bean name="compositejsontable3">\n <var name="a" type="int"/>\n <var name="b" type="int"/>\n</bean>\n\n<table name="tbcompositejsontable1" value="compositejsontable1" input="*table1@composite_tables.json,*@composite_tables2.json,one_record.json"/>\n<table name="tbcompositejsontable2" value="compositejsontable2" input="*table2@composite_tables.json"/>\n<table name="tbcompositejsontable3" value="compositejsontable3" mode="one" input="table3@composite_tables.json"/>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 以目录树形式组织\n\n典型用法是，以目录为数据源（会遍历整棵目录树），目录树下每个json文件为一个记录读入。\n\n如下，递归遍历test/json_datas整个目录树，按文件名排序后依次将每个json数据当作一个记录读入。\n\n<table name="tbdatafromjson" value="demotype2" input="test/json_datas"/>\n\n\n1\n\n\n\n# 数据tag\n\n与excel格式类似，json格式支持记录tag，用 __tag__ 属性来指明tag，示例如下：\n\n{\n "__tag__":"dev",\n "x":1,\n "y":2\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/catalog.html",relativePath:"catalog.md",key:"v-0d264b78",path:"/catalog.html",lastUpdated:"12/3/2021, 3:11:18 PM",lastUpdatedTimestamp:1638515478e3,headersStr:null,content:" * start up\n   * 下载 dotnet 5\n   * 下载 luban.client&luban.server\n     * 启动 luban.server\n   * 创建游戏配置\n     * root.xml\n     * 新增一个表定义\n     * 新增一个excel文件\n   * 生成\n     * c# dotnet core\n       * gen.client 命令行\n     * c# unity\n     * c# unity + ILRuntime\n     * lua unity xlua\n     * lua unity tolua\n     * 其他lua\n     * java\n     * go\n     * cpp\n     * typescript\n     * python 2.7及3.0\n * 进阶\n   * 游戏配置\n     * excel 篇\n       * 标题头定义\n       * 定义和配置更多基础类型\n       * 定义枚举\n       * 定义bean\n       * 数据格式\n       * 指定某个或者多个sheet或者文件\n       * list 或者其他类型\n       * group 分组导出\n       * tag\n       * sep\n       * multi_rows\n       * 多级标题头\n       * 单例表\n       * 行表与列表\n       * 可空变量\n       * datetime\n       * convert\n       * 多态bean\n     * json 篇\n     * lua\n     * xml\n     * 一个同时包含 excel 、 json 配置的项目\n   * 数据校验\n     * ref\n     * path\n   * 导出格式\n     * bin 格式\n     * lua 格式\n   * 本地化\n * gen.client & gen.server 工作模型\n   \n * 定义 + 数据的 抽象模型\n * 定义\n   * 根定义文件\n     * group\n     * service\n     * topmodule\n     * import\n   * 子模块定义\n     * 类型系统\n       * 基础类型\n       * 可空类型\n       * 枚举\n       * const\n       * bean\n         * field\n           * convert 常量替换\n         * 多态\n     * table\n     * module\n * 源数据格式\n   * excel\n   * json\n   * lua\n   * xml\n * 导出数据格式\n   * bin\n   * json\n   * lua\n     * emmylua anntations\n * input 多种数据文件来源\n * group 数据分组\n * tag\n * 资源列表导出\n * validator 数据检验\n * 本地化\n * editor 相关。导出符合luban数据约束的文件。\n * ide支持\n   * emmylua anntations\n\n * luban.client 命令行介绍\n   * luban.client 命令行参数\n   * job cfg 命令行参数\n\n * 各个语言和引擎及平台下的项目搭建\n   \n   * c# + dotnet core\n   * c# + unity\n   * c# + unity + ILRuntime\n   * 其他 c# 平台\n   * lua + unity + tolua\n   * lua + unity + xlua\n   * lua + unity + slua\n   * lua + unreal + unlua\n   * lua + cocos2dx\n   * 其他使用 lua 的 平台\n   * c++ + unreal\n   * c++ + 其他平台\n   * go\n   * java\n   * python 2.7\n   * python 3.0\n   * typescript + 微信小游戏\n   * typescript + 其他平台\n\n * luban 开发\n   \n   * git clone 项目\n   * luban 构建与发布\n     * 普通构建\n     * docker\n   * 代码结构介绍\n   * 自定义 job",normalizedContent:" * start up\n   * 下载 dotnet 5\n   * 下载 luban.client&luban.server\n     * 启动 luban.server\n   * 创建游戏配置\n     * root.xml\n     * 新增一个表定义\n     * 新增一个excel文件\n   * 生成\n     * c# dotnet core\n       * gen.client 命令行\n     * c# unity\n     * c# unity + ilruntime\n     * lua unity xlua\n     * lua unity tolua\n     * 其他lua\n     * java\n     * go\n     * cpp\n     * typescript\n     * python 2.7及3.0\n * 进阶\n   * 游戏配置\n     * excel 篇\n       * 标题头定义\n       * 定义和配置更多基础类型\n       * 定义枚举\n       * 定义bean\n       * 数据格式\n       * 指定某个或者多个sheet或者文件\n       * list 或者其他类型\n       * group 分组导出\n       * tag\n       * sep\n       * multi_rows\n       * 多级标题头\n       * 单例表\n       * 行表与列表\n       * 可空变量\n       * datetime\n       * convert\n       * 多态bean\n     * json 篇\n     * lua\n     * xml\n     * 一个同时包含 excel 、 json 配置的项目\n   * 数据校验\n     * ref\n     * path\n   * 导出格式\n     * bin 格式\n     * lua 格式\n   * 本地化\n * gen.client & gen.server 工作模型\n   \n * 定义 + 数据的 抽象模型\n * 定义\n   * 根定义文件\n     * group\n     * service\n     * topmodule\n     * import\n   * 子模块定义\n     * 类型系统\n       * 基础类型\n       * 可空类型\n       * 枚举\n       * const\n       * bean\n         * field\n           * convert 常量替换\n         * 多态\n     * table\n     * module\n * 源数据格式\n   * excel\n   * json\n   * lua\n   * xml\n * 导出数据格式\n   * bin\n   * json\n   * lua\n     * emmylua anntations\n * input 多种数据文件来源\n * group 数据分组\n * tag\n * 资源列表导出\n * validator 数据检验\n * 本地化\n * editor 相关。导出符合luban数据约束的文件。\n * ide支持\n   * emmylua anntations\n\n * luban.client 命令行介绍\n   * luban.client 命令行参数\n   * job cfg 命令行参数\n\n * 各个语言和引擎及平台下的项目搭建\n   \n   * c# + dotnet core\n   * c# + unity\n   * c# + unity + ilruntime\n   * 其他 c# 平台\n   * lua + unity + tolua\n   * lua + unity + xlua\n   * lua + unity + slua\n   * lua + unreal + unlua\n   * lua + cocos2dx\n   * 其他使用 lua 的 平台\n   * c++ + unreal\n   * c++ + 其他平台\n   * go\n   * java\n   * python 2.7\n   * python 3.0\n   * typescript + 微信小游戏\n   * typescript + 其他平台\n\n * luban 开发\n   \n   * git clone 项目\n   * luban 构建与发布\n     * 普通构建\n     * docker\n   * 代码结构介绍\n   * 自定义 job",charsets:{cjk:!0}},{title:"介绍",frontmatter:{},regularPath:"/command_tools.html",relativePath:"command_tools.md",key:"v-12a63cc4",path:"/command_tools.html",headers:[{level:2,title:"Luban.Client 、Luban.Server和 Luban.ClientServer的功能和区别",slug:"luban-client-、luban-server和-luban-clientserver的功能和区别",normalizedTitle:"luban.client 、luban.server和 luban.clientserver的功能和区别",charIndex:9},{level:2,title:"云生成的优点",slug:"云生成的优点",normalizedTitle:"云生成的优点",charIndex:419},{level:2,title:"部属",slug:"部属",normalizedTitle:"部属",charIndex:189},{level:3,title:"方法1： Luban.Client与Luban.Server独立部属，云生成模式",slug:"方法1-luban-client与luban-server独立部属-云生成模式",normalizedTitle:"方法1： luban.client与luban.server独立部属，云生成模式",charIndex:610},{level:3,title:"方法2： Client与Server一体模式",slug:"方法2-client与server一体模式",normalizedTitle:"方法2： client与server一体模式",charIndex:1504},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:162},{level:3,title:"luban-server 使用介绍",slug:"luban-server-使用介绍",normalizedTitle:"luban-server 使用介绍",charIndex:1800},{level:3,title:"luban-client 使用介绍",slug:"luban-client-使用介绍",normalizedTitle:"luban-client 使用介绍",charIndex:2372},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:907},{level:3,title:"案例1",slug:"案例1",normalizedTitle:"案例1",charIndex:9492},{level:3,title:"案例2",slug:"案例2",normalizedTitle:"案例2",charIndex:10039},{level:3,title:"案例3",slug:"案例3",normalizedTitle:"案例3",charIndex:10567},{level:3,title:"案例4",slug:"案例4",normalizedTitle:"案例4",charIndex:11032},{level:3,title:"案例5",slug:"案例5",normalizedTitle:"案例5",charIndex:11497}],lastUpdated:"3/12/2022, 5:03:31 PM",lastUpdatedTimestamp:1647075811e3,headersStr:"Luban.Client 、Luban.Server和 Luban.ClientServer的功能和区别 云生成的优点 部属 方法1： Luban.Client与Luban.Server独立部属，云生成模式 方法2： Client与Server一体模式 使用 luban-server 使用介绍 luban-client 使用介绍 示例 案例1 案例2 案例3 案例4 案例5",content:'# 介绍\n\n\n# Luban.Client 、Luban.Server和 Luban.ClientServer的功能和区别\n\nLuban 默认的工作模型为 云生成模型，也就是 Luban.Client 将生成请求提交到远程的 Luban.Server，Luban.Server将生成结果返回给Luban.Client。 对于使用Luban云生成工作模型的项目，需要在一个服务器上部属 Luban.Server (当然也可以直接在本地化运行），然后将 Luban.Client的 -h 参数改为 该服务器的IP。\n\nLuban.ClientServer为Luban.Client+Luban.Server一体的程序，内嵌了Luban.Client和Luban.Server，其工作原理与云生成的模式一致。\n\n有些项目规模较小，或者为个人开发者，不想部属Luban.Server，则可以采用Luban.ClientServer工具。\n\n\n# 云生成的优点\n\n云生成模式下，Luban.Server会缓存生成结果，对于定义和数据没有变化的配置表，直接返回生成结果。日常开发中，经常只改动了个别表，使用了云生成后，只会生成改变的表的数据， 极大缩短了生成时间，日常生成时间基本在300ms量级。 对于MMORPG这样的大项目，日常生成基本了1s以内，节省非常可观的时间。\n\n\n# 部属\n\nLuban工具有两种部属方式。\n\n\n# 方法1： Luban.Client与Luban.Server独立部属，云生成模式\n\n# 部属 luban-server\n\n * 基于 docker (强烈推荐以这种方式在服务器上部属luban-server，因为可以充分利用缓存机制大幅缩短生成时间)\n   \n   docker run -d --rm --name luban-server -p 8899:8899 focuscreativegames/luban-server:latest\n\n * 基于 .net 6 runtime （可跨平台，不需要重新编译）\n   \n   * 自行安装 .net 6 runtime.\n   * 从示例项目拷贝整个Luban.ClientServer目录（可跨平台，即使在linux、mac平台也不需要重新编译）\n   * 在Luban.ClientServer目录下运行 dotnet Luban.Server.dll (提示：Win平台可以直接运行 Luban.Server.exe)\n\n# 安装 luban-client\n\n * 基于 docker (只推荐与jenkins之类devops工具配合使用，因为docker容器启动会增加一定的延迟)\n   \n   docker run --rm -v $PWD/.cache.meta:/bin/.cache.meta focuscreativegames/luban-client <参数>\n   \n   提醒！ .cache.meta这个文件用于保存本地生成或者提交到远程的文件md5缓存，强烈推荐 添加-v $PWD/.cache.meta:/bin/.cache.meta 映射，不然每次重新计算所有涉及文件的md5,这可能在项目后期会造成多达几秒的延迟。\n\n * 基于 .net 6 runtime （推荐win平台使用，可跨平台，不需要重新编译）\n   \n   * 自行安装 .net 6 runtime.\n   * 从示例项目拷贝 Luban.Client（可跨平台，即使在linux、mac平台也不需要重新编译）\n\n\n# 方法2： Client与Server一体模式\n\nClient与Server在同个进程内运行，不需要单独部属Luban.Server。\n\n将运行脚本中%LUBAN_CLIENT%变量由 Luban.Client/Luban.Client 改为 Luban.ClientServer/Luban.ClientServer，同时删除 -h (--host ) 选项及其参数。\n\nLuban.ClientServer是Luban.Client的功能超集，可以完全替代Luban.Client。\n\n----------------------------------------\n\n\n# 使用\n\n\n# luban-server 使用介绍\n\n命令行使用\n\ndotnet Luban.Server.dll [-p <port>] [-l <log level>]\n\n参数介绍：\n-p, --port <port>               可选参数。 监听端口 <port>，默认为8899。\n-l, --loglevel <log level>      可选参数。 日志级别。默认为INFO。 有效值有: TRACE,DEBUG,INFO,WARN,ERROR,FATAL,OFF\n-t, --template_search_path      可选参数。模板的额外搜索路径。优先从此路径，再从Templates目录搜索模板文件。\n--disable_cache                 可选参数。禁用生成中间过程的缓存，但保留了源文件缓存。在模板调试时比较有用。\n--i10n:default_timezone  <timezone>       可选参数。 datetime时间所在的时区。如果未设置则会尝试用"Asia/Shangehai"和"China Standard Time"。\n\n\n关于时区，win下可使用命令"tzutil /l" 查看本机时区列表。 也可查阅MS文档default-time-zones列表\n\n\n# luban-client 使用介绍\n\n命令行使用\n\ndotnet Luban.Client.dll [-h <host>] [-p <port>] [-l <log level>] [-c <cache meta file>] [-w <watch dirs>] [-h ] -j cfg -- <job options>\n\n参数介绍：\n-h,--host <host>            可选参数。 luban-server的地址。默认为 127.0.0.1\n-p,--port <port>            可选参数。 luban-server的端口。默认为 8899\n-j,--job <job>              必选参数。 生成类型。目前支持的生成类型有: cfg,proto,db。 生成配置请取cfg。\n-l,--loglevel <log level>   可选参数。 日志级别。默认为INFO。有效值有: TRACE,DEBUG,INFO,WARN,ERROR,FATAL,OFF\n-c,--cachemetafile <meta file>  可选参数。 meta缓存文件名。 默认为 .cache.meta\n-w,--watch <dir1;dir2...>     可选参数。 监测目录或者目录列表，以逗号\';\'分隔。当开启此选项后，生成结束后不会退出程序，而是进入自动生成模式。监听到目标目录发生变化后，自动重新运行生成。省去改动后手动运行生成脚本的麻烦。\n--generateonly              可选参数。  仅生成。不从服务器下载生成结果。可以用于检查服务器是否能成功生成。\n-h,--help                   可选参数。显示帮助信息\n--  <job options>           必选参数。 从此参数起，便是 不同job的特有选项\n\n\n----------------------------------------\n\ncfg的<job options>介绍：\n\n-d,--define_file <root file>            必选参数。 根定义文件名。\n--input_data_dir  <input data dir>      必选参数。 配置数据文件根目录。\n--input:convert:dir <dir>               可选参数。 执行json、lua、xlsx之类数据格式转换时，提供的数据源，覆盖table中默认的input参数。\n-c,--output_code_dir <output code dir>  可选参数。 生成代码文件的目录。\n-s,--service                            必选参数。生成分组目标。一般来说，会定义client,server,editor等好几个目标，不同目标的生成内容不同。\n\n--gen_types <type1,type2,,,>            必选参数。生成任务类型。既可以是生成代码也可以是生成数据或者其他。目前支持的有 code_cs_bin,code_cs_unity_bin,code_cs_dotnet_json,code_cs_unity_json,code_cs_unity_editor_json,code_lua_bin,code_java_bin,code_go_bin,code_go_json,code_cpp_bin,code_cpp_ue_editor_json,code_python27_json,code_python3_json，code_typescript_bin,code_typescript_json,code_rust_json,code_protobuf2,code_protobuf3,code_template,code_flatbuffers,data_bin,data_lua,data_json,data_json_monolithic,data_yaml,data_template,data_protobuf_bin,data_protobuf_json,data_flatbuffers_json,convert_json,convert_lua,convert_xlsx,convert_template\n\n--validate_root_dir <path validate root dir>. 可选参数。 配置path检查的根目录。\n\n--output_data_dir <output data dir>     可选参数。 导出的数据文件的目录。只生成代码时可不指定。\n\n--output:data:compact_json                   可选参数。默认导出的json格式为对齐后的优雅格式，使用此参数后导出紧凑的不带空格和换行的格式。\n--output:data:file_extension  <output data file extension>     可选参数。 导出数据文件的后缀。默认按照生成类型自动选择。\n--output:exclude_tags <tag1,tag2>       可选参数。 导出时排除包含这些tag的数据\n--output:tables <table1,table2...>      可选参数。手动指定导出哪些表。覆盖group中设置\n--output:include_tables <table1,table2...>  可选参数。除了group中设置外，额外新增表。\n--output:exclude_tables <table1,table2...>  可选参数。排除group中指定的表。\n\n--output:convert:file_extension <extension> 可选参数。 convert数据文件的后缀。默认按照模板名猜测。\n\n--template:code:dir <dir name>          可选参数。自定义额外代码模板的目录名\n--template:data:file  <template name>        可选参数。数据模板的名称（不包含后缀），当gen_types包含 data_template时必须指定。\n--template:convert:file <template name>     可选参数。convert模板的名称（不包含后缀），当gen_types包含convert_template时必须指定。\n\n\n--naming_convention:module <convention> 可选参数。生成代码中模板名的命名约定，可用值为 language_recommend,none,camelCase,PascalCase,under_scores。 默认为language_recommend，即选择与相应语言推荐的命名约定风格。 此选项目前未生效。\n--naming_convention:bean_member <convention>    可选参数。生成代码中bean类型字段名的命名约定，可用值为 language_recommend,none,camelCase,PascalCase,under_scores。 默认为language_recommend。\n--naming_convention:enum_member <convention>    可选参数。生成代码中enum类型名的命名约定，可用值为 language_recommend,none,camelCase,PascalCase,under_scores。 默认为language_recommend。此选项目前未生效。\n--access_bean_member <access mode>  可选参数。 bean属性的访问方式。可用值为language_recommend,variable,getter_setter,property。默认为 language_recommend。此字段目前未生效。\n\n--l10n:timezone <timezone>           可选参数。 指定所在时区。影响datetime类型转换为utc时间。 默认为中国北京时间。\n--l10n:input_text_files <file1,file2..> 可选参数。 本地化的文本映射表。可以有多个。\n--l10n:text_field_name <field name>     可选参数。 文本映射表中，目标映射列的列名，默认为text\n--l10n:output_not_translated_text_file <file> 可选参数。 未被本地化映射的text key和value的输出文件。不提供该参数则不生成\n--l10n:patch <patch name>                  可选参数。当前需要生成的分支名称。\n--l10n:patch_input_data_dir <patch data root dir> 可选参数。分支数据的根目录。\n\n--typescript:bright_require_path <path>     可选参数。生成typescript代码引用的bright模块的路径\n--typescript:bright_package_name <packet>   可选参数。生成typescript代码以包形式引用bright库的路径\n--typescript:use_puerts_bytebuf             可选参数。生成typescript代码中使用puerts中导入的c# Bytebuf类。\n--cs:use_unity_vector                   可选参数。生成c#代码中，使用UnityEngine.Vector{2,3,4}作为Vector数据类型。\n--go:bright_module_name <module path>   可选参数。生成go代码时，bright module的import目录。\n\n--external:selectors  <selector1,selector2 ...>       可选参数。 外部类选择器，可以多个。selector必须是root.xml中externalselector中定义的选择器之一。\n\n\n# gen_types 参数介绍\n\n目前支持的 gen_types 有\n\n * 代码生成相关\n   * code_cs_bin 生成dotnet平台的读取bin格式数据的代码。与code_cs_unity_bin区别在于它生成的vector{2,3,4}类型为System.Numerics.Vector{2,3,4}\n   * code_cs_unity_bin 生成适合unity的读取bin格式数据的代码。与code_cs_bin区别在于它生成的vector{2,3,4}类型为UnityEngine.Vector{2,3,4}\n   * code_cs_dotnet_json 生成dotnet平台的读取json格式数据的代码。与code_cs_unity_json区别在于它生成的vector{2,3,4}类型为System.Numerics.Vector{2,3,4}\n   * code_cs_unity_json 生成适合unity的读取json格式数据的代码。与code_cs_dotnet_json区别在于它生成的vector{2,3,4}类型为UnityEngine.Vector{2,3,4}\n   * code_cs_unity_editor_json 生成适用于unity编辑器开发的代码。可以单独将一个记录加载或者保存到json文件。\n   * code_lua_bin 生成lua语言读取bin格式的代码\n   * code_java_bin 生成java读取bin格式的代码\n   * code_java_json 生成java读取json格式的代码\n   * code_go_bin 生成go读取bin格式的代码\n   * code_go_json 生成go读取json格式的代码\n   * code_cpp_bin 生成cpp读取bin格式的代码\n   * code_cpp_ue_editor_json 生成适用于UE4编辑器开发的代码。可以单独将一个记录加载或者保存到json文件\n   * code_python27_json 生成python2系列读取json格式的代码\n   * code_python3_json 生成python3系列读取json格式的代码\n   * code_typescript_bin 生成ts读取bin格式的代码\n   * code_typescript_json 生成ts读取json格式的代码\n   * code_rust_json 生成rust读取json格式的代码\n   * code_protobuf2 生成protobuf2 schema文件\n   * code_protobuf3 生成protobuf3 schema文件\n   * code_template 指示使用自定义代码模板\n   * code_flatbuffers 生成flatbuffers schema文件\n * 数据生成相关\n   * data_bin 导出bin格式数据\n   * data_lua 导出lua格式数据\n   * data_json 导出json格式数据\n   * data_json_monolithic。 与data_json区别在于它把所有表的json数据文件生成到一个json文件中\n   * data_yaml 导出yaml格式数据\n   * data_template 自定义数据模板\n   * data_protobuf_bin 导出protobuf的binary格式数据\n   * data_protobuf_json 导出protobuf3的json数据格式\n   * data_flatbuffers_json 导出flatbuffers的json数据格式\n * 源数据转换相关\n   * convert_json 将源数据全部转换为json源数据格式。注意跟导出格式不一样。每个记录占一个文件\n   * convert_lua 将源数据全部转换为lua源数据格式。每个记录占一个文件\n   * convert_xlsx 将源数据全部转换为xlsx格式。每个表占一个文件的\n   * convert_template 自定义转换模板。但每个记录占一个文件\n\n# .cache.meta 文件的用途\n\n第一次完成生成时，本地目录会产生一个 .cache.meta。\n\n.cache.meta 里包含了与Luban.Server交互过程中涉及到的所有文件的 (路径， md5码， 长度，修改时间戳)信息。用于优化生成性能。\n\n由于Luban.Client与Luban.Server的工作模型为云生成模型，Luban.Client向服务器发起生成请求后，服务器并不直接读取生成需要的配置文件，而是先获得 这些文件的元信息（路径,md5）,如果内存缓存中有相同md5的文件，则直接读取，不再向客户端读取文件数据，这样极大提升了增量生成的性能。\n\n服务器生成完成后，也会向客户端发送生成文件元数据列表，包含（路径、md5）这些元数据信息。如果本地不存在这些文件，则下载下载，如果已经存在，则检查 是否有变化，此时Luban.Client并不会直接读取本地文件并且计算md5,而是先查询.cache.meta里是否有对应的文件md5信息，如果本地文件的长度和修改时间戳 与.cache.meta里的相同，则认为.cache.meta里包含了正确的md5值，然后拿这个值到服务器生成的结果的md5对比，只有不相同，才会重新下载。\n\n\n# 示例\n\n假设\n\nluban.server 运行在本机，端口为8899 luban.client的位置在 d:\\tools\\Luban.Client 配置定义在 d:\\raw_config\\defines 配置定义的根定义文件为 d:\\raw_config\\defines_root_.xml 配置数据在 d:\\raw_configs\\datas\n\nclient项目为unity项目，位置在 d:\\client 你期望client生成的代码在 d:\\client\\Assets\\Gen 目录 你期望client生成的数据在 d:\\client\\Assets\\StreamingAssets\\GameData 目录\n\n你们服务器项目为 dotnet c#项目，位置在d:\\server 你期望server生成的代码在 d:\\server\\src\\Gen 你期望server生成的数据在 d:\\server\\GameData\n\n\n# 案例1\n\n你要为客户端生成代码和数据。 你期望使用bin格式的导出数据类型 你为客户端选择的service分组为 client 当前在开发期，你期望导出数据中包含测试数据\n\n则win下命令为：\n\n  dotnet d:\\tools\\Luban.Client\\Luban.Client.dll ^\n      -h 127.0.0.1 ^\n      -p 8899 ^\n      -j cfg ^\n      -- ^\n      --define_file d:\\raw_config\\defines\\__root__.xml ^\n      --input_data_dir d:\\raw_configs\\datas ^\n      --output_code_dir d:\\client\\Assets\\Gen ^\n      --output_data_dir d:\\client\\Assets\\StreamingAssets\\GameData ^\n      --gen_types code_cs_unity_bin,data_bin ^\n      --service client\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nlinux bash命令同理。\n\n\n# 案例2\n\n你要为客户端生成代码和数据。 你期望使用json格式导出数据类型。 你不期望导出数据中包含dev和test标签的数据\n\n则win下命令为:\n\ndotnet d:\\tools\\Luban.Client\\Luban.Client.dll ^\n    -h 127.0.0.1 ^\n    -p 8899 ^\n    -j cfg ^\n    -- ^\n    --define_file d:\\raw_config\\defines\\__root__.xml ^\n    --input_data_dir d:\\raw_configs\\datas ^\n    --output_code_dir d:\\client\\Assets\\Gen ^\n    --output_data_dir d:\\client\\Assets\\StreamingAssets\\GameData ^\n    --gen_types code_cs_unity_json,data_json ^\n    --service client ^\n    --export_exclude_tags dev,test\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 案例3\n\n你要为服务器生成代码和数据。\n\n你期望使用json导出数据格式。 你期望包含测试数据。 你为服务器选择的service为server\n\n则 win下命令为：\n\ndotnet d:\\tools\\Luban.Client\\Luban.Client.dll ^\n    -h 127.0.0.1 ^\n    -p 8899 ^\n    -j cfg ^\n    -- ^\n    --define_file d:\\raw_config\\defines\\__root__.xml ^\n    --input_data_dir d:\\raw_configs\\datas ^\n    --output_code_dir d:\\server\\src\\Gen ^\n    --output_data_dir d:\\server\\GameData ^\n    --gen_types code_cs_json,data_json ^\n    --service server\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 案例4\n\nluban-server 被你部属在 192.168.1.10这台机器上，端口为1111。其他的如案例3。\n\n则 win下的生成命令为：\n\ndotnet d:\\tools\\Luban.Client\\Luban.Client.dll ^\n    -h 192.168.1.10 ^\n    -p 1111 ^\n    -j cfg ^\n    -- ^\n    --define_file d:\\raw_config\\defines\\__root__.xml ^\n    --input_data_dir d:\\raw_configs\\datas ^\n    --output_code_dir d:\\server\\src\\Gen ^\n    --output_data_dir d:\\server\\GameData ^\n    --gen_types code_cs_dotnet_json,data_json ^\n    --service server\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 案例5\n\n你要为服务器生成代码和数据。同时让luban.client执行生成后不退出，进入监控状态，只要配置定义或者数据有变化，就自动生成代码和数据。\n\n你期望使用json导出数据格式。 你期望包含测试数据。 你为服务器选择的service为server\n\n则 win下命令为：\n\ndotnet d:\\tools\\Luban.Client\\Luban.Client.dll ^\n    -h 127.0.0.1 ^\n    -p 8899 ^\n    -j cfg ^\n    -w d:\\raw_config\\defines;d:\\raw_configs\\datas\n    -- ^\n    --define_file d:\\raw_config\\defines\\__root__.xml ^\n    --input_data_dir d:\\raw_configs\\datas ^\n    --output_code_dir d:\\server\\src\\Gen ^\n    --output_data_dir d:\\server\\GameData ^\n    --gen_types code_cs_dotnet_json,data_json ^\n    --service server   \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',normalizedContent:'# 介绍\n\n\n# luban.client 、luban.server和 luban.clientserver的功能和区别\n\nluban 默认的工作模型为 云生成模型，也就是 luban.client 将生成请求提交到远程的 luban.server，luban.server将生成结果返回给luban.client。 对于使用luban云生成工作模型的项目，需要在一个服务器上部属 luban.server (当然也可以直接在本地化运行），然后将 luban.client的 -h 参数改为 该服务器的ip。\n\nluban.clientserver为luban.client+luban.server一体的程序，内嵌了luban.client和luban.server，其工作原理与云生成的模式一致。\n\n有些项目规模较小，或者为个人开发者，不想部属luban.server，则可以采用luban.clientserver工具。\n\n\n# 云生成的优点\n\n云生成模式下，luban.server会缓存生成结果，对于定义和数据没有变化的配置表，直接返回生成结果。日常开发中，经常只改动了个别表，使用了云生成后，只会生成改变的表的数据， 极大缩短了生成时间，日常生成时间基本在300ms量级。 对于mmorpg这样的大项目，日常生成基本了1s以内，节省非常可观的时间。\n\n\n# 部属\n\nluban工具有两种部属方式。\n\n\n# 方法1： luban.client与luban.server独立部属，云生成模式\n\n# 部属 luban-server\n\n * 基于 docker (强烈推荐以这种方式在服务器上部属luban-server，因为可以充分利用缓存机制大幅缩短生成时间)\n   \n   docker run -d --rm --name luban-server -p 8899:8899 focuscreativegames/luban-server:latest\n\n * 基于 .net 6 runtime （可跨平台，不需要重新编译）\n   \n   * 自行安装 .net 6 runtime.\n   * 从示例项目拷贝整个luban.clientserver目录（可跨平台，即使在linux、mac平台也不需要重新编译）\n   * 在luban.clientserver目录下运行 dotnet luban.server.dll (提示：win平台可以直接运行 luban.server.exe)\n\n# 安装 luban-client\n\n * 基于 docker (只推荐与jenkins之类devops工具配合使用，因为docker容器启动会增加一定的延迟)\n   \n   docker run --rm -v $pwd/.cache.meta:/bin/.cache.meta focuscreativegames/luban-client <参数>\n   \n   提醒！ .cache.meta这个文件用于保存本地生成或者提交到远程的文件md5缓存，强烈推荐 添加-v $pwd/.cache.meta:/bin/.cache.meta 映射，不然每次重新计算所有涉及文件的md5,这可能在项目后期会造成多达几秒的延迟。\n\n * 基于 .net 6 runtime （推荐win平台使用，可跨平台，不需要重新编译）\n   \n   * 自行安装 .net 6 runtime.\n   * 从示例项目拷贝 luban.client（可跨平台，即使在linux、mac平台也不需要重新编译）\n\n\n# 方法2： client与server一体模式\n\nclient与server在同个进程内运行，不需要单独部属luban.server。\n\n将运行脚本中%luban_client%变量由 luban.client/luban.client 改为 luban.clientserver/luban.clientserver，同时删除 -h (--host ) 选项及其参数。\n\nluban.clientserver是luban.client的功能超集，可以完全替代luban.client。\n\n----------------------------------------\n\n\n# 使用\n\n\n# luban-server 使用介绍\n\n命令行使用\n\ndotnet luban.server.dll [-p <port>] [-l <log level>]\n\n参数介绍：\n-p, --port <port>               可选参数。 监听端口 <port>，默认为8899。\n-l, --loglevel <log level>      可选参数。 日志级别。默认为info。 有效值有: trace,debug,info,warn,error,fatal,off\n-t, --template_search_path      可选参数。模板的额外搜索路径。优先从此路径，再从templates目录搜索模板文件。\n--disable_cache                 可选参数。禁用生成中间过程的缓存，但保留了源文件缓存。在模板调试时比较有用。\n--i10n:default_timezone  <timezone>       可选参数。 datetime时间所在的时区。如果未设置则会尝试用"asia/shangehai"和"china standard time"。\n\n\n关于时区，win下可使用命令"tzutil /l" 查看本机时区列表。 也可查阅ms文档default-time-zones列表\n\n\n# luban-client 使用介绍\n\n命令行使用\n\ndotnet luban.client.dll [-h <host>] [-p <port>] [-l <log level>] [-c <cache meta file>] [-w <watch dirs>] [-h ] -j cfg -- <job options>\n\n参数介绍：\n-h,--host <host>            可选参数。 luban-server的地址。默认为 127.0.0.1\n-p,--port <port>            可选参数。 luban-server的端口。默认为 8899\n-j,--job <job>              必选参数。 生成类型。目前支持的生成类型有: cfg,proto,db。 生成配置请取cfg。\n-l,--loglevel <log level>   可选参数。 日志级别。默认为info。有效值有: trace,debug,info,warn,error,fatal,off\n-c,--cachemetafile <meta file>  可选参数。 meta缓存文件名。 默认为 .cache.meta\n-w,--watch <dir1;dir2...>     可选参数。 监测目录或者目录列表，以逗号\';\'分隔。当开启此选项后，生成结束后不会退出程序，而是进入自动生成模式。监听到目标目录发生变化后，自动重新运行生成。省去改动后手动运行生成脚本的麻烦。\n--generateonly              可选参数。  仅生成。不从服务器下载生成结果。可以用于检查服务器是否能成功生成。\n-h,--help                   可选参数。显示帮助信息\n--  <job options>           必选参数。 从此参数起，便是 不同job的特有选项\n\n\n----------------------------------------\n\ncfg的<job options>介绍：\n\n-d,--define_file <root file>            必选参数。 根定义文件名。\n--input_data_dir  <input data dir>      必选参数。 配置数据文件根目录。\n--input:convert:dir <dir>               可选参数。 执行json、lua、xlsx之类数据格式转换时，提供的数据源，覆盖table中默认的input参数。\n-c,--output_code_dir <output code dir>  可选参数。 生成代码文件的目录。\n-s,--service                            必选参数。生成分组目标。一般来说，会定义client,server,editor等好几个目标，不同目标的生成内容不同。\n\n--gen_types <type1,type2,,,>            必选参数。生成任务类型。既可以是生成代码也可以是生成数据或者其他。目前支持的有 code_cs_bin,code_cs_unity_bin,code_cs_dotnet_json,code_cs_unity_json,code_cs_unity_editor_json,code_lua_bin,code_java_bin,code_go_bin,code_go_json,code_cpp_bin,code_cpp_ue_editor_json,code_python27_json,code_python3_json，code_typescript_bin,code_typescript_json,code_rust_json,code_protobuf2,code_protobuf3,code_template,code_flatbuffers,data_bin,data_lua,data_json,data_json_monolithic,data_yaml,data_template,data_protobuf_bin,data_protobuf_json,data_flatbuffers_json,convert_json,convert_lua,convert_xlsx,convert_template\n\n--validate_root_dir <path validate root dir>. 可选参数。 配置path检查的根目录。\n\n--output_data_dir <output data dir>     可选参数。 导出的数据文件的目录。只生成代码时可不指定。\n\n--output:data:compact_json                   可选参数。默认导出的json格式为对齐后的优雅格式，使用此参数后导出紧凑的不带空格和换行的格式。\n--output:data:file_extension  <output data file extension>     可选参数。 导出数据文件的后缀。默认按照生成类型自动选择。\n--output:exclude_tags <tag1,tag2>       可选参数。 导出时排除包含这些tag的数据\n--output:tables <table1,table2...>      可选参数。手动指定导出哪些表。覆盖group中设置\n--output:include_tables <table1,table2...>  可选参数。除了group中设置外，额外新增表。\n--output:exclude_tables <table1,table2...>  可选参数。排除group中指定的表。\n\n--output:convert:file_extension <extension> 可选参数。 convert数据文件的后缀。默认按照模板名猜测。\n\n--template:code:dir <dir name>          可选参数。自定义额外代码模板的目录名\n--template:data:file  <template name>        可选参数。数据模板的名称（不包含后缀），当gen_types包含 data_template时必须指定。\n--template:convert:file <template name>     可选参数。convert模板的名称（不包含后缀），当gen_types包含convert_template时必须指定。\n\n\n--naming_convention:module <convention> 可选参数。生成代码中模板名的命名约定，可用值为 language_recommend,none,camelcase,pascalcase,under_scores。 默认为language_recommend，即选择与相应语言推荐的命名约定风格。 此选项目前未生效。\n--naming_convention:bean_member <convention>    可选参数。生成代码中bean类型字段名的命名约定，可用值为 language_recommend,none,camelcase,pascalcase,under_scores。 默认为language_recommend。\n--naming_convention:enum_member <convention>    可选参数。生成代码中enum类型名的命名约定，可用值为 language_recommend,none,camelcase,pascalcase,under_scores。 默认为language_recommend。此选项目前未生效。\n--access_bean_member <access mode>  可选参数。 bean属性的访问方式。可用值为language_recommend,variable,getter_setter,property。默认为 language_recommend。此字段目前未生效。\n\n--l10n:timezone <timezone>           可选参数。 指定所在时区。影响datetime类型转换为utc时间。 默认为中国北京时间。\n--l10n:input_text_files <file1,file2..> 可选参数。 本地化的文本映射表。可以有多个。\n--l10n:text_field_name <field name>     可选参数。 文本映射表中，目标映射列的列名，默认为text\n--l10n:output_not_translated_text_file <file> 可选参数。 未被本地化映射的text key和value的输出文件。不提供该参数则不生成\n--l10n:patch <patch name>                  可选参数。当前需要生成的分支名称。\n--l10n:patch_input_data_dir <patch data root dir> 可选参数。分支数据的根目录。\n\n--typescript:bright_require_path <path>     可选参数。生成typescript代码引用的bright模块的路径\n--typescript:bright_package_name <packet>   可选参数。生成typescript代码以包形式引用bright库的路径\n--typescript:use_puerts_bytebuf             可选参数。生成typescript代码中使用puerts中导入的c# bytebuf类。\n--cs:use_unity_vector                   可选参数。生成c#代码中，使用unityengine.vector{2,3,4}作为vector数据类型。\n--go:bright_module_name <module path>   可选参数。生成go代码时，bright module的import目录。\n\n--external:selectors  <selector1,selector2 ...>       可选参数。 外部类选择器，可以多个。selector必须是root.xml中externalselector中定义的选择器之一。\n\n\n# gen_types 参数介绍\n\n目前支持的 gen_types 有\n\n * 代码生成相关\n   * code_cs_bin 生成dotnet平台的读取bin格式数据的代码。与code_cs_unity_bin区别在于它生成的vector{2,3,4}类型为system.numerics.vector{2,3,4}\n   * code_cs_unity_bin 生成适合unity的读取bin格式数据的代码。与code_cs_bin区别在于它生成的vector{2,3,4}类型为unityengine.vector{2,3,4}\n   * code_cs_dotnet_json 生成dotnet平台的读取json格式数据的代码。与code_cs_unity_json区别在于它生成的vector{2,3,4}类型为system.numerics.vector{2,3,4}\n   * code_cs_unity_json 生成适合unity的读取json格式数据的代码。与code_cs_dotnet_json区别在于它生成的vector{2,3,4}类型为unityengine.vector{2,3,4}\n   * code_cs_unity_editor_json 生成适用于unity编辑器开发的代码。可以单独将一个记录加载或者保存到json文件。\n   * code_lua_bin 生成lua语言读取bin格式的代码\n   * code_java_bin 生成java读取bin格式的代码\n   * code_java_json 生成java读取json格式的代码\n   * code_go_bin 生成go读取bin格式的代码\n   * code_go_json 生成go读取json格式的代码\n   * code_cpp_bin 生成cpp读取bin格式的代码\n   * code_cpp_ue_editor_json 生成适用于ue4编辑器开发的代码。可以单独将一个记录加载或者保存到json文件\n   * code_python27_json 生成python2系列读取json格式的代码\n   * code_python3_json 生成python3系列读取json格式的代码\n   * code_typescript_bin 生成ts读取bin格式的代码\n   * code_typescript_json 生成ts读取json格式的代码\n   * code_rust_json 生成rust读取json格式的代码\n   * code_protobuf2 生成protobuf2 schema文件\n   * code_protobuf3 生成protobuf3 schema文件\n   * code_template 指示使用自定义代码模板\n   * code_flatbuffers 生成flatbuffers schema文件\n * 数据生成相关\n   * data_bin 导出bin格式数据\n   * data_lua 导出lua格式数据\n   * data_json 导出json格式数据\n   * data_json_monolithic。 与data_json区别在于它把所有表的json数据文件生成到一个json文件中\n   * data_yaml 导出yaml格式数据\n   * data_template 自定义数据模板\n   * data_protobuf_bin 导出protobuf的binary格式数据\n   * data_protobuf_json 导出protobuf3的json数据格式\n   * data_flatbuffers_json 导出flatbuffers的json数据格式\n * 源数据转换相关\n   * convert_json 将源数据全部转换为json源数据格式。注意跟导出格式不一样。每个记录占一个文件\n   * convert_lua 将源数据全部转换为lua源数据格式。每个记录占一个文件\n   * convert_xlsx 将源数据全部转换为xlsx格式。每个表占一个文件的\n   * convert_template 自定义转换模板。但每个记录占一个文件\n\n# .cache.meta 文件的用途\n\n第一次完成生成时，本地目录会产生一个 .cache.meta。\n\n.cache.meta 里包含了与luban.server交互过程中涉及到的所有文件的 (路径， md5码， 长度，修改时间戳)信息。用于优化生成性能。\n\n由于luban.client与luban.server的工作模型为云生成模型，luban.client向服务器发起生成请求后，服务器并不直接读取生成需要的配置文件，而是先获得 这些文件的元信息（路径,md5）,如果内存缓存中有相同md5的文件，则直接读取，不再向客户端读取文件数据，这样极大提升了增量生成的性能。\n\n服务器生成完成后，也会向客户端发送生成文件元数据列表，包含（路径、md5）这些元数据信息。如果本地不存在这些文件，则下载下载，如果已经存在，则检查 是否有变化，此时luban.client并不会直接读取本地文件并且计算md5,而是先查询.cache.meta里是否有对应的文件md5信息，如果本地文件的长度和修改时间戳 与.cache.meta里的相同，则认为.cache.meta里包含了正确的md5值，然后拿这个值到服务器生成的结果的md5对比，只有不相同，才会重新下载。\n\n\n# 示例\n\n假设\n\nluban.server 运行在本机，端口为8899 luban.client的位置在 d:\\tools\\luban.client 配置定义在 d:\\raw_config\\defines 配置定义的根定义文件为 d:\\raw_config\\defines_root_.xml 配置数据在 d:\\raw_configs\\datas\n\nclient项目为unity项目，位置在 d:\\client 你期望client生成的代码在 d:\\client\\assets\\gen 目录 你期望client生成的数据在 d:\\client\\assets\\streamingassets\\gamedata 目录\n\n你们服务器项目为 dotnet c#项目，位置在d:\\server 你期望server生成的代码在 d:\\server\\src\\gen 你期望server生成的数据在 d:\\server\\gamedata\n\n\n# 案例1\n\n你要为客户端生成代码和数据。 你期望使用bin格式的导出数据类型 你为客户端选择的service分组为 client 当前在开发期，你期望导出数据中包含测试数据\n\n则win下命令为：\n\n  dotnet d:\\tools\\luban.client\\luban.client.dll ^\n      -h 127.0.0.1 ^\n      -p 8899 ^\n      -j cfg ^\n      -- ^\n      --define_file d:\\raw_config\\defines\\__root__.xml ^\n      --input_data_dir d:\\raw_configs\\datas ^\n      --output_code_dir d:\\client\\assets\\gen ^\n      --output_data_dir d:\\client\\assets\\streamingassets\\gamedata ^\n      --gen_types code_cs_unity_bin,data_bin ^\n      --service client\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nlinux bash命令同理。\n\n\n# 案例2\n\n你要为客户端生成代码和数据。 你期望使用json格式导出数据类型。 你不期望导出数据中包含dev和test标签的数据\n\n则win下命令为:\n\ndotnet d:\\tools\\luban.client\\luban.client.dll ^\n    -h 127.0.0.1 ^\n    -p 8899 ^\n    -j cfg ^\n    -- ^\n    --define_file d:\\raw_config\\defines\\__root__.xml ^\n    --input_data_dir d:\\raw_configs\\datas ^\n    --output_code_dir d:\\client\\assets\\gen ^\n    --output_data_dir d:\\client\\assets\\streamingassets\\gamedata ^\n    --gen_types code_cs_unity_json,data_json ^\n    --service client ^\n    --export_exclude_tags dev,test\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 案例3\n\n你要为服务器生成代码和数据。\n\n你期望使用json导出数据格式。 你期望包含测试数据。 你为服务器选择的service为server\n\n则 win下命令为：\n\ndotnet d:\\tools\\luban.client\\luban.client.dll ^\n    -h 127.0.0.1 ^\n    -p 8899 ^\n    -j cfg ^\n    -- ^\n    --define_file d:\\raw_config\\defines\\__root__.xml ^\n    --input_data_dir d:\\raw_configs\\datas ^\n    --output_code_dir d:\\server\\src\\gen ^\n    --output_data_dir d:\\server\\gamedata ^\n    --gen_types code_cs_json,data_json ^\n    --service server\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 案例4\n\nluban-server 被你部属在 192.168.1.10这台机器上，端口为1111。其他的如案例3。\n\n则 win下的生成命令为：\n\ndotnet d:\\tools\\luban.client\\luban.client.dll ^\n    -h 192.168.1.10 ^\n    -p 1111 ^\n    -j cfg ^\n    -- ^\n    --define_file d:\\raw_config\\defines\\__root__.xml ^\n    --input_data_dir d:\\raw_configs\\datas ^\n    --output_code_dir d:\\server\\src\\gen ^\n    --output_data_dir d:\\server\\gamedata ^\n    --gen_types code_cs_dotnet_json,data_json ^\n    --service server\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 案例5\n\n你要为服务器生成代码和数据。同时让luban.client执行生成后不退出，进入监控状态，只要配置定义或者数据有变化，就自动生成代码和数据。\n\n你期望使用json导出数据格式。 你期望包含测试数据。 你为服务器选择的service为server\n\n则 win下命令为：\n\ndotnet d:\\tools\\luban.client\\luban.client.dll ^\n    -h 127.0.0.1 ^\n    -p 8899 ^\n    -j cfg ^\n    -w d:\\raw_config\\defines;d:\\raw_configs\\datas\n    -- ^\n    --define_file d:\\raw_config\\defines\\__root__.xml ^\n    --input_data_dir d:\\raw_configs\\datas ^\n    --output_code_dir d:\\server\\src\\gen ^\n    --output_data_dir d:\\server\\gamedata ^\n    --gen_types code_cs_dotnet_json,data_json ^\n    --service server   \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/data_lua.html",relativePath:"data_lua.md",key:"v-50df31ec",path:"/data_lua.html",headers:[{level:2,title:"json数据格式",slug:"json数据格式",normalizedTitle:"json数据格式",charIndex:14},{level:2,title:"以复合lua文件形式组织",slug:"以复合lua文件形式组织",normalizedTitle:"以复合lua文件形式组织",charIndex:1568},{level:2,title:"以目录树形式组织",slug:"以目录树形式组织",normalizedTitle:"以目录树形式组织",charIndex:1629},{level:2,title:"数据tag",slug:"数据tag",normalizedTitle:"数据tag",charIndex:1820}],lastUpdated:"2/12/2022, 1:33:01 PM",lastUpdatedTimestamp:1644643981e3,headersStr:"json数据格式 以复合lua文件形式组织 以目录树形式组织 数据tag",content:'# Lua 数据源\n\n\n# json数据格式\n\n大多数数据格式符合直觉，有几个特殊点：\n\n * 数据前有一个return，这是因为 lua 数据是当作 lua 文件加载的，每个加载后的结果当作一个记录读入。\n * set 的格式为 {v1, v2, ...}\n * 与json不同，lua 的table的key支持任意格式，所以lua的map可以直接 {[key1] = value1, [key2] = value2, ,,,}\n * 多态bean类型。需要 _type_属性来指定具体类型名。\n * text类型，填法为 {key = key, text = text}\n\n定义\n\n<bean name="DemoType2" >\n <var name="x4" type="int"/>\n <var name="x1" type="bool"/>\n <var name="x5" type="long"/>\n <var name="x6" type="float"/>\n <var name="x7" type="double"/>\n <var name="x10" type="string"/>\n <var name="t1" type="text"/>\n <var name="x12" type="DemoType1"/>\n <var name="x13" type="DemoEnum"/>\n <var name="x14" type="DemoDynamic"/>\n <var name="v2" type="vector2"/>\n <var name="v3" type="vector3"/>\n <var name="v4" type="vector4"/>\n <var name="t1" type="datetime"/>\n <var name="k1" type="array,int"/>\n <var name="k2" type="list,int"/>\n <var name="k8" type="map,int,int"/>\n <var name="k9" type="list,DemoE2"/>\n <var name="k15" type="array,DemoDynamic" /> \n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n示例数据\n\nreturn \n{\n x1 = false,\n x2 = 2,\n x3 = 128,\n x4 = 1122,\n x5 = 112233445566,\n x6 = 1.3,\n x7 = 1122,\n x10 = "yf",\n t1 = {key="/key/ab1", text="apple"},\n x12 = {x1=1},\n x13 = "D",\n x14 = { _type_="DemoD2", x1 = 1, x2=3},\n v2 = {x= 1,y = 2},\n v3 = {x=0.1, y= 0.2,z=0.3},\n v4 = {x=1,y=2,z=3.5,w=4},\n t1 = "1970-01-01 00:00:00",\n k1 = {1,2},\n k2 = {2,3},\n k8 = {[2]=10,[3]=12},\n k9 = { {y1=1,y2=true}, {y1=10,y2=false} },\n k15 = { { _type_="DemoD2", x1 = 1, x2=3} },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 以复合lua文件形式组织\n\n整个表在一个或者多个lua文件中组织。用法与json数据源相似，参见 json数据源\n\n\n# 以目录树形式组织\n\n典型用法是，以目录为数据源（会遍历整棵目录树），目录树下每个lua文件为一个记录读入。如下示例，递归遍历test/lua_datas整个目录树，按文件名排序后依次将每个lua数据当作一个记录读入。\n\n<table name="TbDataFromLua" value="DemoType2" input="test/lua_datas"/> \n\n\n1\n\n\n\n# 数据tag\n\n与excel格式类似，也支持记录tag，用 __tag__ 属性来指明tag，示例如下：\n\nreturn {\n __tag__ = "dev",\n x = 1,\n y = 2,\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# lua 数据源\n\n\n# json数据格式\n\n大多数数据格式符合直觉，有几个特殊点：\n\n * 数据前有一个return，这是因为 lua 数据是当作 lua 文件加载的，每个加载后的结果当作一个记录读入。\n * set 的格式为 {v1, v2, ...}\n * 与json不同，lua 的table的key支持任意格式，所以lua的map可以直接 {[key1] = value1, [key2] = value2, ,,,}\n * 多态bean类型。需要 _type_属性来指定具体类型名。\n * text类型，填法为 {key = key, text = text}\n\n定义\n\n<bean name="demotype2" >\n <var name="x4" type="int"/>\n <var name="x1" type="bool"/>\n <var name="x5" type="long"/>\n <var name="x6" type="float"/>\n <var name="x7" type="double"/>\n <var name="x10" type="string"/>\n <var name="t1" type="text"/>\n <var name="x12" type="demotype1"/>\n <var name="x13" type="demoenum"/>\n <var name="x14" type="demodynamic"/>\n <var name="v2" type="vector2"/>\n <var name="v3" type="vector3"/>\n <var name="v4" type="vector4"/>\n <var name="t1" type="datetime"/>\n <var name="k1" type="array,int"/>\n <var name="k2" type="list,int"/>\n <var name="k8" type="map,int,int"/>\n <var name="k9" type="list,demoe2"/>\n <var name="k15" type="array,demodynamic" /> \n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n示例数据\n\nreturn \n{\n x1 = false,\n x2 = 2,\n x3 = 128,\n x4 = 1122,\n x5 = 112233445566,\n x6 = 1.3,\n x7 = 1122,\n x10 = "yf",\n t1 = {key="/key/ab1", text="apple"},\n x12 = {x1=1},\n x13 = "d",\n x14 = { _type_="demod2", x1 = 1, x2=3},\n v2 = {x= 1,y = 2},\n v3 = {x=0.1, y= 0.2,z=0.3},\n v4 = {x=1,y=2,z=3.5,w=4},\n t1 = "1970-01-01 00:00:00",\n k1 = {1,2},\n k2 = {2,3},\n k8 = {[2]=10,[3]=12},\n k9 = { {y1=1,y2=true}, {y1=10,y2=false} },\n k15 = { { _type_="demod2", x1 = 1, x2=3} },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 以复合lua文件形式组织\n\n整个表在一个或者多个lua文件中组织。用法与json数据源相似，参见 json数据源\n\n\n# 以目录树形式组织\n\n典型用法是，以目录为数据源（会遍历整棵目录树），目录树下每个lua文件为一个记录读入。如下示例，递归遍历test/lua_datas整个目录树，按文件名排序后依次将每个lua数据当作一个记录读入。\n\n<table name="tbdatafromlua" value="demotype2" input="test/lua_datas"/> \n\n\n1\n\n\n\n# 数据tag\n\n与excel格式类似，也支持记录tag，用 __tag__ 属性来指明tag，示例如下：\n\nreturn {\n __tag__ = "dev",\n x = 1,\n y = 2,\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/data_xml.html",relativePath:"data_xml.md",key:"v-0239ac0c",path:"/data_xml.html",lastUpdated:"1/25/2022, 2:22:39 PM",lastUpdatedTimestamp:1643091759e3,headersStr:null,content:'# xml 数据源\n\n<bean name="DemoType2" >\n <var name="x4" type="int" convert="DemoEnum"/>\n <var name="x1" type="bool"/>\n <var name="x5" type="long" convert="DemoEnum"/>\n <var name="x6" type="float"/>\n <var name="x7" type="double"/>\n <var name="x10" type="string"/>\n <var name="x12" type="DemoType1"/>\n <var name="x13" type="DemoEnum"/>\n <var name="x14" type="DemoDynamic" sep=","/>多态数据结构\n <var name="v2" type="vector2"/>\n <var name="v3" type="vector3"/>\n <var name="v4" type="vector4"/>\n <var name="t1" type="datetime"/>\n <var name="k1" type="array,int"/> 使用;来分隔\n <var name="k2" type="list,int"/>\n <var name="k8" type="map,int,int"/>\n <var name="k9" type="list,DemoE2" sep="," index="y1"/>\n <var name="k15" type="array,DemoDynamic" sep=","/> \n</bean>\n\n<table name="TbDataFromXml" value="DemoType2" input="test/xml_datas"/> \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n递归遍历test/xml_datas整个目录树，按文件名排序后依次将每个xml数据当作一个记录读入。其中1.xml文件内容如下\n\n <data>\n <x1>true</x1>\n <x2>4</x2>\n <x3>128</x3>\n <x4>1</x4>\n <x5>112233445566</x5>\n <x6>1.3</x6>\n <x7>1112232.43123</x7>\n <x10>yf</x10>\n <x12>  <x1>1</x1> </x12>\n <x13>C</x13>\n <x14 __type__="DemoD2">  <x1>1</x1>  <x2>2</x2> </x14>\n <v2>1,2</v2>\n <v3>1.2,2.3,3.4</v3>\n <v4>1.2,2.2,3.2,4.3</v4>\n <t1>1970-01-01 00:00:00</t1>\n <k1>    <item>1</item> <item>2</item> </k1>\n <k2> <item>1</item> <item>2</item> </k2>\n <k8>\n  <item> <key>2</key><value>10</value></item>\n  <item> <key>3</key><value>30</value></item>\n </k8>\n <k9>\n  <item> <y1>1</y1> <y2>true</y2> </item>\n  <item> <y1>2</y1> <y2>false</y2> </item>\n </k9>\n <k15>\n  <item __type__="DemoD2"> <x1>1</x1> <x2>2</x2> </item>\n </k15>\n</data>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n',normalizedContent:'# xml 数据源\n\n<bean name="demotype2" >\n <var name="x4" type="int" convert="demoenum"/>\n <var name="x1" type="bool"/>\n <var name="x5" type="long" convert="demoenum"/>\n <var name="x6" type="float"/>\n <var name="x7" type="double"/>\n <var name="x10" type="string"/>\n <var name="x12" type="demotype1"/>\n <var name="x13" type="demoenum"/>\n <var name="x14" type="demodynamic" sep=","/>多态数据结构\n <var name="v2" type="vector2"/>\n <var name="v3" type="vector3"/>\n <var name="v4" type="vector4"/>\n <var name="t1" type="datetime"/>\n <var name="k1" type="array,int"/> 使用;来分隔\n <var name="k2" type="list,int"/>\n <var name="k8" type="map,int,int"/>\n <var name="k9" type="list,demoe2" sep="," index="y1"/>\n <var name="k15" type="array,demodynamic" sep=","/> \n</bean>\n\n<table name="tbdatafromxml" value="demotype2" input="test/xml_datas"/> \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n递归遍历test/xml_datas整个目录树，按文件名排序后依次将每个xml数据当作一个记录读入。其中1.xml文件内容如下\n\n <data>\n <x1>true</x1>\n <x2>4</x2>\n <x3>128</x3>\n <x4>1</x4>\n <x5>112233445566</x5>\n <x6>1.3</x6>\n <x7>1112232.43123</x7>\n <x10>yf</x10>\n <x12>  <x1>1</x1> </x12>\n <x13>c</x13>\n <x14 __type__="demod2">  <x1>1</x1>  <x2>2</x2> </x14>\n <v2>1,2</v2>\n <v3>1.2,2.3,3.4</v3>\n <v4>1.2,2.2,3.2,4.3</v4>\n <t1>1970-01-01 00:00:00</t1>\n <k1>    <item>1</item> <item>2</item> </k1>\n <k2> <item>1</item> <item>2</item> </k2>\n <k8>\n  <item> <key>2</key><value>10</value></item>\n  <item> <key>3</key><value>30</value></item>\n </k8>\n <k9>\n  <item> <y1>1</y1> <y2>true</y2> </item>\n  <item> <y1>2</y1> <y2>false</y2> </item>\n </k9>\n <k15>\n  <item __type__="demod2"> <x1>1</x1> <x2>2</x2> </item>\n </k15>\n</data>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/data_yaml.html",relativePath:"data_yaml.md",key:"v-332a37b8",path:"/data_yaml.html",headers:[{level:2,title:"以复合数据形式组织",slug:"以复合数据形式组织",normalizedTitle:"以复合数据形式组织",charIndex:31},{level:2,title:"以目录树形式组织",slug:"以目录树形式组织",normalizedTitle:"以目录树形式组织",charIndex:90}],lastUpdated:"2/12/2022, 1:33:01 PM",lastUpdatedTimestamp:1644643981e3,headersStr:"以复合数据形式组织 以目录树形式组织",content:'# yaml 数据源\n\n数据格式参考json数据源。\n\n\n# 以复合数据形式组织\n\n整个表在一个或者多个yaml文件中组织。用法与json数据源相似，参见 json数据源\n\n\n# 以目录树形式组织\n\n<bean name="DemoType2" >\n <var name="x4" type="int" convert="DemoEnum"/>\n <var name="x1" type="bool"/>\n <var name="x5" type="long" convert="DemoEnum"/>\n <var name="x6" type="float"/>\n <var name="x7" type="double"/>\n <var name="x10" type="string"/>\n <var name="x12" type="DemoType1"/>\n <var name="x13" type="DemoEnum"/>\n <var name="x14" type="DemoDynamic" sep=","/>多态数据结构\n <var name="v2" type="vector2"/>\n <var name="v3" type="vector3"/>\n <var name="v4" type="vector4"/>\n <var name="t1" type="datetime"/>\n <var name="k1" type="array,int"/> 使用;来分隔\n <var name="k2" type="list,int"/>\n <var name="k8" type="map,int,int"/>\n <var name="k9" type="list,DemoE2" sep="," index="y1"/>\n <var name="k15" type="array,DemoDynamic" sep=","/> \n</bean>\n\n<table name="TbDataFromYaml" value="DemoType2" input="test/yaml_datas"/> \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n递归遍历test/yaml_datas整个目录树，按文件名排序后依次将每个yaml数据当作一个记录读入。其中1.yml文件内容如下\n\n---\nx1: true\nx2: 3\nx3: 128\nx4: 40\nx5: 11223344\nx6: 1.2\nx7: 1.23432\nx10: hq\nx12:\n  x1: 10\nx13: B\nx14:\n  $type: DemoD2\n  x1: 1\n  x2: 2\ns1:\n  key: "/key32"\n  text: aabbcc22\nv2:\n  x: 1\n  y: 2\nv3:\n  x: 1.1\n  y: 2.2\n  z: 3.4\nv4:\n  x: 10.1\n  y: 11.2\n  z: 12.3\n  w: 13.4\nt1: \'1970-01-01 00:00:00\'\nk1:\n- 1\n- 2\nk2:\n- 2\n- 3\nk8:\n- - 2\n  - 2\n- - 4\n  - 10\nk9:\n- y1: 1\n  y2: true\n- y1: 2\n  y2: false\nk15:\n- $type: DemoD2\n  x1: 1\n  x2: 2\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n',normalizedContent:'# yaml 数据源\n\n数据格式参考json数据源。\n\n\n# 以复合数据形式组织\n\n整个表在一个或者多个yaml文件中组织。用法与json数据源相似，参见 json数据源\n\n\n# 以目录树形式组织\n\n<bean name="demotype2" >\n <var name="x4" type="int" convert="demoenum"/>\n <var name="x1" type="bool"/>\n <var name="x5" type="long" convert="demoenum"/>\n <var name="x6" type="float"/>\n <var name="x7" type="double"/>\n <var name="x10" type="string"/>\n <var name="x12" type="demotype1"/>\n <var name="x13" type="demoenum"/>\n <var name="x14" type="demodynamic" sep=","/>多态数据结构\n <var name="v2" type="vector2"/>\n <var name="v3" type="vector3"/>\n <var name="v4" type="vector4"/>\n <var name="t1" type="datetime"/>\n <var name="k1" type="array,int"/> 使用;来分隔\n <var name="k2" type="list,int"/>\n <var name="k8" type="map,int,int"/>\n <var name="k9" type="list,demoe2" sep="," index="y1"/>\n <var name="k15" type="array,demodynamic" sep=","/> \n</bean>\n\n<table name="tbdatafromyaml" value="demotype2" input="test/yaml_datas"/> \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n递归遍历test/yaml_datas整个目录树，按文件名排序后依次将每个yaml数据当作一个记录读入。其中1.yml文件内容如下\n\n---\nx1: true\nx2: 3\nx3: 128\nx4: 40\nx5: 11223344\nx6: 1.2\nx7: 1.23432\nx10: hq\nx12:\n  x1: 10\nx13: b\nx14:\n  $type: demod2\n  x1: 1\n  x2: 2\ns1:\n  key: "/key32"\n  text: aabbcc22\nv2:\n  x: 1\n  y: 2\nv3:\n  x: 1.1\n  y: 2.2\n  z: 3.4\nv4:\n  x: 10.1\n  y: 11.2\n  z: 12.3\n  w: 13.4\nt1: \'1970-01-01 00:00:00\'\nk1:\n- 1\n- 2\nk2:\n- 2\n- 3\nk8:\n- - 2\n  - 2\n- - 4\n  - 10\nk9:\n- y1: 1\n  y2: true\n- y1: 2\n  y2: false\nk15:\n- $type: demod2\n  x1: 1\n  x2: 2\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/deploy.html",relativePath:"deploy.md",key:"v-4624977c",path:"/deploy.html",headers:[{level:2,title:"Docker 镜像布署",slug:"docker-镜像布署",normalizedTitle:"docker 镜像布署",charIndex:12},{level:2,title:"Windows 下命令行布署",slug:"windows-下命令行布署",normalizedTitle:"windows 下命令行布署",charIndex:198}],lastUpdated:"12/3/2021, 3:11:18 PM",lastUpdatedTimestamp:1638515478e3,headersStr:"Docker 镜像布署 Windows 下命令行布署",content:"# 服务端布署\n\n\n# Docker 镜像布署\n\n * 镜像会自动更新至最新版\n * 在有 docker 的环境下，执行下面的指令\n\n    docker pull hugebug4ever/luban:latest\n    docker run --name luban-server -d -p 8899:8899 hugebug4ever/luban:latest \n\n\n1\n2\n\n\n\n# Windows 下命令行布署\n\n * 下载 release 版本\n * 解压 Luban.Server.zip\n * 执行下面的命令即可\n\n    Luban.Server.exe\n\n\n1\n",normalizedContent:"# 服务端布署\n\n\n# docker 镜像布署\n\n * 镜像会自动更新至最新版\n * 在有 docker 的环境下，执行下面的指令\n\n    docker pull hugebug4ever/luban:latest\n    docker run --name luban-server -d -p 8899:8899 hugebug4ever/luban:latest \n\n\n1\n2\n\n\n\n# windows 下命令行布署\n\n * 下载 release 版本\n * 解压 luban.server.zip\n * 执行下面的命令即可\n\n    luban.server.exe\n\n\n1\n",charsets:{cjk:!0}},{title:"多态类型",frontmatter:{},regularPath:"/dynamic_bean.html",relativePath:"dynamic_bean.md",key:"v-790cf330",path:"/dynamic_bean.html",headers:[{level:2,title:"定义及配置",slug:"定义及配置",normalizedTitle:"定义及配置",charIndex:11},{level:2,title:"最佳实践",slug:"最佳实践",normalizedTitle:"最佳实践",charIndex:41},{level:2,title:"代码使用",slug:"代码使用",normalizedTitle:"代码使用",charIndex:148},{level:3,title:"方法1",slug:"方法1",normalizedTitle:"方法1",charIndex:600},{level:3,title:"方法2",slug:"方法2",normalizedTitle:"方法2",charIndex:818},{level:3,title:"方法3",slug:"方法3",normalizedTitle:"方法3",charIndex:583}],lastUpdated:"3/28/2022, 8:26:28 PM",lastUpdatedTimestamp:1648470388e3,headersStr:"定义及配置 最佳实践 代码使用 方法1 方法2 方法3",content:"# 多态类型\n\n\n# 定义及配置\n\n参见 配置定义 中关于多态类型的介绍\n\n\n# 最佳实践\n\n * 推荐用于 类型多变的场合，尤其是 GamePlay数据，比如技能、AI、任务、副本等等\n * 简单的可以在excel配置，更复杂，尤其是技能这种需要独立编译的，推荐以json格式保存数据\n\n\n# 代码使用\n\n假设是如下多态类型\n\n\npublic abstract class Shape : BeanBase\n{\n    // xxxx\n}\n\npublic class Triangle : Shape\n{\n    float a;\n    float b;\n    float c;\n}\n\npublic class Circle : Shape\n{\n    float radius;\n}\n\npublic class Rectangle : Shape\n{\n    float width;\n    float height;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n假设配置中 有个字段 Shape shape。 实际逻辑代码中，肯定是要根据它的实际类型来不同处理的， 有三种写法。 当类型数量很少时，这三种方法都可以，按个人喜好选择。当类型数量较多时，推荐按照方法3的办法，更为高效。\n\n\n# 方法1\n\n    if (shape is Circle c)\n    {\n        // xxx\n    }\n    else if(shape is Triangle t)\n    {\n        // xxx\n    }\n    else if(shape is Rectangle r)\n    {\n        // xxx\n    }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 方法2\n\nswitch(shape)\n{\n    case Circle c:\n    {\n        // xxx;\n        break;\n    }\n    case Triangle t:\n    {\n        // xxx\n        break;\n    }\n    case Rectangle r:\n    {\n        // xxx;\n        break;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 方法3\n\nswitch(shape.GetTypeId())\n{\n    case Circle::__ID__:\n    {\n        Circle c = (Circle)shape;\n        // xxx;\n        break;\n    }\n    case Triangle::__ID__:\n    {\n        Triangle t = (Triangle)shape;\n        // xxx\n        break;\n    }\n    case Rectangle::__ID__:\n    {\n        Rectangle r = (Rectangle)shape;\n        // xxx;\n        break;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n",normalizedContent:"# 多态类型\n\n\n# 定义及配置\n\n参见 配置定义 中关于多态类型的介绍\n\n\n# 最佳实践\n\n * 推荐用于 类型多变的场合，尤其是 gameplay数据，比如技能、ai、任务、副本等等\n * 简单的可以在excel配置，更复杂，尤其是技能这种需要独立编译的，推荐以json格式保存数据\n\n\n# 代码使用\n\n假设是如下多态类型\n\n\npublic abstract class shape : beanbase\n{\n    // xxxx\n}\n\npublic class triangle : shape\n{\n    float a;\n    float b;\n    float c;\n}\n\npublic class circle : shape\n{\n    float radius;\n}\n\npublic class rectangle : shape\n{\n    float width;\n    float height;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n假设配置中 有个字段 shape shape。 实际逻辑代码中，肯定是要根据它的实际类型来不同处理的， 有三种写法。 当类型数量很少时，这三种方法都可以，按个人喜好选择。当类型数量较多时，推荐按照方法3的办法，更为高效。\n\n\n# 方法1\n\n    if (shape is circle c)\n    {\n        // xxx\n    }\n    else if(shape is triangle t)\n    {\n        // xxx\n    }\n    else if(shape is rectangle r)\n    {\n        // xxx\n    }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 方法2\n\nswitch(shape)\n{\n    case circle c:\n    {\n        // xxx;\n        break;\n    }\n    case triangle t:\n    {\n        // xxx\n        break;\n    }\n    case rectangle r:\n    {\n        // xxx;\n        break;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 方法3\n\nswitch(shape.gettypeid())\n{\n    case circle::__id__:\n    {\n        circle c = (circle)shape;\n        // xxx;\n        break;\n    }\n    case triangle::__id__:\n    {\n        triangle t = (triangle)shape;\n        // xxx\n        break;\n    }\n    case rectangle::__id__:\n    {\n        rectangle r = (rectangle)shape;\n        // xxx;\n        break;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n",charsets:{cjk:!0}},{title:"介绍",frontmatter:{},regularPath:"/define.html",relativePath:"define.md",key:"v-3d2a049a",path:"/define.html",headers:[{level:2,title:"根定义文件",slug:"根定义文件",normalizedTitle:"根定义文件",charIndex:20},{level:3,title:"topmodule",slug:"topmodule",normalizedTitle:"topmodule",charIndex:58},{level:3,title:"option",slug:"option",normalizedTitle:"option",charIndex:474},{level:3,title:"patch",slug:"patch",normalizedTitle:"patch",charIndex:1281},{level:3,title:"group",slug:"group",normalizedTitle:"group",charIndex:75},{level:3,title:"import",slug:"import",normalizedTitle:"import",charIndex:81},{level:3,title:"importexcel",slug:"importexcel",normalizedTitle:"importexcel",charIndex:290},{level:3,title:"externalselector",slug:"externalselector",normalizedTitle:"externalselector",charIndex:2296},{level:3,title:"service",slug:"service",normalizedTitle:"service",charIndex:88},{level:2,title:"xml 子定义文件",slug:"xml-子定义文件",normalizedTitle:"xml 子定义文件",charIndex:3166},{level:3,title:"module 定义",slug:"module-定义",normalizedTitle:"module 定义",charIndex:3409},{level:3,title:"refgroup 定义",slug:"refgroup-定义",normalizedTitle:"refgroup 定义",charIndex:3716},{level:3,title:"enum 定义",slug:"enum-定义",normalizedTitle:"enum 定义",charIndex:3928},{level:3,title:"bean 定义",slug:"bean-定义",normalizedTitle:"bean 定义",charIndex:5019},{level:3,title:"table 定义",slug:"table-定义",normalizedTitle:"table 定义",charIndex:7038},{level:3,title:"processor",slug:"processor",normalizedTitle:"processor",charIndex:5947},{level:3,title:"定义标签",slug:"定义标签",normalizedTitle:"定义标签",charIndex:4606},{level:3,title:"数据标签",slug:"数据标签",normalizedTitle:"数据标签",charIndex:10981},{level:3,title:"分组导出 group",slug:"分组导出-group",normalizedTitle:"分组导出 group",charIndex:11278},{level:3,title:"外部类型",slug:"外部类型",normalizedTitle:"外部类型",charIndex:13178},{level:3,title:"类型",slug:"类型",normalizedTitle:"类型",charIndex:949},{level:2,title:"excel 子定义文件",slug:"excel-子定义文件",normalizedTitle:"excel 子定义文件",charIndex:17424},{level:3,title:"enum 定义文件",slug:"enum-定义文件",normalizedTitle:"enum 定义文件",charIndex:18165},{level:3,title:"bean 定义文件",slug:"bean-定义文件",normalizedTitle:"bean 定义文件",charIndex:19342},{level:3,title:"table 定义文件",slug:"table-定义文件",normalizedTitle:"table 定义文件",charIndex:20177}],lastUpdated:"3/11/2022, 3:22:45 PM",lastUpdatedTimestamp:1646983365e3,headersStr:"根定义文件 topmodule option patch group import importexcel externalselector service xml 子定义文件 module 定义 refgroup 定义 enum 定义 bean 定义 table 定义 processor 定义标签 数据标签 分组导出 group 外部类型 类型 excel 子定义文件 enum 定义文件 bean 定义文件 table 定义文件",content:'# 介绍\n\n定义由两类文件构成\n\n * 根定义文件 文件名一般为root.xml或者 __root__.xml。包括topmodule,branch,group,import,service等等设置项。\n * 子定义文件 包含配置表相关的定义。包括table, bean, enum定义。配置表定义既可以在xml中配置，也可以在excel文件中定义，每个项目可根据偏好自由选择，甚至可以同时存在。\n\n\n# 根定义文件\n\nroot.xml是定义的根文件，luban从root.xml直接和间接获得所有的定义相关数据。root.xml中定义了一些生成的设置参数，以及通过import和importexcel 指明了具体的配置表定义相关的定义文件。\n\nroot.xml包含以下设置项：\n\n\n# topmodule\n\n指定了顶层命名空间。为会所有生成的代码类添加此顶层命名空间，避免生成的代码与其他其他代码产生定义冲突。\n\ntopmodule参数可选，默认为空。不过一般推荐值为cfg。\n\n<topmodule name="cfg"/>\n\n\n1\n\n\n\n# option\n\n指定一些额外的自定义选项或参数。 option可以有0到多个。\n\n  <option name="platform" value="win"/>\n  <option name="editor.topmodule" value="editor.cfg"/>\n\n\n1\n2\n\n\nname和value都是必选参数。\n\noption参数能在代码与数据scriban模板中访问。\n\n * has_option \'xxx\' 检查是否存在对应选项。\n * get_option \'xxx\' 获得某个选项对应的value值。\n * get_option_or \'option_name\' \'default_value" 获取某个选项的值，如果不存在，则取默认值\n\n目前已经定义了一些内部option\n\n * editor.topmodule cs_unity_editor_json生成的代码的顶层命名空间，默认为 editor.{top_module}\n * cpp_bin.output_all_types_file cpp_bin 输出的包含所有类型的文件的名称，默认gen_types.h\n * cpp_bin.type_per_stub_file cpp_bin 每个stub文件包含的类型个数。默认100\n * cpp_bin.stub_file_name_format cpp_bin stub文件的格式。默认 gen_stub_{0}.cpp\n * cpp_ue_editor_json.type_per_stub_file cpp_ue_editor_json 每个stub文件包含的文件个数，默认200\n * cpp_ue_editor_json.stub_file_name_format cpp_ue_editor_json的stub文件名格式，默认gen_stub_{0}.cpp\n\n\n# patch\n\n用于本地化，制作有细微区别的多地区配置数据。可以有0个或者多个。\n\n<patch name="cn"/>\n<patch name="en"/>\n\n\n1\n2\n\n\n\n# group\n\n实际项目中往往需要为某此table或bean中的字段指定只对服务器或客户端导出，分组机制用于解决这个问题。目前支持两种粒度的分组:表级别分组和字段级别分组。\n\ngroup用于定义一个分组，配置表定义中指定的分组必须为这些在root.xml提前定义好的分组。可以有0到多个分组，实际的游戏项目中，一般至少会定义c,s这两个分组。\n\ndefault参与用于表示 如果table未指定group，是否默认属于此分组。 default=1表示未设置group属性的table，默认属于此分组。\n\n<group name="c" default="1"/>\n<group name="s" default="1"/>\n<group name="e" default="1"/>\n\n\n1\n2\n3\n\n\n\n# import\n\n导入xml格式的子定义文件。即可以是具体的某个xml文件，也可以是目录（自动遍历该目录树，加载所有xml定义）。可以有0到多个。\n\n<import name="item.xml"/>\n<import name="."/>\n\n\n1\n2\n\n\n\n# importexcel\n\n导出excel格式的子定义文件。与xml定义文件不同，xml定义文件中可以同时包含enum,table,table定义，excel格式的定义文件，相应分enum,bean,table 三种类型，每种类型的文件只能定义一种结构。 每个类型的定义文件都可以有0到多个。\n\n * name属性指定了导入的excel定义文件名，注意，理论上为了统一，excel定义文件应该放到定义目录下，但为了照顾大多数使用者的习惯，定义文件的 查找路径为--input_data_dir 选项指定的目录。\n\n * type属性指明了定义类别。可取 enum,bean,table。\n\n<importexcel name="bean.xlsx" type="bean"/>\n<importexcel name="enum.xlsx" type="enum"/>\n<importexcel name="table.xlsx" type="table"/>\n\n\n1\n2\n3\n\n\n\n# externalselector\n\n外部类的选择器，可以有多个。选择器用于指示对于某个定义了externaltype的类，选择哪个mapper。\n\n例如你定义了Color类，你可以定义在selector为unity的情况下，将Color类映射为UnityEngine.Color类，方便使用。而服务器没有 指定selector参数，则仍然使用生成的Color类。\n\n<externalselector name="unity"/>\n<externalselector name="cocos"/>\n\n\n1\n2\n\n\n\n# service\n\nservice为导出目标。命令行参数中的 -s(--service)参数即指它。项目一般至少会包含client和server及all这三个导出目标。\n\n * name 表示service名。可以任意定义。\n * manager表示生成的包含所有表的Tables类的名称。一般取Tables。\n * group 表示导出目标中包含哪些分组。\n * server.ref 用于强行引用某些类。并非所有定义的类型都会生成代码，默认只有被导出的table直接或者间接引用的类型才会生成。如果想导出一个没被table引用，但又想为它生成代码 的类型，可以在 ref里指定强行引用。例如下面示例中 xxx.ServerOnlyType1和xx.ServerOnlyEnum1一定会导出。\n\n<service name="server" manager="Tables" group="s">\n    <ref name="xxx.ServerOnlyType1"/>\n    <ref name="xxx.ServerOnlyEnum1"/>\n</service>\n<service name="client" manager="Tables" group="c"/>\n<service name="all" manager="Tables" group="c,s,e"/>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# xml 子定义文件\n\n可以包含module,bean,enum,table这些定义。\n\n典型的表定义如下：\n\n<module name="item">\n   <enum name="xxx">\n\n   </enum>\n\n   <bean name="yyyy">\n   \n   </bean>\n\n   <table name="Tbzzz" value="xxx" input="abc.xlsx"/>\n</module>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# module 定义\n\nname属性为模块名。可以为空，也可以为多级模块名，如xx.yy。模块中可以嵌套定义子模块，子模块会继承父模块的命名空间。在模块中定义的类型，命名空间为模块全名。 如下面的Abc类，全名为 xx.yy.Abc，而Def类的命名为xx.zz.Def。\n\n<module name="xx">\n   <module name="yy">\n     <bean name="Abc"/>\n   </module>\n   <module name="zz">\n     <bean name="Def"/>\n   </module>\n</module>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# refgroup 定义\n\n定义一个ref组。有时候很多字段都会引用到共同的一组表，使用refgroup比较方便，修改时不需要改多处。\n\n<refgroup name="xxx" ref="xx.Tbxx,yy.Tbyy,..."/>\n\n\n\n1\n2\n\n * refgroup.name 。必选。引用组名。需要全局唯一，不包含模块名。\n * refgroup.ref 。必选。引用的表名。格式与 ref检验器完全相同。\n\n\n# enum 定义\n\n定义一个枚举。格式如下\n\n<enum name="Color">\n    <var name="RED" alias="红" value="1"/>\n    <var name="GREEN" alias="绿" value="2"/>\n   <var name="BLUE" alias="蓝" value="3"/>\n</enum>\n\n<enum name="AccessMode" flags="1" tags="key1=value1#key2=value2" comment="访问方式" unique="1">\n    <var name="READ" value="1" tags="key1=value1#k2=v2" comment="读"/>\n    <var name="WRITE" value="2"/>\n    <var name="READ_WRITE" value="READ|WRITE"/>\n</enum>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n语法介绍:\n\n * enum.name 。必选。枚举名。 命名空间为当前module的完整命名空间（包含父module)。\n * enum.flags。可选。是否为bit标志位类型。默认为false。 如果为1或true,则填写配置数据时，允许使用 READ|WRITE 这种写法\n * enum.tags。 可选。标签。格式为"key1=value2#key2=value2#..."。 一般配合自定义模板生成时才可能会用到。详细参见 定义标签 这一节。\n * enum.unique。可选。枚举值是否唯一。默认为true。\n * enum.comment。 可选。注释。 如果非空，生成代码时会包含注释。\n * enum.var.name 必选。枚举名。\n * enum.var.alias 可选。别名。 策划填写数据时，可以填别名，方便一些英语不好的策划。\n * enum.var.value 可选。枚举值。如果不填，则值为上一个枚举项的值+1。 如果是第一个枚举项，则值为0.\n * enum.var.tags 可选。标签。 一般配合自定义模板生成时才可能用上。 详细参见 定义标签 这一节。\n * enum.var.comment 可选。注释。 如果非空，生成枚举项时会包含注释。如果为空，又定义了alias，则会取alias为注释。\n\n策划在配置表中，可以填枚举对应的 枚举项名，别名或者相应的整数值 来表达这个枚举，强烈建议不要使用整数值。\n\n\n# bean 定义\n\n定义一个结构类型。结构类型又分两种，普通结构和多态结构。\n\n# 普通格式\n\n必须包含至少一个字段（不允许字段数为0，避免list,bean之类的数据 无限读入的情况）。格式如下：\n\n\n<bean name="Item" sep="," parent="">\n   <var name="item_id" type="int" ref="item.TbItem"/>\n   <var name="num" type="int" group="s"/>\n   <var name="icon" type="string" path="unity"/>\n   <var name="desc" type="string" tag="a=1#b=2"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n * bean.name 结构名。 不能包含命名空间，例如 abc.Item是不允许的。\n * bean.parent 继承的父类名。 可选参数。默认为空。 可以继承其他模块的类型，此时parent必须写全名。\n * bean.sep 可选参数。 指定在excel数据源中，该结构以复合模式填写，例如 MyIntVector3包含x,y,z三个int字段，通过sep=","，则所有读取MyIntVector3时，都会将读入的 字符串用\',\'拆分为三个整数，再读入。\n * var.name 字段名。 没有特别的要求，不过推荐使用xx_yy_zz这样的名称，因为生成代码时，默认会根据语言生成符合语言推荐代码风格的字段名。 有一些名字被保留不允许使用，如base,end,if之类，因为它们在一些语言里保留字或关键字，如果误用了这种名字，会有编译错误。\n * var.type 类型名。参见后面的类型定义这一节。\n * var.group 所属分组。可选。可以多个，以\',\'分割，每个值必须是root.xml中定义的group中的一个，如不填，则该字段属于所有分组。 详细参见后面分组导出这一节。\n * var.ref 表引用。可选。指向一个表全名或者一个refgroup。会检查此字段是否为某个表的有效id。可以避免策划填错。 详细参见 processor这一节。\n * var.path 资源引用。可选。指向一个资源名。 会检查此字段是否指向有效的资源，避免策划填错而产生运行时错误。 详细参见 processor这一节。\n * var.tag 字段tag。可选。格式为 tag="tag1=xxx#tag2=bb#tag3=ccc"。用于为字段添加一些tag。主要用于自定义代码生成时对一些字段特殊处理。 详细参见定义标签这一节。\n\n# 多态结构\n\n除了像普通结构那样定义自身的子字段外，也可以在定义的最后，包含1到多个子结构。类似OOP的概念，子结构会继承父结构的所有字段。子结构既可以是普通 结构，也可以是多态结构。允许任意继承层次的多态结构定义。\n\n<bean name="Parent" >\n   <var name="xxx" type="int"/>\n   ... 更多父类的字段\n   <bean name="Child11">\n       <var name="x1" type="int"/>\n       ... 更多 Child11 的字段\n\n       <bean name="Child21">\n         ... 更多 Parent21 的字段\n       </bean>\n       <bean name="Child22">\n         ... 更多 Child22 的字段\n       </bean>\n\n       ... 更多 Parent11 的直接子类\n   </bean>\n   \n  <bean name="Child12">\n   ... Child12 的字段\n  </bean>\n</bean>\n\n在外部定义继承\n<bean name="Child31" parent="Parent">\n  <var name="a" type="float"/>\n  <var name="b" type="float"/>\n</bean>\n\n<module name="inner_module">\n  可以从其他模块的父类继承，要求parent写全名。\n  <bean name="Child41" parent="test.Parent">\n    <var name="a" type="float"/>\n  </bean>\n</module>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# table 定义\n\n定义一个表。 格式如下：\n\n<table name="TbTableName" value="value_type" define_from_file="0" mode="map" input="file1,file2,..." group="group1,group2,..."/>\n\n\n1\n\n * name。表名。无限制。但推荐用TbXxxx的格式。\n * value。 表记录的结构类型名。\n * define_from_file 是否从文件中读取表记录value的定义。 可选。默认为false\n * mode。 表模式。可选，默认为map。目前支持三种模式的表。\n   * map。 普通key-value表;\n   * list。 列表形式的表。但它支持0到多个索引，并且支持多主键联合索引及多主键独立索引。\n   * singleton。 为单例表，适合用于定义一些全局信息。\n * input。表数据源。可以有多个，以\',\'分割。每个数据源可以是文件，目录，xlsx中的某个单元薄，json中的某个字段，等等。\n * group。 表分组。 可选。值可以多个，以\',\'分割，每个值必须为root.xml中定义的group中的一个。 如不填，则此表属于 root.xml中定义的group中default=1的分组。\n\n# table的mode详细介绍\n\n接上面table定义中关于mode的描述。 因为较关键，独立介绍。\n\n * mode=map 。普通key-value表，如果未定义mode和index，则默认为普通表，并且取value_type的第一个字段为key。\n\n定义表\n\n<table name="TbNormalMap" value="NormalMap" index="key1" input="normal_map.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##VAR    KEY1   X      Y        NUM\n##type   int    long   string   int\n         1      1      aaa      123\n         2      1      bbb      124\n         3      2      aaa      134\n         4      1      aaa      124\n         5      6      xxx      898\n\n * mode=singleton。 单例表，即只有一个记录的表，没有，也不能定义index属性。 为了方便起见，也可以写成mode="one"之类。\n\n定义表\n\n<table name="TbSingleton" value="Singleton" mode="singleton" input="singleton.xlsx"/>\n\n\n1\n\n\n##VAR    GUILD_OPEN_LEVEL   BAG_INIT_CAPACITY   BAG_MAX_CAPACITY   NEWBIE_TASKS\n##type   int                int                 int                list,int\n##       desc1              desc 2              desc 3             desc 4\n         10                 100                 500                10001,10002\n\n * mode=list，key个数为0。 无主键列表模式。\n\n定义表\n\n<table name="TbNotKeyList" value="NotKeyList" mode="list" input="not_key_list.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##VAR    X     Y      Z        NUM\n##type   int   long   string   int\n         1     1      aaa      123\n         1     1      bbb      124\n         1     2      aaa      134\n         2     1      aaa      124\n         5     6      xxx      898\n\n * mode=list, 联合多主键模式。 key个数 >= 2。 多个key构成联合唯一主键。使用"+"分割key，表示联合关系。\n\n定义表\n\n<table name="TbUnionMultiKey" value="UnionMultiKey" index="key1+key2+key3" input="union_multi_key.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##VAR    KEY1   KEY2   KEY3     NUM\n##type   int    long   string   int\n         1      1      aaa      123\n         1      1      bbb      124\n         1      2      aaa      134\n         2      1      aaa      124\n         5      6      xxx      898\n\n * mode="list", 独立多主键模式。key个数>=1， 使用","分割key，表示独立主键模式，即每个key都是独立唯一索引。\n\n定义表\n\n<table name="TbMultiKey" value="MultiKey" index="key1,key2,key3" input="multi_key.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##VAR    KEY1   KEY2   KEY3     NUM\n##type   int    long   string   int\n         1      2      aaa      123\n         2      4      bbb      124\n         3      6      ccc      134\n         4      8      ddd      124\n         5      1      eee      898\n\n# table.input 数据源详细介绍\n\ntable的input属性指定了数据源，允许多个，以","分割。支持非常灵活的数据源定义：\n\n * 来自某个excel文件的所有单元薄。例如 xxx.xlsx\n * 来自某个excel文件的指定单元薄。例如 sheet@xxx.xlsx\n * 来自json、xml、lua、yaml、unity scriptable asset文件。例如 xx.json或xx.xml或xx.lua或xx.yml\n * 来自json、xml、lua、yaml、unity scriptable asset子字段。 例如 *items@item_module.json或item.consts@item_module.json之类，其他格式同理\n * 来自目录。目录树下所有文件（包含递归子目录）都会被当作数据源读入，每个文件(excel族例外)对应一个记录。例如 skill_json_dir\n * 以上的随意组合。如 xx.xlsx,sheet2@yy.xls,abc@zz.json,ccc_dir\n\n\n# processor\n\n对于类型，可以附加processor元数据。processor有两个用途：\n\n * 校验器。如 ref,path,range,set,size。\n * 特殊的注解。如sep 等等。\n * tag定义。 除了以上两种以外的名字，都会被当作tag处理。\n\n# 校验器\n\n格式为 processor1=value1#processor2=value2 ...\n\n目前支持的检验器有ref,path,range,set,size，详细请参见文档 数据校验器。\n\n# 特殊注解\n\n用于指示luban的对数据作特殊处理。目前支持有注解器有\n\n * sep 分割器,格式为 sep=字符列表 。只能用于加载excel数据。指示将读入的下一个单元格（或者下一个字符串），用sep中的任意一个字符分割成多个子数据，再将这些子数据作为一个当前类型的数据读入。 一般来说，只有容器类型和bean类型及text这种带有多个原子数据的类型才可能用得到sep。\n\n\n# 定义标签\n\n定义的所有processor=value数据对，都会被维护成 k-v tags字典。 tag目前主要用于自定义代码或者数据的模板生成，当想对某些字段作特殊处理时，tag可以发挥作用。\n\nscriban模板文件中提供了两个函数可以操作tag。\n\n * {{has_tag ctype \'tag_name\'}} 。 检查类型是否有某个tag\n * {{get_tag ctype \'tag_name\'}} 。 返回类型的tag对应的值，如不存在则返回空。\n\n\n# 数据标签\n\n注意与定义标签不同。定义作用于结构，字段，表等等定义上，数据标签作用于记录。详细文档见 tag\n\n目前数据标签有几个用途：\n\n * 记录过滤\n\n为记录添加tag,可用于过滤导出之类的场合。比如，对于标识了dev或者debug的数据，正式发布时，可以用 --output:exclude_tags dev,test 过滤掉这些数据。\n\n * unchecked 标记\n\n标识不对该记录执行校验器。研发中有时候策划批量做了一批临时数据，很多引用都不合法，程序暂时也用不到，导致生成时有大量警告，通过给数据添加unchecked的方式， 可以让检验器不检查这些记录的数据合法性。\n\n\n# 分组导出 group\n\n目前支持两种粒度的分组导出：table级别和bean字段级别。table定义和 bean的field定义都支持group属性。\n\n * table 级别导出 table的group属性如果不指定，则默认对所有group.default=1的分组导出，如果指定，则只对指定分组导出。可以有多个分组。\n\nxml格式定义如下\n\n<table name="TbClothDisplay" value="ClothDisplay" group="c" input="test/cloth.xlsx"/> 此表只属于c分组\n<table name="TbItem" value="Item" group="c,s" input="test/item.xlsx"/> 此表属于c,s分组\n<table name="TbWidget" value="Window" group="e" input="test/widget.xlsx"/> 此表只属于e分组\n\n\n1\n2\n3\n\n\nxlsx格式定义如下\n\n##VAR   FULL_NAME        VALUE_TYPE     INPUT              GROUP   ...\n        TbClothDisplay   ClothDisplay   cloth/cloth.xlsx   c       \n        TbItem           Item           item/item.xlsx     c,s     \n        TbWidget         Widget         ui/widget.xlsx     e       \n\nLuban.Client使用 -s client 参数时，只导出TbDemoGroup_C和TbDemoGroup_CS表，而TbDemoGroup_E表不会导出。\n\n * bean的field级别导出\n\n导出配置时，bean中某个field根据分组导出。\n\nxml定义格式如下：\n\n\n<bean name="DemoGroup">\n <var name="id" type="int"/>\n <var name="x1" type="int"/> 默认属于所有分组c,s,e\n <var name="x2" type="int" group="c"/>属于 c 分组\n <var name="x3" type="int" group="s"/>属于s分组\n <var name="x4" type="int" group="c,s"/>属于c,s分组\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n如果在 __bean__.xlsx 中定义bean，格式如下\n\n##VAR   FULL_NAME   SEP   COMMENT   FIELD.NAME   FIELDS.TYPE   FIELD.GROUP   ...\n        DemoGroup                   id           int                         \n                                    x1           int                         \n                                    x2           int           c             \n                                    x3           int           s             \n                                    x4           int           c,s           \n\n如果直接在数据表里定义的bean结构，格式如下\n\n##VAR    ID    X1    X2            X3            X4\n##type   int   int   int&group=c   int&group=s   int&group=c,s\n         1     2     2             2             2\n\n当 -s client 时， id、x1、x2、x4字段导出。 当 -s server 时， id、x1、x3、x4字段导出。\n\n\n# 外部类型\n\nenum和bean类型都支持支持外部类型，可以将某个自定义类型，映射到现成的一个类。目前只支持c#语言的外部类型，其他语言需要时再扩展。\n\n如你可以定义一个AudioType，映射到UnityEngine.AudioType。\n\n如你可以定义一个Color类，映射到UnityEngine.Color类。\n\n定义如下\n\n\n外部枚举定义\n\n    <enum name="AudioType">\n        <var name="UNKNOWN" value="0"/>\n        <var name="ACC" value="1"/>\n        <var name="AIFF" value="2"/>\n    </enum>\n    \n    <externaltype name="unity_audio_type" origin_type_name="test.AudioType">\n        <mapper lan="cs" selector="unity_cs">\n            <target_type_name>UnityEngine.AudioType</target_type_name>\n        </mapper>\n    </externaltype>\n\n外部class定义\n\n    <bean name="Color" sep=",">\n        <var name="r" type="float"/>\n        <var name="g" type="float"/>\n        <var name="b" type="float"/>\n        <var name="a" type="float"/>\n    </bean>\n    <externaltype name="unity_color" origin_type_name="test.Color">\n        <mapper lan="cs" selector="unity_cs">\n            <target_type_name>UnityEngine.Color</target_type_name>\n            <create_external_object_function>ExternalTypeUtil.NewFromCfgColor</create_external_object_function>\n        </mapper>\n    </externaltype>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n语法介绍：\n\n * externaltype.name。必选。外部类型名。这个类型名并不是真实的名字，类似id的概念。需要所有定义文件内唯一。它不会自动加上模块名。\n * externaltype.origin_type_name。 必选。被映射的类型全名。\n * externaltype.mapper 映射器。 由于对于一个类，有些语言需要映射，有些语言可能不需要映射，另外，每个语言的映射参数都不一样。所以可能会有多个。\n * mapper.lan 。必选。只对该语言生效。需要与selector配合形成唯一mapper。\n * mapper.selector。 必选。 只对该selector生成。需要与lan配合形成唯一mapper。\n * mapper.target_type_name 必选。映射的外部类型全名。\n * mapper.create_external_object_function 映射外部enum时可选，外部class时必选。转换函数名。需要提供一个函数，用来将配置类对象转换到外部类对象。\n\n使用示例，可参见示例项目 Csharp_Unity_bin_ExternalTypes\n\n\n# 类型\n\nluban有非常完备的类型系统，可以轻松表达任意复杂的数据结构。\n\n# 原生类型\n\n * bool\n * byte(int8)\n * short(int16)\n * fshort\n * int(int32)\n * fint\n * long(int64)\n * flong\n * float(float32)\n * double(float64)\n * string\n\n# bytes 类型\n\n即字节数组类型。在c#中对应byte[]\n\n# vector2,vector2,vector3\n\n内置的向量类型。 在c#语言中对应System.Numerics.Vector{2,3,4}，或 UnityEngine.Vector{2,3,4}。\n\n * vector2 。 float x, y;\n * vector3 。 float x, y, z;\n * vector4 。 float x, y, z, w;\n\n# datetime (time) 类型\n\n时间类型。导出数据后，会转换为int类型1970-1-1 0:0:0 以来的UTC时间秒数。\n\n由于策划填的都是 墙上时间（时期跟时区相关），所以导出时需要指定 datetime所对应的时区，不指定则默认使用东8区时区。 参见 Luban 命令行 中关于时区相关的参数介绍。\n\n# text\n\n本地化文本类型。它由key和text两个值构成。\n\n# 容器类型\n\n * array 。数组类型，定义方式为 "array,element_type"。 对应c#类型为 element_type[]之类。 例如 array,int;array,Task。\n * list。 列表类型。定义方式为 "list,element_type"。对应c#类型为List<element_type>。例如 list,int;list,Item。\n * set。 集合类型。 定义方式为 "set,element_type"。 对应c#类型为 HashSet<element_type>。例如 set,int;set,string。\n * map。 字典类型。 定义方式为 "map,key_type,value_type"。对应c#类型为 Dictionary<key_type, value_type>。例如 map,int,int;map,string,Item;\n\narray和list的element_type可以为除了容器类型以外的任意类型，不支持容器类型的嵌套，但你可以通过定义一个bean，包含容器字段。然后再定义list,bean的方式 间接实现容器嵌套。\n\nset的element_type必须是原生类型，datetime, 枚举类型，不能是bean类型。\n\nmap的key类型的约束与set的element_type相关， value类型约束与 array的element_type相同。\n\n# 可空类型\n\n对应c#里的可空变量的语义，如int?, bool? ColorType? 。 除了容器以外的类型都可以定义相应的可空类型。\n\n# enum 类型\n\n枚举类型。\n\n<enum name="Color">\n    <var name="RED" alias="红" value="1"/>\n    <var name="GREEN" alias="绿" value="2"/>\n   <var name="BLUE" alias="蓝" value="3"/>\n</enum>\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n# bean 类型\n\n结构定义。bean包含两种，普通bean结构和多态bean结构。\n\n * 普通bean结构\n\n<bean name="Item" value_type="1" alias="道具">\n    <var name="id" id="1" type="int" ref="item.TbItem" tags="k1=v1#k2=v2"/>\n    <var name="icon" type="string" path="unity" comment="图标" group="c"/>\n    <var name="num" type="int" group="c,s"/>\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n\n * 多态 bean 结构\n\n\n<bean name="Shape">\n  <var name="command_var1" type="int"/>\n   \n  <bean name="Shape2D">\n     <var name="command_2d_var" type="string"/>\n      <bean name="Circle">\n         <var name="radius" type="float"/>\n      </bean>\n      <bean name="Rectangle">\n         <var name="width" type="float"/>\n         <var name="height" type="float"/>\n     </bean>\n  </bean>\n\n  <bean name="Line">\n     <var name="start_pos" type="vector2"/>\n     <var name="direction" type="vector2"/>\n  </bean>\n</bean>\n\n或者在外面定义继承\n\n<bean name="Triangle" parent="Shape">\n  <var name="a" type="float"/>\n  <var name="b" type="float"/>\n  <var name="c" type="float"/>\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# excel 子定义文件\n\nexcel子定义文件与xml定义文件几乎完全等价，对于luban来说，只是从哪种格式的文件中解析读取定义的区别。\n\n请参见 luban_examples/DesignerConfigs目录下的 __enums__.xlsx, __beans__.xlsx, __tables__.xlsx。\n\nexcel子定义文件与xml子定义文件几乎完全等价（除了不能定义外部类的映射信息即externaltype），对luban而言它们的区别仅仅是定义的格式不同，但提供的元数据是等价的。\n\n===这儿仅介绍excel定义文件的格式，具体语义请参照xml子定义文件中相关文档。==\n\nxml子定义文件可以定义任意结构，但excel不适合在一个文件里定义各种不同结构，因此excel子定义文件分类型，每个类型只定义一种结构。每个类型可以有0到多个定义文件（多个importexcel语句，而不是name里包含多个文件）。\n\n由于大多数使用excel文件来定义配置的使用者，为了方便起见，希望定义excel文件在配置数据目录下，而不是跟其他定义一样，在配置定义目录下，特地作了特殊处理，以%input_data_dir%为相对目录读入excel定义文件。\n\n有三种类型的定义文件:\n\n * enum\n * bean\n * table\n\n\n<importexcel name="__enums__.xlsx" type="enum"/>\n<importexcel name="__beans__.xlsx" type="bean"/>\n<importexcel name="__tables__.xlsx" type="table"/>\n\n\n\n1\n2\n3\n4\n5\n\n\n\n# enum 定义文件\n\n定义多个enum结构。\n\n格式如下\n\n##var   full_name           flags   unique   comment   tags   *items\n##+                                                           name         alias   value        comment   tags\n        test.ETestQuality   false   true                      A            白       1            最差品质      \n                                                              B            黑       1            最差品质      \n                                                              C            蓝       1            中等品质      \n                                                              D            红       1            最好品质      \n        test.AccessFlag     true    true                      WRITE                1                      \n                                                              READ                 2                      \n                                                              TRUNCATE             4                      \n                                                              NEW                  8                      \n                                                              READ_WRITE           READ|WRITE             \n\n\n# bean 定义文件\n\n定义多个bean结构。 不支持多态bean定义。\n\n格式如下\n\n##var   full_name        sep   comment   tags   *fields\n##+                                             name   type             group   comment   tags\n        test.DemoBean1                          x1     int                                \n                                                x2     string                             \n                                                x3     float                              \n                                                x4     bool                               \n        test.DemoBean2                          x1     int                                \n                                                x3     list,float                         \n                                                x4     test.DemoBean1                     \n\n\n# table 定义文件\n\n定义配置表列表，只有出现在此表中的表才会导出。\n\nvalue_type为表记录类型类,必须是bean结构。value_type的类型名中如果不包含模块名，则取与full_name相同的命名空间，如果包含模块名，则取此模块名。例如，Item的模块名为 item，demo.Bag的模块名为demo。\n\n格式如下\n\n##VAR   FULL_NAME     VALUE_TYPE   DEFINE_FROM_FILE   INPUT       INDEX   MODE   GROUP   COMMENT   TAGS   PATCH_INPUT   OUTPUT\n        item.TbItem   Item         true               item.xlsx                                                         \n        test.TbBag    demo.Bag     true               bag.xlsx                                                          ',normalizedContent:'# 介绍\n\n定义由两类文件构成\n\n * 根定义文件 文件名一般为root.xml或者 __root__.xml。包括topmodule,branch,group,import,service等等设置项。\n * 子定义文件 包含配置表相关的定义。包括table, bean, enum定义。配置表定义既可以在xml中配置，也可以在excel文件中定义，每个项目可根据偏好自由选择，甚至可以同时存在。\n\n\n# 根定义文件\n\nroot.xml是定义的根文件，luban从root.xml直接和间接获得所有的定义相关数据。root.xml中定义了一些生成的设置参数，以及通过import和importexcel 指明了具体的配置表定义相关的定义文件。\n\nroot.xml包含以下设置项：\n\n\n# topmodule\n\n指定了顶层命名空间。为会所有生成的代码类添加此顶层命名空间，避免生成的代码与其他其他代码产生定义冲突。\n\ntopmodule参数可选，默认为空。不过一般推荐值为cfg。\n\n<topmodule name="cfg"/>\n\n\n1\n\n\n\n# option\n\n指定一些额外的自定义选项或参数。 option可以有0到多个。\n\n  <option name="platform" value="win"/>\n  <option name="editor.topmodule" value="editor.cfg"/>\n\n\n1\n2\n\n\nname和value都是必选参数。\n\noption参数能在代码与数据scriban模板中访问。\n\n * has_option \'xxx\' 检查是否存在对应选项。\n * get_option \'xxx\' 获得某个选项对应的value值。\n * get_option_or \'option_name\' \'default_value" 获取某个选项的值，如果不存在，则取默认值\n\n目前已经定义了一些内部option\n\n * editor.topmodule cs_unity_editor_json生成的代码的顶层命名空间，默认为 editor.{top_module}\n * cpp_bin.output_all_types_file cpp_bin 输出的包含所有类型的文件的名称，默认gen_types.h\n * cpp_bin.type_per_stub_file cpp_bin 每个stub文件包含的类型个数。默认100\n * cpp_bin.stub_file_name_format cpp_bin stub文件的格式。默认 gen_stub_{0}.cpp\n * cpp_ue_editor_json.type_per_stub_file cpp_ue_editor_json 每个stub文件包含的文件个数，默认200\n * cpp_ue_editor_json.stub_file_name_format cpp_ue_editor_json的stub文件名格式，默认gen_stub_{0}.cpp\n\n\n# patch\n\n用于本地化，制作有细微区别的多地区配置数据。可以有0个或者多个。\n\n<patch name="cn"/>\n<patch name="en"/>\n\n\n1\n2\n\n\n\n# group\n\n实际项目中往往需要为某此table或bean中的字段指定只对服务器或客户端导出，分组机制用于解决这个问题。目前支持两种粒度的分组:表级别分组和字段级别分组。\n\ngroup用于定义一个分组，配置表定义中指定的分组必须为这些在root.xml提前定义好的分组。可以有0到多个分组，实际的游戏项目中，一般至少会定义c,s这两个分组。\n\ndefault参与用于表示 如果table未指定group，是否默认属于此分组。 default=1表示未设置group属性的table，默认属于此分组。\n\n<group name="c" default="1"/>\n<group name="s" default="1"/>\n<group name="e" default="1"/>\n\n\n1\n2\n3\n\n\n\n# import\n\n导入xml格式的子定义文件。即可以是具体的某个xml文件，也可以是目录（自动遍历该目录树，加载所有xml定义）。可以有0到多个。\n\n<import name="item.xml"/>\n<import name="."/>\n\n\n1\n2\n\n\n\n# importexcel\n\n导出excel格式的子定义文件。与xml定义文件不同，xml定义文件中可以同时包含enum,table,table定义，excel格式的定义文件，相应分enum,bean,table 三种类型，每种类型的文件只能定义一种结构。 每个类型的定义文件都可以有0到多个。\n\n * name属性指定了导入的excel定义文件名，注意，理论上为了统一，excel定义文件应该放到定义目录下，但为了照顾大多数使用者的习惯，定义文件的 查找路径为--input_data_dir 选项指定的目录。\n\n * type属性指明了定义类别。可取 enum,bean,table。\n\n<importexcel name="bean.xlsx" type="bean"/>\n<importexcel name="enum.xlsx" type="enum"/>\n<importexcel name="table.xlsx" type="table"/>\n\n\n1\n2\n3\n\n\n\n# externalselector\n\n外部类的选择器，可以有多个。选择器用于指示对于某个定义了externaltype的类，选择哪个mapper。\n\n例如你定义了color类，你可以定义在selector为unity的情况下，将color类映射为unityengine.color类，方便使用。而服务器没有 指定selector参数，则仍然使用生成的color类。\n\n<externalselector name="unity"/>\n<externalselector name="cocos"/>\n\n\n1\n2\n\n\n\n# service\n\nservice为导出目标。命令行参数中的 -s(--service)参数即指它。项目一般至少会包含client和server及all这三个导出目标。\n\n * name 表示service名。可以任意定义。\n * manager表示生成的包含所有表的tables类的名称。一般取tables。\n * group 表示导出目标中包含哪些分组。\n * server.ref 用于强行引用某些类。并非所有定义的类型都会生成代码，默认只有被导出的table直接或者间接引用的类型才会生成。如果想导出一个没被table引用，但又想为它生成代码 的类型，可以在 ref里指定强行引用。例如下面示例中 xxx.serveronlytype1和xx.serveronlyenum1一定会导出。\n\n<service name="server" manager="tables" group="s">\n    <ref name="xxx.serveronlytype1"/>\n    <ref name="xxx.serveronlyenum1"/>\n</service>\n<service name="client" manager="tables" group="c"/>\n<service name="all" manager="tables" group="c,s,e"/>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# xml 子定义文件\n\n可以包含module,bean,enum,table这些定义。\n\n典型的表定义如下：\n\n<module name="item">\n   <enum name="xxx">\n\n   </enum>\n\n   <bean name="yyyy">\n   \n   </bean>\n\n   <table name="tbzzz" value="xxx" input="abc.xlsx"/>\n</module>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# module 定义\n\nname属性为模块名。可以为空，也可以为多级模块名，如xx.yy。模块中可以嵌套定义子模块，子模块会继承父模块的命名空间。在模块中定义的类型，命名空间为模块全名。 如下面的abc类，全名为 xx.yy.abc，而def类的命名为xx.zz.def。\n\n<module name="xx">\n   <module name="yy">\n     <bean name="abc"/>\n   </module>\n   <module name="zz">\n     <bean name="def"/>\n   </module>\n</module>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# refgroup 定义\n\n定义一个ref组。有时候很多字段都会引用到共同的一组表，使用refgroup比较方便，修改时不需要改多处。\n\n<refgroup name="xxx" ref="xx.tbxx,yy.tbyy,..."/>\n\n\n\n1\n2\n\n * refgroup.name 。必选。引用组名。需要全局唯一，不包含模块名。\n * refgroup.ref 。必选。引用的表名。格式与 ref检验器完全相同。\n\n\n# enum 定义\n\n定义一个枚举。格式如下\n\n<enum name="color">\n    <var name="red" alias="红" value="1"/>\n    <var name="green" alias="绿" value="2"/>\n   <var name="blue" alias="蓝" value="3"/>\n</enum>\n\n<enum name="accessmode" flags="1" tags="key1=value1#key2=value2" comment="访问方式" unique="1">\n    <var name="read" value="1" tags="key1=value1#k2=v2" comment="读"/>\n    <var name="write" value="2"/>\n    <var name="read_write" value="read|write"/>\n</enum>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n语法介绍:\n\n * enum.name 。必选。枚举名。 命名空间为当前module的完整命名空间（包含父module)。\n * enum.flags。可选。是否为bit标志位类型。默认为false。 如果为1或true,则填写配置数据时，允许使用 read|write 这种写法\n * enum.tags。 可选。标签。格式为"key1=value2#key2=value2#..."。 一般配合自定义模板生成时才可能会用到。详细参见 定义标签 这一节。\n * enum.unique。可选。枚举值是否唯一。默认为true。\n * enum.comment。 可选。注释。 如果非空，生成代码时会包含注释。\n * enum.var.name 必选。枚举名。\n * enum.var.alias 可选。别名。 策划填写数据时，可以填别名，方便一些英语不好的策划。\n * enum.var.value 可选。枚举值。如果不填，则值为上一个枚举项的值+1。 如果是第一个枚举项，则值为0.\n * enum.var.tags 可选。标签。 一般配合自定义模板生成时才可能用上。 详细参见 定义标签 这一节。\n * enum.var.comment 可选。注释。 如果非空，生成枚举项时会包含注释。如果为空，又定义了alias，则会取alias为注释。\n\n策划在配置表中，可以填枚举对应的 枚举项名，别名或者相应的整数值 来表达这个枚举，强烈建议不要使用整数值。\n\n\n# bean 定义\n\n定义一个结构类型。结构类型又分两种，普通结构和多态结构。\n\n# 普通格式\n\n必须包含至少一个字段（不允许字段数为0，避免list,bean之类的数据 无限读入的情况）。格式如下：\n\n\n<bean name="item" sep="," parent="">\n   <var name="item_id" type="int" ref="item.tbitem"/>\n   <var name="num" type="int" group="s"/>\n   <var name="icon" type="string" path="unity"/>\n   <var name="desc" type="string" tag="a=1#b=2"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n * bean.name 结构名。 不能包含命名空间，例如 abc.item是不允许的。\n * bean.parent 继承的父类名。 可选参数。默认为空。 可以继承其他模块的类型，此时parent必须写全名。\n * bean.sep 可选参数。 指定在excel数据源中，该结构以复合模式填写，例如 myintvector3包含x,y,z三个int字段，通过sep=","，则所有读取myintvector3时，都会将读入的 字符串用\',\'拆分为三个整数，再读入。\n * var.name 字段名。 没有特别的要求，不过推荐使用xx_yy_zz这样的名称，因为生成代码时，默认会根据语言生成符合语言推荐代码风格的字段名。 有一些名字被保留不允许使用，如base,end,if之类，因为它们在一些语言里保留字或关键字，如果误用了这种名字，会有编译错误。\n * var.type 类型名。参见后面的类型定义这一节。\n * var.group 所属分组。可选。可以多个，以\',\'分割，每个值必须是root.xml中定义的group中的一个，如不填，则该字段属于所有分组。 详细参见后面分组导出这一节。\n * var.ref 表引用。可选。指向一个表全名或者一个refgroup。会检查此字段是否为某个表的有效id。可以避免策划填错。 详细参见 processor这一节。\n * var.path 资源引用。可选。指向一个资源名。 会检查此字段是否指向有效的资源，避免策划填错而产生运行时错误。 详细参见 processor这一节。\n * var.tag 字段tag。可选。格式为 tag="tag1=xxx#tag2=bb#tag3=ccc"。用于为字段添加一些tag。主要用于自定义代码生成时对一些字段特殊处理。 详细参见定义标签这一节。\n\n# 多态结构\n\n除了像普通结构那样定义自身的子字段外，也可以在定义的最后，包含1到多个子结构。类似oop的概念，子结构会继承父结构的所有字段。子结构既可以是普通 结构，也可以是多态结构。允许任意继承层次的多态结构定义。\n\n<bean name="parent" >\n   <var name="xxx" type="int"/>\n   ... 更多父类的字段\n   <bean name="child11">\n       <var name="x1" type="int"/>\n       ... 更多 child11 的字段\n\n       <bean name="child21">\n         ... 更多 parent21 的字段\n       </bean>\n       <bean name="child22">\n         ... 更多 child22 的字段\n       </bean>\n\n       ... 更多 parent11 的直接子类\n   </bean>\n   \n  <bean name="child12">\n   ... child12 的字段\n  </bean>\n</bean>\n\n在外部定义继承\n<bean name="child31" parent="parent">\n  <var name="a" type="float"/>\n  <var name="b" type="float"/>\n</bean>\n\n<module name="inner_module">\n  可以从其他模块的父类继承，要求parent写全名。\n  <bean name="child41" parent="test.parent">\n    <var name="a" type="float"/>\n  </bean>\n</module>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# table 定义\n\n定义一个表。 格式如下：\n\n<table name="tbtablename" value="value_type" define_from_file="0" mode="map" input="file1,file2,..." group="group1,group2,..."/>\n\n\n1\n\n * name。表名。无限制。但推荐用tbxxxx的格式。\n * value。 表记录的结构类型名。\n * define_from_file 是否从文件中读取表记录value的定义。 可选。默认为false\n * mode。 表模式。可选，默认为map。目前支持三种模式的表。\n   * map。 普通key-value表;\n   * list。 列表形式的表。但它支持0到多个索引，并且支持多主键联合索引及多主键独立索引。\n   * singleton。 为单例表，适合用于定义一些全局信息。\n * input。表数据源。可以有多个，以\',\'分割。每个数据源可以是文件，目录，xlsx中的某个单元薄，json中的某个字段，等等。\n * group。 表分组。 可选。值可以多个，以\',\'分割，每个值必须为root.xml中定义的group中的一个。 如不填，则此表属于 root.xml中定义的group中default=1的分组。\n\n# table的mode详细介绍\n\n接上面table定义中关于mode的描述。 因为较关键，独立介绍。\n\n * mode=map 。普通key-value表，如果未定义mode和index，则默认为普通表，并且取value_type的第一个字段为key。\n\n定义表\n\n<table name="tbnormalmap" value="normalmap" index="key1" input="normal_map.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##var    key1   x      y        num\n##type   int    long   string   int\n         1      1      aaa      123\n         2      1      bbb      124\n         3      2      aaa      134\n         4      1      aaa      124\n         5      6      xxx      898\n\n * mode=singleton。 单例表，即只有一个记录的表，没有，也不能定义index属性。 为了方便起见，也可以写成mode="one"之类。\n\n定义表\n\n<table name="tbsingleton" value="singleton" mode="singleton" input="singleton.xlsx"/>\n\n\n1\n\n\n##var    guild_open_level   bag_init_capacity   bag_max_capacity   newbie_tasks\n##type   int                int                 int                list,int\n##       desc1              desc 2              desc 3             desc 4\n         10                 100                 500                10001,10002\n\n * mode=list，key个数为0。 无主键列表模式。\n\n定义表\n\n<table name="tbnotkeylist" value="notkeylist" mode="list" input="not_key_list.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##var    x     y      z        num\n##type   int   long   string   int\n         1     1      aaa      123\n         1     1      bbb      124\n         1     2      aaa      134\n         2     1      aaa      124\n         5     6      xxx      898\n\n * mode=list, 联合多主键模式。 key个数 >= 2。 多个key构成联合唯一主键。使用"+"分割key，表示联合关系。\n\n定义表\n\n<table name="tbunionmultikey" value="unionmultikey" index="key1+key2+key3" input="union_multi_key.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##var    key1   key2   key3     num\n##type   int    long   string   int\n         1      1      aaa      123\n         1      1      bbb      124\n         1      2      aaa      134\n         2      1      aaa      124\n         5      6      xxx      898\n\n * mode="list", 独立多主键模式。key个数>=1， 使用","分割key，表示独立主键模式，即每个key都是独立唯一索引。\n\n定义表\n\n<table name="tbmultikey" value="multikey" index="key1,key2,key3" input="multi_key.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##var    key1   key2   key3     num\n##type   int    long   string   int\n         1      2      aaa      123\n         2      4      bbb      124\n         3      6      ccc      134\n         4      8      ddd      124\n         5      1      eee      898\n\n# table.input 数据源详细介绍\n\ntable的input属性指定了数据源，允许多个，以","分割。支持非常灵活的数据源定义：\n\n * 来自某个excel文件的所有单元薄。例如 xxx.xlsx\n * 来自某个excel文件的指定单元薄。例如 sheet@xxx.xlsx\n * 来自json、xml、lua、yaml、unity scriptable asset文件。例如 xx.json或xx.xml或xx.lua或xx.yml\n * 来自json、xml、lua、yaml、unity scriptable asset子字段。 例如 *items@item_module.json或item.consts@item_module.json之类，其他格式同理\n * 来自目录。目录树下所有文件（包含递归子目录）都会被当作数据源读入，每个文件(excel族例外)对应一个记录。例如 skill_json_dir\n * 以上的随意组合。如 xx.xlsx,sheet2@yy.xls,abc@zz.json,ccc_dir\n\n\n# processor\n\n对于类型，可以附加processor元数据。processor有两个用途：\n\n * 校验器。如 ref,path,range,set,size。\n * 特殊的注解。如sep 等等。\n * tag定义。 除了以上两种以外的名字，都会被当作tag处理。\n\n# 校验器\n\n格式为 processor1=value1#processor2=value2 ...\n\n目前支持的检验器有ref,path,range,set,size，详细请参见文档 数据校验器。\n\n# 特殊注解\n\n用于指示luban的对数据作特殊处理。目前支持有注解器有\n\n * sep 分割器,格式为 sep=字符列表 。只能用于加载excel数据。指示将读入的下一个单元格（或者下一个字符串），用sep中的任意一个字符分割成多个子数据，再将这些子数据作为一个当前类型的数据读入。 一般来说，只有容器类型和bean类型及text这种带有多个原子数据的类型才可能用得到sep。\n\n\n# 定义标签\n\n定义的所有processor=value数据对，都会被维护成 k-v tags字典。 tag目前主要用于自定义代码或者数据的模板生成，当想对某些字段作特殊处理时，tag可以发挥作用。\n\nscriban模板文件中提供了两个函数可以操作tag。\n\n * {{has_tag ctype \'tag_name\'}} 。 检查类型是否有某个tag\n * {{get_tag ctype \'tag_name\'}} 。 返回类型的tag对应的值，如不存在则返回空。\n\n\n# 数据标签\n\n注意与定义标签不同。定义作用于结构，字段，表等等定义上，数据标签作用于记录。详细文档见 tag\n\n目前数据标签有几个用途：\n\n * 记录过滤\n\n为记录添加tag,可用于过滤导出之类的场合。比如，对于标识了dev或者debug的数据，正式发布时，可以用 --output:exclude_tags dev,test 过滤掉这些数据。\n\n * unchecked 标记\n\n标识不对该记录执行校验器。研发中有时候策划批量做了一批临时数据，很多引用都不合法，程序暂时也用不到，导致生成时有大量警告，通过给数据添加unchecked的方式， 可以让检验器不检查这些记录的数据合法性。\n\n\n# 分组导出 group\n\n目前支持两种粒度的分组导出：table级别和bean字段级别。table定义和 bean的field定义都支持group属性。\n\n * table 级别导出 table的group属性如果不指定，则默认对所有group.default=1的分组导出，如果指定，则只对指定分组导出。可以有多个分组。\n\nxml格式定义如下\n\n<table name="tbclothdisplay" value="clothdisplay" group="c" input="test/cloth.xlsx"/> 此表只属于c分组\n<table name="tbitem" value="item" group="c,s" input="test/item.xlsx"/> 此表属于c,s分组\n<table name="tbwidget" value="window" group="e" input="test/widget.xlsx"/> 此表只属于e分组\n\n\n1\n2\n3\n\n\nxlsx格式定义如下\n\n##var   full_name        value_type     input              group   ...\n        tbclothdisplay   clothdisplay   cloth/cloth.xlsx   c       \n        tbitem           item           item/item.xlsx     c,s     \n        tbwidget         widget         ui/widget.xlsx     e       \n\nluban.client使用 -s client 参数时，只导出tbdemogroup_c和tbdemogroup_cs表，而tbdemogroup_e表不会导出。\n\n * bean的field级别导出\n\n导出配置时，bean中某个field根据分组导出。\n\nxml定义格式如下：\n\n\n<bean name="demogroup">\n <var name="id" type="int"/>\n <var name="x1" type="int"/> 默认属于所有分组c,s,e\n <var name="x2" type="int" group="c"/>属于 c 分组\n <var name="x3" type="int" group="s"/>属于s分组\n <var name="x4" type="int" group="c,s"/>属于c,s分组\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n如果在 __bean__.xlsx 中定义bean，格式如下\n\n##var   full_name   sep   comment   field.name   fields.type   field.group   ...\n        demogroup                   id           int                         \n                                    x1           int                         \n                                    x2           int           c             \n                                    x3           int           s             \n                                    x4           int           c,s           \n\n如果直接在数据表里定义的bean结构，格式如下\n\n##var    id    x1    x2            x3            x4\n##type   int   int   int&group=c   int&group=s   int&group=c,s\n         1     2     2             2             2\n\n当 -s client 时， id、x1、x2、x4字段导出。 当 -s server 时， id、x1、x3、x4字段导出。\n\n\n# 外部类型\n\nenum和bean类型都支持支持外部类型，可以将某个自定义类型，映射到现成的一个类。目前只支持c#语言的外部类型，其他语言需要时再扩展。\n\n如你可以定义一个audiotype，映射到unityengine.audiotype。\n\n如你可以定义一个color类，映射到unityengine.color类。\n\n定义如下\n\n\n外部枚举定义\n\n    <enum name="audiotype">\n        <var name="unknown" value="0"/>\n        <var name="acc" value="1"/>\n        <var name="aiff" value="2"/>\n    </enum>\n    \n    <externaltype name="unity_audio_type" origin_type_name="test.audiotype">\n        <mapper lan="cs" selector="unity_cs">\n            <target_type_name>unityengine.audiotype</target_type_name>\n        </mapper>\n    </externaltype>\n\n外部class定义\n\n    <bean name="color" sep=",">\n        <var name="r" type="float"/>\n        <var name="g" type="float"/>\n        <var name="b" type="float"/>\n        <var name="a" type="float"/>\n    </bean>\n    <externaltype name="unity_color" origin_type_name="test.color">\n        <mapper lan="cs" selector="unity_cs">\n            <target_type_name>unityengine.color</target_type_name>\n            <create_external_object_function>externaltypeutil.newfromcfgcolor</create_external_object_function>\n        </mapper>\n    </externaltype>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n语法介绍：\n\n * externaltype.name。必选。外部类型名。这个类型名并不是真实的名字，类似id的概念。需要所有定义文件内唯一。它不会自动加上模块名。\n * externaltype.origin_type_name。 必选。被映射的类型全名。\n * externaltype.mapper 映射器。 由于对于一个类，有些语言需要映射，有些语言可能不需要映射，另外，每个语言的映射参数都不一样。所以可能会有多个。\n * mapper.lan 。必选。只对该语言生效。需要与selector配合形成唯一mapper。\n * mapper.selector。 必选。 只对该selector生成。需要与lan配合形成唯一mapper。\n * mapper.target_type_name 必选。映射的外部类型全名。\n * mapper.create_external_object_function 映射外部enum时可选，外部class时必选。转换函数名。需要提供一个函数，用来将配置类对象转换到外部类对象。\n\n使用示例，可参见示例项目 csharp_unity_bin_externaltypes\n\n\n# 类型\n\nluban有非常完备的类型系统，可以轻松表达任意复杂的数据结构。\n\n# 原生类型\n\n * bool\n * byte(int8)\n * short(int16)\n * fshort\n * int(int32)\n * fint\n * long(int64)\n * flong\n * float(float32)\n * double(float64)\n * string\n\n# bytes 类型\n\n即字节数组类型。在c#中对应byte[]\n\n# vector2,vector2,vector3\n\n内置的向量类型。 在c#语言中对应system.numerics.vector{2,3,4}，或 unityengine.vector{2,3,4}。\n\n * vector2 。 float x, y;\n * vector3 。 float x, y, z;\n * vector4 。 float x, y, z, w;\n\n# datetime (time) 类型\n\n时间类型。导出数据后，会转换为int类型1970-1-1 0:0:0 以来的utc时间秒数。\n\n由于策划填的都是 墙上时间（时期跟时区相关），所以导出时需要指定 datetime所对应的时区，不指定则默认使用东8区时区。 参见 luban 命令行 中关于时区相关的参数介绍。\n\n# text\n\n本地化文本类型。它由key和text两个值构成。\n\n# 容器类型\n\n * array 。数组类型，定义方式为 "array,element_type"。 对应c#类型为 element_type[]之类。 例如 array,int;array,task。\n * list。 列表类型。定义方式为 "list,element_type"。对应c#类型为list<element_type>。例如 list,int;list,item。\n * set。 集合类型。 定义方式为 "set,element_type"。 对应c#类型为 hashset<element_type>。例如 set,int;set,string。\n * map。 字典类型。 定义方式为 "map,key_type,value_type"。对应c#类型为 dictionary<key_type, value_type>。例如 map,int,int;map,string,item;\n\narray和list的element_type可以为除了容器类型以外的任意类型，不支持容器类型的嵌套，但你可以通过定义一个bean，包含容器字段。然后再定义list,bean的方式 间接实现容器嵌套。\n\nset的element_type必须是原生类型，datetime, 枚举类型，不能是bean类型。\n\nmap的key类型的约束与set的element_type相关， value类型约束与 array的element_type相同。\n\n# 可空类型\n\n对应c#里的可空变量的语义，如int?, bool? colortype? 。 除了容器以外的类型都可以定义相应的可空类型。\n\n# enum 类型\n\n枚举类型。\n\n<enum name="color">\n    <var name="red" alias="红" value="1"/>\n    <var name="green" alias="绿" value="2"/>\n   <var name="blue" alias="蓝" value="3"/>\n</enum>\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n# bean 类型\n\n结构定义。bean包含两种，普通bean结构和多态bean结构。\n\n * 普通bean结构\n\n<bean name="item" value_type="1" alias="道具">\n    <var name="id" id="1" type="int" ref="item.tbitem" tags="k1=v1#k2=v2"/>\n    <var name="icon" type="string" path="unity" comment="图标" group="c"/>\n    <var name="num" type="int" group="c,s"/>\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n\n * 多态 bean 结构\n\n\n<bean name="shape">\n  <var name="command_var1" type="int"/>\n   \n  <bean name="shape2d">\n     <var name="command_2d_var" type="string"/>\n      <bean name="circle">\n         <var name="radius" type="float"/>\n      </bean>\n      <bean name="rectangle">\n         <var name="width" type="float"/>\n         <var name="height" type="float"/>\n     </bean>\n  </bean>\n\n  <bean name="line">\n     <var name="start_pos" type="vector2"/>\n     <var name="direction" type="vector2"/>\n  </bean>\n</bean>\n\n或者在外面定义继承\n\n<bean name="triangle" parent="shape">\n  <var name="a" type="float"/>\n  <var name="b" type="float"/>\n  <var name="c" type="float"/>\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# excel 子定义文件\n\nexcel子定义文件与xml定义文件几乎完全等价，对于luban来说，只是从哪种格式的文件中解析读取定义的区别。\n\n请参见 luban_examples/designerconfigs目录下的 __enums__.xlsx, __beans__.xlsx, __tables__.xlsx。\n\nexcel子定义文件与xml子定义文件几乎完全等价（除了不能定义外部类的映射信息即externaltype），对luban而言它们的区别仅仅是定义的格式不同，但提供的元数据是等价的。\n\n===这儿仅介绍excel定义文件的格式，具体语义请参照xml子定义文件中相关文档。==\n\nxml子定义文件可以定义任意结构，但excel不适合在一个文件里定义各种不同结构，因此excel子定义文件分类型，每个类型只定义一种结构。每个类型可以有0到多个定义文件（多个importexcel语句，而不是name里包含多个文件）。\n\n由于大多数使用excel文件来定义配置的使用者，为了方便起见，希望定义excel文件在配置数据目录下，而不是跟其他定义一样，在配置定义目录下，特地作了特殊处理，以%input_data_dir%为相对目录读入excel定义文件。\n\n有三种类型的定义文件:\n\n * enum\n * bean\n * table\n\n\n<importexcel name="__enums__.xlsx" type="enum"/>\n<importexcel name="__beans__.xlsx" type="bean"/>\n<importexcel name="__tables__.xlsx" type="table"/>\n\n\n\n1\n2\n3\n4\n5\n\n\n\n# enum 定义文件\n\n定义多个enum结构。\n\n格式如下\n\n##var   full_name           flags   unique   comment   tags   *items\n##+                                                           name         alias   value        comment   tags\n        test.etestquality   false   true                      a            白       1            最差品质      \n                                                              b            黑       1            最差品质      \n                                                              c            蓝       1            中等品质      \n                                                              d            红       1            最好品质      \n        test.accessflag     true    true                      write                1                      \n                                                              read                 2                      \n                                                              truncate             4                      \n                                                              new                  8                      \n                                                              read_write           read|write             \n\n\n# bean 定义文件\n\n定义多个bean结构。 不支持多态bean定义。\n\n格式如下\n\n##var   full_name        sep   comment   tags   *fields\n##+                                             name   type             group   comment   tags\n        test.demobean1                          x1     int                                \n                                                x2     string                             \n                                                x3     float                              \n                                                x4     bool                               \n        test.demobean2                          x1     int                                \n                                                x3     list,float                         \n                                                x4     test.demobean1                     \n\n\n# table 定义文件\n\n定义配置表列表，只有出现在此表中的表才会导出。\n\nvalue_type为表记录类型类,必须是bean结构。value_type的类型名中如果不包含模块名，则取与full_name相同的命名空间，如果包含模块名，则取此模块名。例如，item的模块名为 item，demo.bag的模块名为demo。\n\n格式如下\n\n##var   full_name     value_type   define_from_file   input       index   mode   group   comment   tags   patch_input   output\n        item.tbitem   item         true               item.xlsx                                                         \n        test.tbbag    demo.bag     true               bag.xlsx                                                          ',charsets:{cjk:!0}},{title:"Editor支持",frontmatter:{},regularPath:"/editor.html",relativePath:"editor.md",key:"v-21a1da36",path:"/editor.html",headers:[{level:2,title:"生成相关参数",slug:"生成相关参数",normalizedTitle:"生成相关参数",charIndex:185},{level:2,title:"生成",slug:"生成",normalizedTitle:"生成",charIndex:105},{level:3,title:"Unity",slug:"unity",normalizedTitle:"unity",charIndex:663},{level:3,title:"UE4",slug:"ue4",normalizedTitle:"ue4",charIndex:1069}],lastUpdated:"2/26/2022, 11:16:05 AM",lastUpdatedTimestamp:1645845365e3,headersStr:"生成相关参数 生成 Unity UE4",content:'# Editor支持\n\nGamePlay相关功能经常有自定义编辑器的需求，而自定义编辑器的数据往往以记录为单位，数据结构较为复杂，每个记录保存为单独的json文件。luban支持这类编辑器工作流。\n\nluban生成编辑器读写记录的json文件所用的代码，编辑器开发者只需使用Load和Save函数就能加载和保存记录为符合Luban解析器配置规则的json文件。\n\n\n# 生成相关参数\n\n生成的editor代码类的默认命名空间为 "editor." + topmodule 。可以通过root定义文件中的option \'editor.topmodule\'来修改这个默认值，示例如\n\n<root>\n    <topmodule name="cfg"/>\n    <option name="editor.topmodule" value="MyEditorConfig"/>\n</root>\n\n\n1\n2\n3\n4\n\n\n\n# 生成\n\nluban为编辑器生成的代码跟为项目运行时使用的代码很不一样，有以下几个关键区别\n\n * 不会生成Table代码。 因为编辑器一般以记录为单位操作数据，没必要生成Table加载和保存的代码。\n * 不会生成Tables代码。 因为没这个需要。\n * 为enum额外生成生成元数据xxx_Metadata类，定义了所有enum枚举项的元数据\n * 生成的bean代码中包含了ToJson和FromJson函数\n * datetime类型对应string类型,text对应EditorText类\n\n\n# Unity\n\n取 --gen_types code_cs_unity_editor_json , 生成即可。\n\n可参考示例项目Csharp_Unity_Editor_json\n\n使用示例如下\n\n\n// 加载\nvar skill = new editor.skill.Skill();\nskill.LoadJsonFile("10001.json");\nUnityEngine.Debug.Log("skill id:{0}, name:{1}", skill.Id, skill.Name);\n\n\n// 保存\nvar skill = new editor.skill.Skill();\nskill.Id = 10001;\nskill.Name = "attack";\nskill.SaveJsonFile("10001.json");\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# UE4\n\n取 --gen_types code_cpp_ue_editor_json。\n\n目前还未严谨测试。等有实际需求时再测试。',normalizedContent:'# editor支持\n\ngameplay相关功能经常有自定义编辑器的需求，而自定义编辑器的数据往往以记录为单位，数据结构较为复杂，每个记录保存为单独的json文件。luban支持这类编辑器工作流。\n\nluban生成编辑器读写记录的json文件所用的代码，编辑器开发者只需使用load和save函数就能加载和保存记录为符合luban解析器配置规则的json文件。\n\n\n# 生成相关参数\n\n生成的editor代码类的默认命名空间为 "editor." + topmodule 。可以通过root定义文件中的option \'editor.topmodule\'来修改这个默认值，示例如\n\n<root>\n    <topmodule name="cfg"/>\n    <option name="editor.topmodule" value="myeditorconfig"/>\n</root>\n\n\n1\n2\n3\n4\n\n\n\n# 生成\n\nluban为编辑器生成的代码跟为项目运行时使用的代码很不一样，有以下几个关键区别\n\n * 不会生成table代码。 因为编辑器一般以记录为单位操作数据，没必要生成table加载和保存的代码。\n * 不会生成tables代码。 因为没这个需要。\n * 为enum额外生成生成元数据xxx_metadata类，定义了所有enum枚举项的元数据\n * 生成的bean代码中包含了tojson和fromjson函数\n * datetime类型对应string类型,text对应editortext类\n\n\n# unity\n\n取 --gen_types code_cs_unity_editor_json , 生成即可。\n\n可参考示例项目csharp_unity_editor_json\n\n使用示例如下\n\n\n// 加载\nvar skill = new editor.skill.skill();\nskill.loadjsonfile("10001.json");\nunityengine.debug.log("skill id:{0}, name:{1}", skill.id, skill.name);\n\n\n// 保存\nvar skill = new editor.skill.skill();\nskill.id = 10001;\nskill.name = "attack";\nskill.savejsonfile("10001.json");\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# ue4\n\n取 --gen_types code_cpp_ue_editor_json。\n\n目前还未严谨测试。等有实际需求时再测试。',charsets:{cjk:!0}},{title:"如何获得此工具",frontmatter:{},regularPath:"/excel2textdiff.html",relativePath:"excel2textdiff.md",key:"v-615799f6",path:"/excel2textdiff.html",headers:[{level:3,title:"如何获得此工具",slug:"如何获得此工具",normalizedTitle:"如何获得此工具",charIndex:2},{level:3,title:"如何设置TortoiseGit或者GortoiseSVN使用此工具来diff xlsx文件",slug:"如何设置tortoisegit或者gortoisesvn使用此工具来diff-xlsx文件",normalizedTitle:"如何设置tortoisegit或者gortoisesvn使用此工具来diff xlsx文件",charIndex:95}],lastUpdated:"12/3/2021, 3:11:18 PM",lastUpdatedTimestamp:1638515478e3,headersStr:"如何获得此工具 如何设置TortoiseGit或者GortoiseSVN使用此工具来diff xlsx文件",content:"# 如何获得此工具\n\n从 Excel2TextDiff项目 的 release中下载， 或者从 luban_examples项目的Tools/Excel2TextDiff目录下载。\n\n\n# 如何设置TortoiseGit或者GortoiseSVN使用此工具来diff xlsx文件\n\n参见下图\n\n",normalizedContent:"# 如何获得此工具\n\n从 excel2textdiff项目 的 release中下载， 或者从 luban_examples项目的tools/excel2textdiff目录下载。\n\n\n# 如何设置tortoisegit或者gortoisesvn使用此工具来diff xlsx文件\n\n参见下图\n\n",charsets:{cjk:!0}},{title:"excel格式介绍",frontmatter:{},regularPath:"/excel.html",relativePath:"excel.md",key:"v-04ed35c4",path:"/excel.html",headers:[{level:2,title:"基础",slug:"基础",normalizedTitle:"基础",charIndex:16},{level:3,title:"创建一个普通的xlsx 配置表",slug:"创建一个普通的xlsx-配置表",normalizedTitle:"创建一个普通的xlsx 配置表",charIndex:23},{level:3,title:"excel 标题头行的介绍",slug:"excel-标题头行的介绍",normalizedTitle:"excel 标题头行的介绍",charIndex:484},{level:3,title:"excel文件 读取规则",slug:"excel文件-读取规则",normalizedTitle:"excel文件 读取规则",charIndex:1511},{level:3,title:"支持的excel文件族",slug:"支持的excel文件族",normalizedTitle:"支持的excel文件族",charIndex:1631},{level:3,title:"支持非GKB和UTF-8编码的csv文件",slug:"支持非gkb和utf-8编码的csv文件",normalizedTitle:"支持非gkb和utf-8编码的csv文件",charIndex:1696},{level:3,title:"灵活的配置文件组织形式",slug:"灵活的配置文件组织形式",normalizedTitle:"灵活的配置文件组织形式",charIndex:1744},{level:3,title:"单元格留空取默认值",slug:"单元格留空取默认值",normalizedTitle:"单元格留空取默认值",charIndex:1949},{level:2,title:"数据格式",slug:"数据格式",normalizedTitle:"数据格式",charIndex:2087},{level:3,title:"限定列格式与流式格式",slug:"限定列格式与流式格式",normalizedTitle:"限定列格式与流式格式",charIndex:2096},{level:3,title:"限定列格式介绍",slug:"限定列格式介绍",normalizedTitle:"限定列格式介绍",charIndex:2872},{level:3,title:"流式格式介绍",slug:"流式格式介绍",normalizedTitle:"流式格式介绍",charIndex:3703},{level:3,title:"sep 介绍",slug:"sep-介绍",normalizedTitle:"sep 介绍",charIndex:6341},{level:3,title:"原生数据类型",slug:"原生数据类型",normalizedTitle:"原生数据类型",charIndex:6460},{level:3,title:"text 类型",slug:"text-类型",normalizedTitle:"text 类型",charIndex:7009},{level:3,title:"datetime 类型",slug:"datetime-类型",normalizedTitle:"datetime 类型",charIndex:7359},{level:3,title:"可空变量",slug:"可空变量",normalizedTitle:"可空变量",charIndex:2e3},{level:3,title:"向量类型 vector2,vector3,vector4",slug:"向量类型-vector2-vector3-vector4",normalizedTitle:"向量类型 vector2,vector3,vector4",charIndex:8088},{level:3,title:"原生数据列表",slug:"原生数据列表",normalizedTitle:"原生数据列表",charIndex:8358},{level:3,title:"枚举",slug:"枚举",normalizedTitle:"枚举",charIndex:8876},{level:3,title:"嵌套子结构",slug:"嵌套子结构",normalizedTitle:"嵌套子结构",charIndex:9757},{level:3,title:"简单结构列表",slug:"简单结构列表",normalizedTitle:"简单结构列表",charIndex:10492},{level:3,title:"多行结构列表",slug:"多行结构列表",normalizedTitle:"多行结构列表",charIndex:12106},{level:3,title:"列表表 （无主键）",slug:"列表表-无主键",normalizedTitle:"列表表 （无主键）",charIndex:12996},{level:3,title:"多主键表（联合索引）",slug:"多主键表-联合索引",normalizedTitle:"多主键表（联合索引）",charIndex:13408},{level:3,title:"多主键表（独立索引）",slug:"多主键表-独立索引",normalizedTitle:"多主键表（独立索引）",charIndex:13834},{level:3,title:"单例表",slug:"单例表",normalizedTitle:"单例表",charIndex:14258},{level:3,title:"纵表",slug:"纵表",normalizedTitle:"纵表",charIndex:14630},{level:3,title:"引用检查",slug:"引用检查",normalizedTitle:"引用检查",charIndex:14982},{level:3,title:"资源检查",slug:"资源检查",normalizedTitle:"资源检查",charIndex:15782},{level:3,title:"分组导出",slug:"分组导出",normalizedTitle:"分组导出",charIndex:16120},{level:3,title:"数据标签过滤",slug:"数据标签过滤",normalizedTitle:"数据标签过滤",charIndex:16210},{level:3,title:"多行记录填写",slug:"多行记录填写",normalizedTitle:"多行记录填写",charIndex:16612},{level:3,title:"层级标题头 (hierarchy title)",slug:"层级标题头-hierarchy-title",normalizedTitle:"层级标题头 (hierarchy title)",charIndex:17519},{level:3,title:"多态结构",slug:"多态结构",normalizedTitle:"多态结构",charIndex:19374},{level:3,title:"字段默认值",slug:"字段默认值",normalizedTitle:"字段默认值",charIndex:20143},{level:3,title:"常量别名",slug:"常量别名",normalizedTitle:"常量别名",charIndex:20427},{level:3,title:"单元格取非0默认值",slug:"单元格取非0默认值",normalizedTitle:"单元格取非0默认值",charIndex:20866}],lastUpdated:"3/28/2022, 8:26:28 PM",lastUpdatedTimestamp:1648470388e3,headersStr:"基础 创建一个普通的xlsx 配置表 excel 标题头行的介绍 excel文件 读取规则 支持的excel文件族 支持非GKB和UTF-8编码的csv文件 灵活的配置文件组织形式 单元格留空取默认值 数据格式 限定列格式与流式格式 限定列格式介绍 流式格式介绍 sep 介绍 原生数据类型 text 类型 datetime 类型 可空变量 向量类型 vector2,vector3,vector4 原生数据列表 枚举 嵌套子结构 简单结构列表 多行结构列表 列表表 （无主键） 多主键表（联合索引） 多主键表（独立索引） 单例表 纵表 引用检查 资源检查 分组导出 数据标签过滤 多行记录填写 层级标题头 (hierarchy title) 多态结构 字段默认值 常量别名 单元格取非0默认值",content:'# excel格式介绍\n\n\n# 基础\n\n\n# 创建一个普通的xlsx 配置表\n\n * 假设你要创建的配置为装备表.\n * 在MyConfigs/Datas 目录下创建 equip.xlsx（实践中推荐按模块创建子目录，在模块目录创建配置，便于维护管理）, 其内容如下\n\n##VAR    ID    NAME     ATTR\n##type   int   string   int\n         1     equip1   10\n         2     equip2   15\n\n * 在 MyConfigs/Datas/__tables__.xlsx 里新增一行。 有些不相关列被忽略了\n\n##VAR   FULL_NAME     VALUE_TYPE   DEFINE_FROM_EXCEL   INPUT      ...\n        demo.TbItem   Item         true                物品表.xlsx   \n\n * 至此，完成添加新表工具。 运行 check.bat 检查是否成功生成！\n\n\n# excel 标题头行的介绍\n\n * 第1列单元格为 ##var 表示这行是字段定义行\n * 第1列单元格为 ##type 表示这行是 类型定义行\n * 第1列单元格以##开头 表示这是注释行，如果有多个##行，默认以第一个行作为代码中字段的注释，你可以通过##comment 显式指定某行为代码注释行。\n * 填写多级字段名行时，以##var表示这是次级字段行\n * 你可以随意调整##var和##type之类的行的顺序，但注意 如果第一行是注释行，必须使用##comment，而不是##。否则会把第一行当字段名行而出错（这是出于兼容性，早期强制第一行是字段名行，允许只以##开头）\n\n##var       id    name     stages\n##var                      id      name     desc          location   item_id   num\n##type      int   string   list,Stage\n##          id    desc1    desc1   desc2    desc3         desc4      desc5     desc6\n##comment   id    名字       注释1     desc2    desc3         desc4      desc5     desc6\n            1     task1    1       stage1   stage desc1   1,2,3      1001      1\n                           2       stage2   stage desc2   1,2,3      1001      1\n                           3       stage3   stage desc3   1,2,3      1002      1\n            2     task2    1       stage1   stage desc1   1,2,3      1001      1\n                           2       stage2   stage desc2   1,2,3      1002      1\n\n\n# excel文件 读取规则\n\n * 如果未指定sheet,则默认会读取所有sheet\n * 可以用 sheet@xxx.xlsx 指定只读入这个sheet数据\n * 如果A1单元格数据不以##开头，则会被当作非数据sheet，被忽略\n\n\n# 支持的excel文件族\n\n支持 xls、 xlsx、 xlm、 xlmx、csv 。基本上excel能打开的都可以读取。\n\n\n# 支持非GKB和UTF-8编码的csv文件\n\nluban会智能猜测出它的编码，正确处理。\n\n\n# 灵活的配置文件组织形式\n\n * 可以几个表都放到一个xlsx中，每个表占一个sheet。 只需要为每个表的input指定为该单元薄即可，如 input="xxx@item/test/abs.xlsx"。\n * 可以一个表拆分为几个xlsx。 如 input="item/a.xlsx,bag/b.xlsx,c.xlsx"。\n * 可以一个读入一个目录下的所有xlsx。 如 input="bag" 。\n\n\n# 单元格留空取默认值\n\n除了bean以外的数据，都可以留空。自动取默认值。注意非空字段的默认值是初始值，可空变量的默认值为null。例如int默认值是0，但int?的默认值是null。字符串string的默认值是长度为0的空白字符串，而string?的默认为null。\n\n\n# 数据格式\n\n\n# 限定列格式与流式格式\n\n如果某个字段通过标题头或者多级标题头限定了列范围，它的解析格式为限定列格式。\n\n如果某个字段只是某个限定列格式的字段的某一个子数据，它的解析格式为流式格式。\n\n示例如下。 标注@的列为 限定列格式， 标注~的列为流式格式。\n\n<bean name="Item">\n   <var name="item_id" type="int"/>\n   <var name="num" type="int"/>\n   <var name="desc" type="string">\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n##var    id    name     item                     items\n##type   int   string   Item                     list,Item\n##var                   item_id   num   desc                                                    \n         @     @        @         @     @        ~      ~   ~       ~      ~   ~        ~   ~   ~\n         1     xxxx     1001      1     item 1   2001   1   item2                               \n         2     xxxx     1002      3     item 1   2001   1   item2   2002   2   item 2           \n\n\n# 限定列格式介绍\n\n通过标题行及多级标题行，可以精确限定某个数据在某些列范围内。\n\n对于只有一个原子值的简单类型数据，限定列格式下，由于能够非常清晰知道它的值必然来自某一单元格，所以它支持默认值语义，即如果单元格为空，值取默认值，例如 int类型默认值为0，int?默认值为null。\n\n限定列格式下，多态bean类型需要用 $type 列来指定具体类型名，可空bean类型也需要用$type列来指示是有效bean还是空bean。\n\n如果最低层的限定列的类型为容器或者bean，由于限定列只限定了该数据整体范围，但未限定子数据的范围，因此读取子数据的格式为流式格式，即按顺序读入每个子数据。\n\n综合示例如下：\n\n##var    id    shape                                 item\n##type   int   Shape                                 Item\n##var          $type       radius   width   height   $type   item_id   num   desc\n         1     Circle      10                        Item    1001      1     item 1\n         2     Rectangle            10      20       {}      1001      2     item 1\n         3     圆           10                        null                    \n         4     Circle      10                                                \n\n\n# 流式格式介绍\n\n对于没有具体限定列范围的子数据，使用流式格式（也只有这种办法），按顺序读入子数据。\n\n由于流式格式无法区分 默认单元格和空白忽略单元格，因此流格式下，不支持默认值语义，会忽略所有空白单元格。 进而对于默认值必须填上有效值默认值来表示数据，而不能留空来表达。\n\n流式格式下的默认值填写规则如下\n\n * bool 默认值为 false\n * int,float 之类的默认值为 0\n * string 的默认值为""\n * 可空变量，如int? 的空值为 null\n * 容器变量，需要有右大括号 \'}\' 来表示空值(用\'}\'表示容器终止)\n\n如下图，item字段为Item类型，包括多个子数据，但没为它的子字段添加子列限定，因此使用流式格式解析它。\n\n * id=1的列，所有字段能够正常识别\n * id=2的列，第2个单元格为空，被忽略，因此试图将"item 1"当作num字段解析，抛出格式错误的异常。\n * id=3的列，第3个单元格为空，被忽略，尽管desc字段是string值，能接受空白值，也会抛出 数据缺失的异常。\n\n记录2和3的正确填法如4和5。\n\n##var    id    name     item\n##type   int   string   Item\n         @     @        ~      ~   ~\n         1     xxxx     1001   1   item 1\n         2     xxxx     1001       item 1\n         3     xxxx     1001   1   \n         2     xxxx     1001   0   item 1\n         3     xxxx     1001   1   ""\n\n流式格式下，各个类型必须填写非空白值，规则如下\n\n * bool false,true\n * int,float 之类 有效整数值\n * string 用""表示长度为0的字符串，用其他非值表示值本身\n * enum 非空有效值\n * bean 用流式格式按顺序读入每个字段\n * 多态bean类型 先读入一个字符串，可以是具体的子类名或者子类别名，然后再根据子类名，流式读入该类型的每个字段。\n * 可空bean类型 先读入一个字符串，如果是bean的类型名或者\'{}\'，则流格式读入该类型的所有字段；如果为null，则表示空，结束读取；其他情况则抛出解析失败的异常。\n * array,list,set 如果流结束或者下一个读入的为\'}\'，则读取结束，否则用流格式读入element_type，如此循环。\n * map 如果流结束或者下一个读入的为\'}\',则读取结束，否则递归读入key_type和value_type，如此循环。\n\n以下是一个非常复杂的bean的流式读取示例\n\n\n<bean name="Foo">\n  <var name="x" type="int"/>\n  <var name="y" type="int"/>\n</bean>\n\n<bean name="SubList">\n  <var name="a" type="int"/>\n  <var name="b" type="list,string"/>\n  <var name="c" type="bool"/>\n</bean>\n\n<bean name="StreamDemo">\n  <var name="x1" type="int"/>\n  <var name="x2" type="Foo"/>\n  <var name="x2_1" type="string"/>\n  <var name="x2_2" type="list,int"/>\n  <var name="x3_1" type="string"/>\n  <var name="x4" type="list,Foo"/>\n  <var name="x4_1" type="string"/>\n  <var name="x5" type="SubList"/>\n  <var name="x5_1" type="string"/>\n  <var name="x7" type="list,SubList"/>\n  <var name="x7_1" type="string"/>\n  <var name="x8_0" type="map,int,int"/>\n  <var name="x8" type="int">\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n##var    id    stream_demo\n##type   int   StreamDemo\n##             x1   x2        x2_1   x2_2          x2_2 end flag   x3_1   x4[0]     x4[1]     x4[2]     x4 end flag   x4_1   x5.a   x5.b             x5.c   x5_1   x7[0]                           x7[1]                            x7 end flag   x7_1   x8_0                x8_0 end flag   x8\n         1     10   20   21   x2_1   1,2   3   4   }               x3_1   11   12   21   22   32   32   }             x4_1   100    aaa   bbbb   }   true   x5_1   100   aaa1   bbbb1   }   true   200   aaa2   bbbb2   }   false   }             x7_1   1   100   2   200   }               1234\n\n\n# sep 介绍\n\n流式格式中，对于包含多个数据的复合类型数据，有时候希望紧凑地在一个单元格内填写它的多个子数据，使用sep可以实现此目的。\n\n由于sep非常常见，而且用法复杂多样，因此在单独的文档 excel sep格式介绍中介绍\n\n\n# 原生数据类型\n\n支持 bool,int,float,string,vector2,vector3,vector4 等等类型，它们的填写跟常规认知一致。\n\n##VAR    X1      X3      X4      X5      X6      X7       S1       V2        V3        V4\n##type   bool    short   int     long    float   double   string   vector2   vector3   vector4\n##       desc1   id      desc4   desc5   desc6   desc7    desc1    desc2     desc3     desc4\n         false   10      100     1000    1.23    1.2345   hello    1,2       1,2,3     1,2,3,4\n         true    20      200     1000    1.23    1.2345   world    1,2       1,2,3     1,2,3,4\n\n\n# text 类型\n\n该类型数据包含两个字段, key和text， 其中 key 可以重复出现，但要求text完全相同，否则报错。这么设计是为了防止意外写重了key。注意：不允许key为空而text不为空\n\n如果想填空的本地化字符串， key和text完全留空即可，工具会特殊对待，不会加入 key集合。\n\ntext的key和text字段都是string类型，因此在连续单元格或者sep产生的连续数据流模式中，同样要遵循用""来表达空白字符串的规则。\n\n##VAR    ID    X\n##type   int   text#sep=,\n         1     /demo/key1,aaaa\n         2     /demo/key2,bbbb\n         3     \n\n\n# datetime 类型\n\n时间是常用的数据类型。Luban 特地提供了支持。\n\n * 以纯字符串方式填写，填写格式为 以下 4 种。\n   * yyyy-mm-dd hh:mm:ss 如 1999-08-08 01:30:29\n   * yyyy-mm-dd hh:mm 如 2000-08-07 07:40\n   * yyyy-mm-dd hh 如 2001-09-05 07\n   * yyyy-mm-dd 如 2003-04-05\n * 以 excel内置的时间格式填写\n\n##VAR    ID    X\n##type   int   datetime\n         1     1999-09-09 01:02:03\n         2     1999-09-09 01:02\n         3     1999-09-09 01\n         4     1999-09-09\n\n\n# 可空变量\n\n有时候会有一种变量，我们希望它 功能生效时填一个有效值，功能不生效里，用一个值来表示。 例如 int 类型，常常拿 0 或者-1 作无效值常量。 但有时候，0 或-1 也是有效值时，这种做法就不生效了。或者说 项目组内 有时候拿 0，有时候拿-1 作无效值标记，很不统一。我们借鉴 sql 及 c#,引入 可空值概念，用 null 表达空值。\n\n##VAR    ID    X      COLOR\n##type   int   int?   QualityColor?\n         1     1      A\n         2     null   B\n         3     2      null\n\n\n# 向量类型 vector2,vector3,vector4\n\nvector3 有三个字段 float x, float y, float z, 适合用于表示坐标之类的数据。\n\n##VAR    ID    X2        X3         X4\n##type   int   vector2   vector3    vector4\n         1     1,2       11,22,33   12,33,44,55\n         2     2,3       22,44,55   6.5,4.7,8.9\n\n\n# 原生数据列表\n\n##var    id    arr1                arr2            arr3                  arr4\n##type   int   (array#sep=;),int   list,int        (list#sep=|),string   list,string\n##       id    desc1               desc2           desc3                 desc4\n         1     1;2;3               1   2           xx|yy                 xxx   zzz   \n         2     2;4                 3   4   5       aaaa|bbbb|cccc        aaa   bbb   ccc\n         3     2;4;6               3   4   5   6   aaaa|bbbb|cccc        aaa   bbb   ccc\n\n\n# 枚举\n\n以枚举名或者别名或者值的方式填写枚举值。\n\n在xml中定义\n\n<enum name="ItemQuality">\n <var name="WHITE" alias="白" value="0"/>\n <var name="GREEN" alias="绿" value="1"/>\n <var name="RED" alias="红" value="2"/>\n</enum>\n\n\n1\n2\n3\n4\n5\n\n\n或者在 __enums__.xlsx 中 定义\n\n##var   full_name     flags   unique   comment   tags   *items\n##var                                                   name    alias   value   comment   tags\n        ItemQuality   false   true                      WHITE   白       0                 \n                                                        GREEN   绿       1                 \n                                                        RED     红       2                 \n\n数据表如下\n\n##VAR    ID    QUALITY       QUALITY2\n##type   int   ItemQuality   ItemQuality\n         1     白             RED\n         2     GREEN         红\n         3     RED           WHITE\n         4     1             0\n\n\n# 嵌套子结构\n\n经常会碰到，某个字段是结构，尤其这个结构在很多配置里都会复用。\n\n假设任务中包含一个 奖励信息 字段\n\n在xml中定义\n\n<bean name="Reward">\n <var name="item_id" type="int"/>\n <var name="count" type="int"/>\n <var name="desc" type="string">\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n或者在 __beans__.xlsx 里定义\n\n##var   full_name   sep   comment   fields\n##var                               name      type     group   comment   tags\n        Reward                      item_id   int              道具id      \n                                    count     int              个数        \n                                    desc      string           描述        \n\n数据表如下\n\n##var    id    reward\n##type   int   Reward\n##       id    道具id    个数    描述\n         1     item1   1     desc1\n         2     item2   100   desc2\n\n\n# 简单结构列表\n\n某个字段为结构列表的情形也很常见，比如说奖励信息列表包含多个奖励信息，每个奖励都有多个字段。\n\n假设礼包中包含一个道具信息列表字段。支持3种填写模式，具体选择由策划灵活决定。\n\n * 所有字段完全展开，每个单元格填一个元素。缺点是占用的列较多。如items1字段。\n * 每个结构占据一个单元格，使用sep分割结构子字段。如items2字段。\n * 整个列表占据一个单元格，使用sep分割列表及结构子字段。如items3字段。\n\nxml中定义如下\n\n<bean name="Reward">\n <var name="item_id" type="int"/>\n <var name="count" type="int"/>\n <var name="desc" type="string">\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n或者也可以在__beans__.xlsx中定义，此处不再赘述，==后面的涉及到结构定义的例子都只给xml的示例==。\n\n数据表如下：\n\n##var    id    rewards1                                rewards2                                        rewards3\n##type   int   list,Reward                             list,Reward#sep=,                               (list#sep=|),Reward#sep=,\n##       id    reward list desc1                       reward list desc2                               reward list desc3\n         1     item1   1   desc1   item2   2   desc2   item1,1,desc1   item2,2,desc2   item3,3,desc3   item1,1,desc1|item2,2,desc2\n         2     item1   1   desc1                       item1,1,desc1   item2,2,desc2                   item1,1,desc1|item2,2,desc2|item3,1,desc3\n\n或者可以用多级标题头对每个元素单独限定\n\n##var    id    name     rewards\n##type   int   string   list,Reward\n##var                   0                       1                       2\n##var                   item_id   num   desc    item_id   num   desc    item_id   num   desc\n         1     task1    1         10    desc1   2         12    desc2   3         13    desc3\n         2     task1    3         30    desc3   4         40    desc4                   \n         3     task1    5         50    desc5                                           \n\n\n# 多行结构列表\n\n有时候列表结构的每个结构字段较多，如果水平展开则占据太多列，不方便编辑，如果拆表，无论程序还是策划都不方便，此时可以使用多行模式。支持任意层次的多行结构列表（也即多行结构中的每个元素也可以是多行）， name#multi_rows=1或者*name 都可以表达一个多行解析的字段。\n\n假设每个任务包含多个阶段，有一个阶段列表字段。\n\n<bean name="Stage">\n <var name="id" type="int"/>\n <var name="name" type="string"/>\n <var name="desc" type="string"/>\n <var name="location" type="vector3"/>\n <var name="reward_item_id" type="int"/>\n <var name="reward_item_count" type="int"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n##var    id    name     *stage2\n##type   int   string   list,Stage\n##       id    desc     stage info\n         1     task1    1   stage1   stage desc1   1,2,3   1001   1\n                        2   stage2   stage desc2   1,2,3   1001   1\n                        3   stage3   stage desc3   1,2,3   1002   1\n         2     task2    1   stage1   stage desc1   1,2,3   1001   1\n                        2   stage2   stage desc2   1,2,3   1002   1\n\n\n# 列表表 （无主键）\n\n有时候只想得到一个记录列表，无主键。mode="list"并且index为空，表示无主键表。\n\n定义表\n\n<table name="TbNotKeyList" value="NotKeyList" mode="list" input="not_key_list.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##VAR    X     Y      Z        NUM\n##type   int   long   string   int\n         1     1      aaa      123\n         1     1      bbb      124\n         1     2      aaa      134\n         2     1      aaa      124\n         5     6      xxx      898\n\n\n# 多主键表（联合索引）\n\n多个key构成联合唯一主键。使用"+"分割key，表示联合关系。\n\n定义表\n\n<table name="TbUnionMultiKey" value="UnionMultiKey" index="key1+key2+key3" input="union_multi_key.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##VAR    KEY1   KEY2   KEY3     NUM\n##type   int    long   string   int\n         1      1      aaa      123\n         1      1      bbb      124\n         1      2      aaa      134\n         2      1      aaa      124\n         5      6      xxx      898\n\n\n# 多主键表（独立索引）\n\n多个key，各自独立唯一索引。与联合索引写法区别在于使用 ","来划分key，表示独立关系。\n\n定义表\n\n<table name="TbMultiKey" value="MultiKey" index="key1,key2,key3" input="multi_key.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##VAR    KEY1   KEY2   KEY3     NUM\n##type   int    long   string   int\n         1      2      aaa      123\n         2      4      bbb      124\n         3      6      ccc      134\n         4      8      ddd      124\n         5      1      eee      898\n\n\n# 单例表\n\n有一些配置全局只有一份，比如 公会模块的开启等级，背包初始大小，背包上限。此时使用单例表来配置这些数据比较合适。\n\n##VAR    GULD_OPEN_LEVEL   BAG_INIT_CAPACITY   BAG_MAX_CAPACITY   NEWBIE_TASKS\n##type   int               int                 int                list,int\n##       desc1             desc 2              desc 3             desc 4\n         10                100                 500                10001,10002\n\n\n# 纵表\n\n大多数表都是横表，即一行一个记录。有些表，比如单例表，如果纵着填，一行一个字段，会比较舒服。A1为##column表示使用纵表模式。 上面的单例表，以纵表模式填如下。\n\n##var#column        ##type             ##      \nguild_open_level    int                desc1   10\nbag_init_capacity   int                desc2   100\nbag_max_capacity    int                desc3   500\nnewbie_tasks        (list#sep=,),int   desc4   10001,10002\n\n\n# 引用检查\n\n游戏配置中经常要填写诸如道具id之类的外键数据，这些数据必须是合法的id值，luban支持生成时检查id的合法性，如果有误，则打出警告。不只是表顶层字段，列表及嵌套结构的子字段也支持完整的引用检查。\n\n<bean name="Reward">\n <var name="item_id" type="int" ref="item.TbItem"/>\n <var name="count" type="int"/>\n <var name="desc" type="string">\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n##var    id    item_id               items                      reward              rewards\n##type   int   int#ref=item.TbItem   list,int#ref=item.TbItem   Reward              list,Reward#sep=,\n##       id    desc1                 desc2                      desc3               desc4\n         1     1001                  1001,1002                  1001   10   item1   1001,10,item1   1002,2,item2   \n         2     1002                  1003,1004,1005             1002   10   item2   1004,10,item4   1005,2,item5   1010,1,item10\n\n\n# 资源检查\n\n配置中经常要填写资源路径，比如道具icon的资源，这些数据都是string类型，非常容易填写出错，导致运行时无法正常显示。luban支持unity与ue4资源的合法性检查以及通用型文件路径检查。不只是表顶层字段，列表及嵌套结构的子字段也支持完整的引用检查。\n\n对于这些字段添加属性 path=unity或者path=ue或path=normal;xxxx。\n\n##VAR    ID    ICON\n##type   int   string#path=unity\n##       id    icon desc\n         1     Assets/UI/item1.jpg\n         2     Assets/UI/item2.jpg\n\n\n# 分组导出\n\n灵活的分组定义，不仅仅是client和server分组。支持以下分组粒度：\n\n * 表级别分组\n * 字段级别分组(任意bean字段粒度，而不仅限于顶层字段)\n\n\n# 数据标签过滤\n\n开发期经常会制作一些仅供开发使用的配置，比如测试道具，比如自动化测试使用的配置，希望在正式发布时不导出这些数据。\n\n##VAR    ID    NAME     \n##type   int   string   \n##       id    desc1    注释\n         1     item1    永远导出\n##       2     item2    永远不导出\ntest     4     item4    --export_exclude_tags test 时不导出\nTEST     5     item5    --export_exclude_tags test 时不导出\ndev      6     item6    --export_exclude_tags dev 时不导出\n         7     item7    永远导出\n\n\n# 多行记录填写\n\n目前只对容器类型字段支持多行。字段名前加*,如*stages,或者添加multi_rows=1参数也行，如stages#multi_rows=1。 一旦标记字段为多行，每行会作为字段的一个元素读入，例如 list,bean类型，则每行读入一个bean结构。\n\n多行可以嵌套，即多行字段中，某个字段本身也可以是多行记录。 示例可参见multi_rows_record\n\n<bean name="Stage">\n <var name="id" type="int"/>\n <var name="name" type="string"/>\n <var name="desc" type="string"/>\n <var name="location" type="vector3"/>\n <var name="reward_item_id" type="int"/>\n <var name="reward_item_count" type="int"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n##var    id    name     *stages\n##type   int   string   list,Stage\n##       id    desc     stage info\n         1     task1    1   stage1   stage desc1   1,2,3   1001   1\n                        2   stage2   stage desc2   1,2,3   1001   1\n                        3   stage3   stage desc3   1,2,3   1002   1\n         2     task2    1   stage1   stage desc1   1,2,3   1001   1\n                        2   stage2   stage desc2   1,2,3   1002   1\n\n\n# 层级标题头 (hierarchy title)\n\n在多行数据或者深层次嵌套的数据中，如果数据字段较多，填写时不易区分子元素。luban提供层级标题实现深层次的子字段对应。以上面的多行数据列表为例,第一列为##var表示这是个子字段行。\n\n * 普通bean结构的子标题\n\n##var    id    name     stage\n##type   int   string   Stage\n##var                   name     desc          location   item_id   num\n##       id    name     desc2    desc3         desc4      desc5     desc6\n         1     task1    stage1   stage desc1   1,2,3      1001      1\n         2     task2    stage2   stage desc2   3,4,5      2001      3\n\n * list,bean 的多行展开多级子标题\n\n##var    id    name     stages\n##type   int   string   list,Stage\n##var                   id      name     desc          location   item_id   num\n##       id    desc1    desc1   desc2    desc3         desc4      desc5     desc6\n         1     task1    1       stage1   stage desc1   1,2,3      1001      1\n                        2       stage2   stage desc2   1,2,3      1001      1\n                        3       stage3   stage desc3   1,2,3      1002      1\n         2     task2    1       stage1   stage desc1   1,2,3      1001      1\n                        2       stage2   stage desc2   1,2,3      1002      1\n\n * list,bean 的水平展开多级子标题\n\n##var    id    name     items\n##type   int   string   list,Item\n##var                   0                       1                       2\n##var                   item_id   num   desc    item_id   num   desc    item_id   num   desc\n         1     task1    1         10    desc1   2         12    desc2   3         13    desc3\n         2     task1    3         30    desc3   4         40    desc4                   \n         3     task1    5         50    desc5                                           \n\n * map 类型的多级子标题\n\n##var    id    lans\n##type   int   map,string,string\n##var          ch-zn   en       jp    fr\n         1     苹果      apple    aaa   aaa\n         2     香蕉      banana   bbb   bbb\n\n\n# 多态结构\n\n示例定义如下\n\n<bean name="Shape">\n <bean name="Circle">\n  <var name="radius" type="float"/>\n </bean>\n <bean name="Rectangle" alias="长方形">\n  <var name="width" type="float"/>\n  <var name="height" type="float"/>\n </bean>\n <bean name="Curve">\n  <bean name="Line" alias="直线">\n   <var name="param_a" type="float"/>\n   <var name="param_b" type="float"/>\n  </bean>\n  <bean name="Parabola" alias="抛物线">\n   <var name="param_a" type="float"/>\n   <var name="param_b" type="float"/>\n  </bean>\n </bean>\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n##var    id    shapes\n##type   int   list,Shape#sep=,\n##       id    shape desc\n         1     Circle,10   Rectangle,100,200              \n         2     Circle,20   Rectangle,100,200   Line,5,8   Parabola,15,30\n\n\n# 字段默认值\n\n我们希望excel中单元格留空时，该字段取指定值，而不是默认的false,0之类。通过定义字段的default=xxx属性来指定默认值。\n\n如示例，id=2的记录，x1与x2皆为空，x1=0,x2=-1。\n\n##VAR    ID    X1      X2#DEFAULT=-1\n##type   int   int     int\n##       id    desc1   desc2\n         1     10      20\n         2             \n         3             30\n\n\n# 常量别名\n\n游戏里经常会出现一些常用的类似枚举的值，比如说 升级丹的 id,在很多地方都要填，如果直接它的道具 id,既不直观，也容易出错。 Luban 支持常量替换。如示例，导出时SHENG_JI_DAN会被替换为11220304。\n\n<enum name="EFunctionItemId">\n <var name="SHENG_JI_DAN" alias="升级丹" value="11220304"/>\n <var name="JIN_JIE_DAN" alias="进阶丹" value="11220506"/>\n</enum>\n\n\n1\n2\n3\n4\n\n\n##VAR    ID    ITEM_ID\n##type   int   int#convert=EFunctionItemId\n##       id    desc\n         1     SHENG_JI_DAN\n         2     进阶丹\n         3     1001\n\n\n# 单元格取非0默认值\n\n只对excel格式有效。在字段名上加上 xxx#default=value，则所有留空的单元格都会自动取value。如下图，id=2的记录，count=10,desc=haha。 default是excel格式特有属性，它作用于列，必须填在字段名上。\n\n##VAR    ID    COUNT#DEFAULT=10   DESC#DEFAULT=HAHA\n##type   int   int                string\n         1     1                  abc\n         2                        ',normalizedContent:'# excel格式介绍\n\n\n# 基础\n\n\n# 创建一个普通的xlsx 配置表\n\n * 假设你要创建的配置为装备表.\n * 在myconfigs/datas 目录下创建 equip.xlsx（实践中推荐按模块创建子目录，在模块目录创建配置，便于维护管理）, 其内容如下\n\n##var    id    name     attr\n##type   int   string   int\n         1     equip1   10\n         2     equip2   15\n\n * 在 myconfigs/datas/__tables__.xlsx 里新增一行。 有些不相关列被忽略了\n\n##var   full_name     value_type   define_from_excel   input      ...\n        demo.tbitem   item         true                物品表.xlsx   \n\n * 至此，完成添加新表工具。 运行 check.bat 检查是否成功生成！\n\n\n# excel 标题头行的介绍\n\n * 第1列单元格为 ##var 表示这行是字段定义行\n * 第1列单元格为 ##type 表示这行是 类型定义行\n * 第1列单元格以##开头 表示这是注释行，如果有多个##行，默认以第一个行作为代码中字段的注释，你可以通过##comment 显式指定某行为代码注释行。\n * 填写多级字段名行时，以##var表示这是次级字段行\n * 你可以随意调整##var和##type之类的行的顺序，但注意 如果第一行是注释行，必须使用##comment，而不是##。否则会把第一行当字段名行而出错（这是出于兼容性，早期强制第一行是字段名行，允许只以##开头）\n\n##var       id    name     stages\n##var                      id      name     desc          location   item_id   num\n##type      int   string   list,stage\n##          id    desc1    desc1   desc2    desc3         desc4      desc5     desc6\n##comment   id    名字       注释1     desc2    desc3         desc4      desc5     desc6\n            1     task1    1       stage1   stage desc1   1,2,3      1001      1\n                           2       stage2   stage desc2   1,2,3      1001      1\n                           3       stage3   stage desc3   1,2,3      1002      1\n            2     task2    1       stage1   stage desc1   1,2,3      1001      1\n                           2       stage2   stage desc2   1,2,3      1002      1\n\n\n# excel文件 读取规则\n\n * 如果未指定sheet,则默认会读取所有sheet\n * 可以用 sheet@xxx.xlsx 指定只读入这个sheet数据\n * 如果a1单元格数据不以##开头，则会被当作非数据sheet，被忽略\n\n\n# 支持的excel文件族\n\n支持 xls、 xlsx、 xlm、 xlmx、csv 。基本上excel能打开的都可以读取。\n\n\n# 支持非gkb和utf-8编码的csv文件\n\nluban会智能猜测出它的编码，正确处理。\n\n\n# 灵活的配置文件组织形式\n\n * 可以几个表都放到一个xlsx中，每个表占一个sheet。 只需要为每个表的input指定为该单元薄即可，如 input="xxx@item/test/abs.xlsx"。\n * 可以一个表拆分为几个xlsx。 如 input="item/a.xlsx,bag/b.xlsx,c.xlsx"。\n * 可以一个读入一个目录下的所有xlsx。 如 input="bag" 。\n\n\n# 单元格留空取默认值\n\n除了bean以外的数据，都可以留空。自动取默认值。注意非空字段的默认值是初始值，可空变量的默认值为null。例如int默认值是0，但int?的默认值是null。字符串string的默认值是长度为0的空白字符串，而string?的默认为null。\n\n\n# 数据格式\n\n\n# 限定列格式与流式格式\n\n如果某个字段通过标题头或者多级标题头限定了列范围，它的解析格式为限定列格式。\n\n如果某个字段只是某个限定列格式的字段的某一个子数据，它的解析格式为流式格式。\n\n示例如下。 标注@的列为 限定列格式， 标注~的列为流式格式。\n\n<bean name="item">\n   <var name="item_id" type="int"/>\n   <var name="num" type="int"/>\n   <var name="desc" type="string">\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n##var    id    name     item                     items\n##type   int   string   item                     list,item\n##var                   item_id   num   desc                                                    \n         @     @        @         @     @        ~      ~   ~       ~      ~   ~        ~   ~   ~\n         1     xxxx     1001      1     item 1   2001   1   item2                               \n         2     xxxx     1002      3     item 1   2001   1   item2   2002   2   item 2           \n\n\n# 限定列格式介绍\n\n通过标题行及多级标题行，可以精确限定某个数据在某些列范围内。\n\n对于只有一个原子值的简单类型数据，限定列格式下，由于能够非常清晰知道它的值必然来自某一单元格，所以它支持默认值语义，即如果单元格为空，值取默认值，例如 int类型默认值为0，int?默认值为null。\n\n限定列格式下，多态bean类型需要用 $type 列来指定具体类型名，可空bean类型也需要用$type列来指示是有效bean还是空bean。\n\n如果最低层的限定列的类型为容器或者bean，由于限定列只限定了该数据整体范围，但未限定子数据的范围，因此读取子数据的格式为流式格式，即按顺序读入每个子数据。\n\n综合示例如下：\n\n##var    id    shape                                 item\n##type   int   shape                                 item\n##var          $type       radius   width   height   $type   item_id   num   desc\n         1     circle      10                        item    1001      1     item 1\n         2     rectangle            10      20       {}      1001      2     item 1\n         3     圆           10                        null                    \n         4     circle      10                                                \n\n\n# 流式格式介绍\n\n对于没有具体限定列范围的子数据，使用流式格式（也只有这种办法），按顺序读入子数据。\n\n由于流式格式无法区分 默认单元格和空白忽略单元格，因此流格式下，不支持默认值语义，会忽略所有空白单元格。 进而对于默认值必须填上有效值默认值来表示数据，而不能留空来表达。\n\n流式格式下的默认值填写规则如下\n\n * bool 默认值为 false\n * int,float 之类的默认值为 0\n * string 的默认值为""\n * 可空变量，如int? 的空值为 null\n * 容器变量，需要有右大括号 \'}\' 来表示空值(用\'}\'表示容器终止)\n\n如下图，item字段为item类型，包括多个子数据，但没为它的子字段添加子列限定，因此使用流式格式解析它。\n\n * id=1的列，所有字段能够正常识别\n * id=2的列，第2个单元格为空，被忽略，因此试图将"item 1"当作num字段解析，抛出格式错误的异常。\n * id=3的列，第3个单元格为空，被忽略，尽管desc字段是string值，能接受空白值，也会抛出 数据缺失的异常。\n\n记录2和3的正确填法如4和5。\n\n##var    id    name     item\n##type   int   string   item\n         @     @        ~      ~   ~\n         1     xxxx     1001   1   item 1\n         2     xxxx     1001       item 1\n         3     xxxx     1001   1   \n         2     xxxx     1001   0   item 1\n         3     xxxx     1001   1   ""\n\n流式格式下，各个类型必须填写非空白值，规则如下\n\n * bool false,true\n * int,float 之类 有效整数值\n * string 用""表示长度为0的字符串，用其他非值表示值本身\n * enum 非空有效值\n * bean 用流式格式按顺序读入每个字段\n * 多态bean类型 先读入一个字符串，可以是具体的子类名或者子类别名，然后再根据子类名，流式读入该类型的每个字段。\n * 可空bean类型 先读入一个字符串，如果是bean的类型名或者\'{}\'，则流格式读入该类型的所有字段；如果为null，则表示空，结束读取；其他情况则抛出解析失败的异常。\n * array,list,set 如果流结束或者下一个读入的为\'}\'，则读取结束，否则用流格式读入element_type，如此循环。\n * map 如果流结束或者下一个读入的为\'}\',则读取结束，否则递归读入key_type和value_type，如此循环。\n\n以下是一个非常复杂的bean的流式读取示例\n\n\n<bean name="foo">\n  <var name="x" type="int"/>\n  <var name="y" type="int"/>\n</bean>\n\n<bean name="sublist">\n  <var name="a" type="int"/>\n  <var name="b" type="list,string"/>\n  <var name="c" type="bool"/>\n</bean>\n\n<bean name="streamdemo">\n  <var name="x1" type="int"/>\n  <var name="x2" type="foo"/>\n  <var name="x2_1" type="string"/>\n  <var name="x2_2" type="list,int"/>\n  <var name="x3_1" type="string"/>\n  <var name="x4" type="list,foo"/>\n  <var name="x4_1" type="string"/>\n  <var name="x5" type="sublist"/>\n  <var name="x5_1" type="string"/>\n  <var name="x7" type="list,sublist"/>\n  <var name="x7_1" type="string"/>\n  <var name="x8_0" type="map,int,int"/>\n  <var name="x8" type="int">\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n##var    id    stream_demo\n##type   int   streamdemo\n##             x1   x2        x2_1   x2_2          x2_2 end flag   x3_1   x4[0]     x4[1]     x4[2]     x4 end flag   x4_1   x5.a   x5.b             x5.c   x5_1   x7[0]                           x7[1]                            x7 end flag   x7_1   x8_0                x8_0 end flag   x8\n         1     10   20   21   x2_1   1,2   3   4   }               x3_1   11   12   21   22   32   32   }             x4_1   100    aaa   bbbb   }   true   x5_1   100   aaa1   bbbb1   }   true   200   aaa2   bbbb2   }   false   }             x7_1   1   100   2   200   }               1234\n\n\n# sep 介绍\n\n流式格式中，对于包含多个数据的复合类型数据，有时候希望紧凑地在一个单元格内填写它的多个子数据，使用sep可以实现此目的。\n\n由于sep非常常见，而且用法复杂多样，因此在单独的文档 excel sep格式介绍中介绍\n\n\n# 原生数据类型\n\n支持 bool,int,float,string,vector2,vector3,vector4 等等类型，它们的填写跟常规认知一致。\n\n##var    x1      x3      x4      x5      x6      x7       s1       v2        v3        v4\n##type   bool    short   int     long    float   double   string   vector2   vector3   vector4\n##       desc1   id      desc4   desc5   desc6   desc7    desc1    desc2     desc3     desc4\n         false   10      100     1000    1.23    1.2345   hello    1,2       1,2,3     1,2,3,4\n         true    20      200     1000    1.23    1.2345   world    1,2       1,2,3     1,2,3,4\n\n\n# text 类型\n\n该类型数据包含两个字段, key和text， 其中 key 可以重复出现，但要求text完全相同，否则报错。这么设计是为了防止意外写重了key。注意：不允许key为空而text不为空\n\n如果想填空的本地化字符串， key和text完全留空即可，工具会特殊对待，不会加入 key集合。\n\ntext的key和text字段都是string类型，因此在连续单元格或者sep产生的连续数据流模式中，同样要遵循用""来表达空白字符串的规则。\n\n##var    id    x\n##type   int   text#sep=,\n         1     /demo/key1,aaaa\n         2     /demo/key2,bbbb\n         3     \n\n\n# datetime 类型\n\n时间是常用的数据类型。luban 特地提供了支持。\n\n * 以纯字符串方式填写，填写格式为 以下 4 种。\n   * yyyy-mm-dd hh:mm:ss 如 1999-08-08 01:30:29\n   * yyyy-mm-dd hh:mm 如 2000-08-07 07:40\n   * yyyy-mm-dd hh 如 2001-09-05 07\n   * yyyy-mm-dd 如 2003-04-05\n * 以 excel内置的时间格式填写\n\n##var    id    x\n##type   int   datetime\n         1     1999-09-09 01:02:03\n         2     1999-09-09 01:02\n         3     1999-09-09 01\n         4     1999-09-09\n\n\n# 可空变量\n\n有时候会有一种变量，我们希望它 功能生效时填一个有效值，功能不生效里，用一个值来表示。 例如 int 类型，常常拿 0 或者-1 作无效值常量。 但有时候，0 或-1 也是有效值时，这种做法就不生效了。或者说 项目组内 有时候拿 0，有时候拿-1 作无效值标记，很不统一。我们借鉴 sql 及 c#,引入 可空值概念，用 null 表达空值。\n\n##var    id    x      color\n##type   int   int?   qualitycolor?\n         1     1      a\n         2     null   b\n         3     2      null\n\n\n# 向量类型 vector2,vector3,vector4\n\nvector3 有三个字段 float x, float y, float z, 适合用于表示坐标之类的数据。\n\n##var    id    x2        x3         x4\n##type   int   vector2   vector3    vector4\n         1     1,2       11,22,33   12,33,44,55\n         2     2,3       22,44,55   6.5,4.7,8.9\n\n\n# 原生数据列表\n\n##var    id    arr1                arr2            arr3                  arr4\n##type   int   (array#sep=;),int   list,int        (list#sep=|),string   list,string\n##       id    desc1               desc2           desc3                 desc4\n         1     1;2;3               1   2           xx|yy                 xxx   zzz   \n         2     2;4                 3   4   5       aaaa|bbbb|cccc        aaa   bbb   ccc\n         3     2;4;6               3   4   5   6   aaaa|bbbb|cccc        aaa   bbb   ccc\n\n\n# 枚举\n\n以枚举名或者别名或者值的方式填写枚举值。\n\n在xml中定义\n\n<enum name="itemquality">\n <var name="white" alias="白" value="0"/>\n <var name="green" alias="绿" value="1"/>\n <var name="red" alias="红" value="2"/>\n</enum>\n\n\n1\n2\n3\n4\n5\n\n\n或者在 __enums__.xlsx 中 定义\n\n##var   full_name     flags   unique   comment   tags   *items\n##var                                                   name    alias   value   comment   tags\n        itemquality   false   true                      white   白       0                 \n                                                        green   绿       1                 \n                                                        red     红       2                 \n\n数据表如下\n\n##var    id    quality       quality2\n##type   int   itemquality   itemquality\n         1     白             red\n         2     green         红\n         3     red           white\n         4     1             0\n\n\n# 嵌套子结构\n\n经常会碰到，某个字段是结构，尤其这个结构在很多配置里都会复用。\n\n假设任务中包含一个 奖励信息 字段\n\n在xml中定义\n\n<bean name="reward">\n <var name="item_id" type="int"/>\n <var name="count" type="int"/>\n <var name="desc" type="string">\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n或者在 __beans__.xlsx 里定义\n\n##var   full_name   sep   comment   fields\n##var                               name      type     group   comment   tags\n        reward                      item_id   int              道具id      \n                                    count     int              个数        \n                                    desc      string           描述        \n\n数据表如下\n\n##var    id    reward\n##type   int   reward\n##       id    道具id    个数    描述\n         1     item1   1     desc1\n         2     item2   100   desc2\n\n\n# 简单结构列表\n\n某个字段为结构列表的情形也很常见，比如说奖励信息列表包含多个奖励信息，每个奖励都有多个字段。\n\n假设礼包中包含一个道具信息列表字段。支持3种填写模式，具体选择由策划灵活决定。\n\n * 所有字段完全展开，每个单元格填一个元素。缺点是占用的列较多。如items1字段。\n * 每个结构占据一个单元格，使用sep分割结构子字段。如items2字段。\n * 整个列表占据一个单元格，使用sep分割列表及结构子字段。如items3字段。\n\nxml中定义如下\n\n<bean name="reward">\n <var name="item_id" type="int"/>\n <var name="count" type="int"/>\n <var name="desc" type="string">\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n或者也可以在__beans__.xlsx中定义，此处不再赘述，==后面的涉及到结构定义的例子都只给xml的示例==。\n\n数据表如下：\n\n##var    id    rewards1                                rewards2                                        rewards3\n##type   int   list,reward                             list,reward#sep=,                               (list#sep=|),reward#sep=,\n##       id    reward list desc1                       reward list desc2                               reward list desc3\n         1     item1   1   desc1   item2   2   desc2   item1,1,desc1   item2,2,desc2   item3,3,desc3   item1,1,desc1|item2,2,desc2\n         2     item1   1   desc1                       item1,1,desc1   item2,2,desc2                   item1,1,desc1|item2,2,desc2|item3,1,desc3\n\n或者可以用多级标题头对每个元素单独限定\n\n##var    id    name     rewards\n##type   int   string   list,reward\n##var                   0                       1                       2\n##var                   item_id   num   desc    item_id   num   desc    item_id   num   desc\n         1     task1    1         10    desc1   2         12    desc2   3         13    desc3\n         2     task1    3         30    desc3   4         40    desc4                   \n         3     task1    5         50    desc5                                           \n\n\n# 多行结构列表\n\n有时候列表结构的每个结构字段较多，如果水平展开则占据太多列，不方便编辑，如果拆表，无论程序还是策划都不方便，此时可以使用多行模式。支持任意层次的多行结构列表（也即多行结构中的每个元素也可以是多行）， name#multi_rows=1或者*name 都可以表达一个多行解析的字段。\n\n假设每个任务包含多个阶段，有一个阶段列表字段。\n\n<bean name="stage">\n <var name="id" type="int"/>\n <var name="name" type="string"/>\n <var name="desc" type="string"/>\n <var name="location" type="vector3"/>\n <var name="reward_item_id" type="int"/>\n <var name="reward_item_count" type="int"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n##var    id    name     *stage2\n##type   int   string   list,stage\n##       id    desc     stage info\n         1     task1    1   stage1   stage desc1   1,2,3   1001   1\n                        2   stage2   stage desc2   1,2,3   1001   1\n                        3   stage3   stage desc3   1,2,3   1002   1\n         2     task2    1   stage1   stage desc1   1,2,3   1001   1\n                        2   stage2   stage desc2   1,2,3   1002   1\n\n\n# 列表表 （无主键）\n\n有时候只想得到一个记录列表，无主键。mode="list"并且index为空，表示无主键表。\n\n定义表\n\n<table name="tbnotkeylist" value="notkeylist" mode="list" input="not_key_list.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##var    x     y      z        num\n##type   int   long   string   int\n         1     1      aaa      123\n         1     1      bbb      124\n         1     2      aaa      134\n         2     1      aaa      124\n         5     6      xxx      898\n\n\n# 多主键表（联合索引）\n\n多个key构成联合唯一主键。使用"+"分割key，表示联合关系。\n\n定义表\n\n<table name="tbunionmultikey" value="unionmultikey" index="key1+key2+key3" input="union_multi_key.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##var    key1   key2   key3     num\n##type   int    long   string   int\n         1      1      aaa      123\n         1      1      bbb      124\n         1      2      aaa      134\n         2      1      aaa      124\n         5      6      xxx      898\n\n\n# 多主键表（独立索引）\n\n多个key，各自独立唯一索引。与联合索引写法区别在于使用 ","来划分key，表示独立关系。\n\n定义表\n\n<table name="tbmultikey" value="multikey" index="key1,key2,key3" input="multi_key.xlsx"/>\n\n\n1\n\n\n示例数据表\n\n##var    key1   key2   key3     num\n##type   int    long   string   int\n         1      2      aaa      123\n         2      4      bbb      124\n         3      6      ccc      134\n         4      8      ddd      124\n         5      1      eee      898\n\n\n# 单例表\n\n有一些配置全局只有一份，比如 公会模块的开启等级，背包初始大小，背包上限。此时使用单例表来配置这些数据比较合适。\n\n##var    guld_open_level   bag_init_capacity   bag_max_capacity   newbie_tasks\n##type   int               int                 int                list,int\n##       desc1             desc 2              desc 3             desc 4\n         10                100                 500                10001,10002\n\n\n# 纵表\n\n大多数表都是横表，即一行一个记录。有些表，比如单例表，如果纵着填，一行一个字段，会比较舒服。a1为##column表示使用纵表模式。 上面的单例表，以纵表模式填如下。\n\n##var#column        ##type             ##      \nguild_open_level    int                desc1   10\nbag_init_capacity   int                desc2   100\nbag_max_capacity    int                desc3   500\nnewbie_tasks        (list#sep=,),int   desc4   10001,10002\n\n\n# 引用检查\n\n游戏配置中经常要填写诸如道具id之类的外键数据，这些数据必须是合法的id值，luban支持生成时检查id的合法性，如果有误，则打出警告。不只是表顶层字段，列表及嵌套结构的子字段也支持完整的引用检查。\n\n<bean name="reward">\n <var name="item_id" type="int" ref="item.tbitem"/>\n <var name="count" type="int"/>\n <var name="desc" type="string">\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n##var    id    item_id               items                      reward              rewards\n##type   int   int#ref=item.tbitem   list,int#ref=item.tbitem   reward              list,reward#sep=,\n##       id    desc1                 desc2                      desc3               desc4\n         1     1001                  1001,1002                  1001   10   item1   1001,10,item1   1002,2,item2   \n         2     1002                  1003,1004,1005             1002   10   item2   1004,10,item4   1005,2,item5   1010,1,item10\n\n\n# 资源检查\n\n配置中经常要填写资源路径，比如道具icon的资源，这些数据都是string类型，非常容易填写出错，导致运行时无法正常显示。luban支持unity与ue4资源的合法性检查以及通用型文件路径检查。不只是表顶层字段，列表及嵌套结构的子字段也支持完整的引用检查。\n\n对于这些字段添加属性 path=unity或者path=ue或path=normal;xxxx。\n\n##var    id    icon\n##type   int   string#path=unity\n##       id    icon desc\n         1     assets/ui/item1.jpg\n         2     assets/ui/item2.jpg\n\n\n# 分组导出\n\n灵活的分组定义，不仅仅是client和server分组。支持以下分组粒度：\n\n * 表级别分组\n * 字段级别分组(任意bean字段粒度，而不仅限于顶层字段)\n\n\n# 数据标签过滤\n\n开发期经常会制作一些仅供开发使用的配置，比如测试道具，比如自动化测试使用的配置，希望在正式发布时不导出这些数据。\n\n##var    id    name     \n##type   int   string   \n##       id    desc1    注释\n         1     item1    永远导出\n##       2     item2    永远不导出\ntest     4     item4    --export_exclude_tags test 时不导出\ntest     5     item5    --export_exclude_tags test 时不导出\ndev      6     item6    --export_exclude_tags dev 时不导出\n         7     item7    永远导出\n\n\n# 多行记录填写\n\n目前只对容器类型字段支持多行。字段名前加*,如*stages,或者添加multi_rows=1参数也行，如stages#multi_rows=1。 一旦标记字段为多行，每行会作为字段的一个元素读入，例如 list,bean类型，则每行读入一个bean结构。\n\n多行可以嵌套，即多行字段中，某个字段本身也可以是多行记录。 示例可参见multi_rows_record\n\n<bean name="stage">\n <var name="id" type="int"/>\n <var name="name" type="string"/>\n <var name="desc" type="string"/>\n <var name="location" type="vector3"/>\n <var name="reward_item_id" type="int"/>\n <var name="reward_item_count" type="int"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n##var    id    name     *stages\n##type   int   string   list,stage\n##       id    desc     stage info\n         1     task1    1   stage1   stage desc1   1,2,3   1001   1\n                        2   stage2   stage desc2   1,2,3   1001   1\n                        3   stage3   stage desc3   1,2,3   1002   1\n         2     task2    1   stage1   stage desc1   1,2,3   1001   1\n                        2   stage2   stage desc2   1,2,3   1002   1\n\n\n# 层级标题头 (hierarchy title)\n\n在多行数据或者深层次嵌套的数据中，如果数据字段较多，填写时不易区分子元素。luban提供层级标题实现深层次的子字段对应。以上面的多行数据列表为例,第一列为##var表示这是个子字段行。\n\n * 普通bean结构的子标题\n\n##var    id    name     stage\n##type   int   string   stage\n##var                   name     desc          location   item_id   num\n##       id    name     desc2    desc3         desc4      desc5     desc6\n         1     task1    stage1   stage desc1   1,2,3      1001      1\n         2     task2    stage2   stage desc2   3,4,5      2001      3\n\n * list,bean 的多行展开多级子标题\n\n##var    id    name     stages\n##type   int   string   list,stage\n##var                   id      name     desc          location   item_id   num\n##       id    desc1    desc1   desc2    desc3         desc4      desc5     desc6\n         1     task1    1       stage1   stage desc1   1,2,3      1001      1\n                        2       stage2   stage desc2   1,2,3      1001      1\n                        3       stage3   stage desc3   1,2,3      1002      1\n         2     task2    1       stage1   stage desc1   1,2,3      1001      1\n                        2       stage2   stage desc2   1,2,3      1002      1\n\n * list,bean 的水平展开多级子标题\n\n##var    id    name     items\n##type   int   string   list,item\n##var                   0                       1                       2\n##var                   item_id   num   desc    item_id   num   desc    item_id   num   desc\n         1     task1    1         10    desc1   2         12    desc2   3         13    desc3\n         2     task1    3         30    desc3   4         40    desc4                   \n         3     task1    5         50    desc5                                           \n\n * map 类型的多级子标题\n\n##var    id    lans\n##type   int   map,string,string\n##var          ch-zn   en       jp    fr\n         1     苹果      apple    aaa   aaa\n         2     香蕉      banana   bbb   bbb\n\n\n# 多态结构\n\n示例定义如下\n\n<bean name="shape">\n <bean name="circle">\n  <var name="radius" type="float"/>\n </bean>\n <bean name="rectangle" alias="长方形">\n  <var name="width" type="float"/>\n  <var name="height" type="float"/>\n </bean>\n <bean name="curve">\n  <bean name="line" alias="直线">\n   <var name="param_a" type="float"/>\n   <var name="param_b" type="float"/>\n  </bean>\n  <bean name="parabola" alias="抛物线">\n   <var name="param_a" type="float"/>\n   <var name="param_b" type="float"/>\n  </bean>\n </bean>\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n##var    id    shapes\n##type   int   list,shape#sep=,\n##       id    shape desc\n         1     circle,10   rectangle,100,200              \n         2     circle,20   rectangle,100,200   line,5,8   parabola,15,30\n\n\n# 字段默认值\n\n我们希望excel中单元格留空时，该字段取指定值，而不是默认的false,0之类。通过定义字段的default=xxx属性来指定默认值。\n\n如示例，id=2的记录，x1与x2皆为空，x1=0,x2=-1。\n\n##var    id    x1      x2#default=-1\n##type   int   int     int\n##       id    desc1   desc2\n         1     10      20\n         2             \n         3             30\n\n\n# 常量别名\n\n游戏里经常会出现一些常用的类似枚举的值，比如说 升级丹的 id,在很多地方都要填，如果直接它的道具 id,既不直观，也容易出错。 luban 支持常量替换。如示例，导出时sheng_ji_dan会被替换为11220304。\n\n<enum name="efunctionitemid">\n <var name="sheng_ji_dan" alias="升级丹" value="11220304"/>\n <var name="jin_jie_dan" alias="进阶丹" value="11220506"/>\n</enum>\n\n\n1\n2\n3\n4\n\n\n##var    id    item_id\n##type   int   int#convert=efunctionitemid\n##       id    desc\n         1     sheng_ji_dan\n         2     进阶丹\n         3     1001\n\n\n# 单元格取非0默认值\n\n只对excel格式有效。在字段名上加上 xxx#default=value，则所有留空的单元格都会自动取value。如下图，id=2的记录，count=10,desc=haha。 default是excel格式特有属性，它作用于列，必须填在字段名上。\n\n##var    id    count#default=10   desc#default=haha\n##type   int   int                string\n         1     1                  abc\n         2                        ',charsets:{cjk:!0}},{title:"sep 介绍",frontmatter:{},regularPath:"/excel_sep.html",relativePath:"excel_sep.md",key:"v-ddf06438",path:"/excel_sep.html",headers:[{level:2,title:"分割 text",slug:"分割-text",normalizedTitle:"分割 text",charIndex:144},{level:2,title:"分割 简单列表",slug:"分割-简单列表",normalizedTitle:"分割 简单列表",charIndex:255},{level:2,title:"分割 bean (单单元格)",slug:"分割-bean-单单元格",normalizedTitle:"分割 bean (单单元格)",charIndex:594},{level:3,title:"分割bean (多单元格)",slug:"分割bean-多单元格",normalizedTitle:"分割bean (多单元格)",charIndex:1724},{level:3,title:"bean列表 (单单元格)",slug:"bean列表-单单元格",normalizedTitle:"bean列表 (单单元格)",charIndex:2111},{level:3,title:"bean列表 (多单元格)",slug:"bean列表-多单元格",normalizedTitle:"bean列表 (多单元格)",charIndex:2454},{level:3,title:"支持默认sep的bean",slug:"支持默认sep的bean",normalizedTitle:"支持默认sep的bean",charIndex:3112}],lastUpdated:"2/26/2022, 11:45:49 AM",lastUpdatedTimestamp:1645847149e3,headersStr:"分割 text 分割 简单列表 分割 bean (单单元格) 分割bean (多单元格) bean列表 (单单元格) bean列表 (多单元格) 支持默认sep的bean",content:'# sep 介绍\n\n流式格式中，对于包含多个数据的复合类型数据，有时候希望紧凑地在一个单元格或者一个字符串内填写它的多个子数据，使用sep可以实现此目的。\n\nsep会拆分单元格和字符串，再流式入，sep可以包含多个字符，如 sep=",;"，此时会用每个字符来拆分读入的字符串。\n\n\n# 分割 text\n\n##VAR    ID    DESC\n##type   int   text#sep=@\n         1     key1@xxxxx\n         2     key2@yyyyy\n\n\n# 分割 简单列表\n\nsep注解器 对于非容器类型，它作用于类型本身，对于容器类型，它既可以作用于容器，也可以作用于容器元素。\n\n##VAR    ID    ITEM_ID_LIST       NAME_LIST             FLOAT_LIST\n##type   int   (list#sep=,),int   (list#sep=,),string   (list#sep=,),float\n         1     1,2,3              abc,efg,def           1.5,2.5,3\n         2     4,5                eee,fff               1.2,2.2\n\n\n# 分割 bean (单单元格)\n\n<bean name="Item">\n    <var name="item_id" type="int"/>\n    <var name="num" type="int"/>\n    <var name="desc" type="string"/>\n</bean>\n\n<bean name="Shape">\n    <bean name="Circle">\n        <var name="radius" type="float"/>\n    </bean>\n    <bean name="Rectangle" alias="长方形">\n        <var name="width" type="float"/>\n        <var name="height" type="float"/>\n    </bean>\n</bean>\n\n<bean name="ComplexBean1">\n    <var name="x" type="int"/>\n    <var name="y" type="Item#sep=,"/>\n    <var name="z" type="int"/>\n</bean>\n\n<bean name="ComplexBean2">\n    <var name="x" type="int"/>\n    <var name="y" type="(list#sep=|),(Item#sep=,)"/>\n    <var name="z" type="int"/>\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n##VAR    ID    ITEM\n##type   int   Item#sep=,\n         1     1001,10,item1\n\n##VAR    ID    SHAPE\n##type   int   Shape#sep=,\n         1     Circle,10\n         2     长方形,5,8\n\n##VAR    ID    ITEM\n##type   int   ComplexBean1#sep=;\n         1     123;1002,1,item2;65\n\n##VAR    ID    ITEM\n##type   int   ComplexBean2#sep=;\n         1     111;1001,2,item1|1002,1,item2;234\n\n\n# 分割bean (多单元格)\n\n##var    id    item\n##type   int   Item\n         1     1001   1   item1\n\n##var    id    shape\n##type   int   Shape\n         1     Circle      10   \n         1     Rectangle   10   20\n\n##var    id    x\n##type   int   ComplexBean1\n         1     234   1001,1,item1   789\n\n##var    id    x\n##type   int   ComplexBean2\n         1     234   1001,1,item1|1002,1,item2   789\n\n\n# bean列表 (单单元格)\n\n##VAR    ID    ITEM\n##type   int   (list#sep=%),Item#sep=,\n         1     1001,10,item1%1002,1,item2\n\n##VAR    ID    ITEM\n##type   int   (list#sep=%),ComplexBean1#sep=;\n         1     123;1002,1,item2;65%124;1002,1,item2;65\n\n##VAR    ID    ITEM\n##type   int   (list#sep=%),ComplexBean2#sep=;\n         1     123;1002,1,item2\n\n\n# bean列表 (多单元格)\n\n##var    id    item\n##type   int   list,Item#sep=,\n         1     1001,1,item1   1002,1,item2   \n\n##var    id    shape\n##type   int   list,Shape#sep=,\n         1     Circle,10   Rectangle,15,18   Circle,20\n\n##var    id    x\n##type   int   list,ComplexBean1#sep=;\n         1     222;1001,1,item1;789   333;1001,1,item1;789   444;1001,1,item1;789\n\n##var    id    x\n##type   int   list,ComplexBean2#sep=;\n         1     111;1001,1,item1;1002,2,item2;};111   222;1001,1,item1;1002,2,item2;};111   \n\n##var    id    x\n##type   int   list,ComplexBean3#sep=;\n         1     333;1001,1,item1%1002,1,item2;444   333;1001,1,item1%1002,1,item2;444   \n\n\n# 支持默认sep的bean\n\n有些类型，你希望所有用到它的地方都以约定的sep去分割读取，而不是每处都定义sep。\n\nbean支持sep属性实现这个机制。\n\n假设你需要一个日期类， 你期望所有用到的地方都按 yyyy-mm-dd的格式填写。示例如下：\n\n<bean name="Date" sep="-">\n    <var name="year" type="int"/>\n    <var name="month" type="int#range=[1,12]"/>\n    <var name="day" type="int#range=[1,31]"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n##VAR    ID    DATE       DATES\n##type   int   Date       (list#sep=$),Data\n         1     1999-9-9   2000-1-1$2020-2-2\n         2     2018-8-8   1990-2-3$1991-3-4$1992-4-5',normalizedContent:'# sep 介绍\n\n流式格式中，对于包含多个数据的复合类型数据，有时候希望紧凑地在一个单元格或者一个字符串内填写它的多个子数据，使用sep可以实现此目的。\n\nsep会拆分单元格和字符串，再流式入，sep可以包含多个字符，如 sep=",;"，此时会用每个字符来拆分读入的字符串。\n\n\n# 分割 text\n\n##var    id    desc\n##type   int   text#sep=@\n         1     key1@xxxxx\n         2     key2@yyyyy\n\n\n# 分割 简单列表\n\nsep注解器 对于非容器类型，它作用于类型本身，对于容器类型，它既可以作用于容器，也可以作用于容器元素。\n\n##var    id    item_id_list       name_list             float_list\n##type   int   (list#sep=,),int   (list#sep=,),string   (list#sep=,),float\n         1     1,2,3              abc,efg,def           1.5,2.5,3\n         2     4,5                eee,fff               1.2,2.2\n\n\n# 分割 bean (单单元格)\n\n<bean name="item">\n    <var name="item_id" type="int"/>\n    <var name="num" type="int"/>\n    <var name="desc" type="string"/>\n</bean>\n\n<bean name="shape">\n    <bean name="circle">\n        <var name="radius" type="float"/>\n    </bean>\n    <bean name="rectangle" alias="长方形">\n        <var name="width" type="float"/>\n        <var name="height" type="float"/>\n    </bean>\n</bean>\n\n<bean name="complexbean1">\n    <var name="x" type="int"/>\n    <var name="y" type="item#sep=,"/>\n    <var name="z" type="int"/>\n</bean>\n\n<bean name="complexbean2">\n    <var name="x" type="int"/>\n    <var name="y" type="(list#sep=|),(item#sep=,)"/>\n    <var name="z" type="int"/>\n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n##var    id    item\n##type   int   item#sep=,\n         1     1001,10,item1\n\n##var    id    shape\n##type   int   shape#sep=,\n         1     circle,10\n         2     长方形,5,8\n\n##var    id    item\n##type   int   complexbean1#sep=;\n         1     123;1002,1,item2;65\n\n##var    id    item\n##type   int   complexbean2#sep=;\n         1     111;1001,2,item1|1002,1,item2;234\n\n\n# 分割bean (多单元格)\n\n##var    id    item\n##type   int   item\n         1     1001   1   item1\n\n##var    id    shape\n##type   int   shape\n         1     circle      10   \n         1     rectangle   10   20\n\n##var    id    x\n##type   int   complexbean1\n         1     234   1001,1,item1   789\n\n##var    id    x\n##type   int   complexbean2\n         1     234   1001,1,item1|1002,1,item2   789\n\n\n# bean列表 (单单元格)\n\n##var    id    item\n##type   int   (list#sep=%),item#sep=,\n         1     1001,10,item1%1002,1,item2\n\n##var    id    item\n##type   int   (list#sep=%),complexbean1#sep=;\n         1     123;1002,1,item2;65%124;1002,1,item2;65\n\n##var    id    item\n##type   int   (list#sep=%),complexbean2#sep=;\n         1     123;1002,1,item2\n\n\n# bean列表 (多单元格)\n\n##var    id    item\n##type   int   list,item#sep=,\n         1     1001,1,item1   1002,1,item2   \n\n##var    id    shape\n##type   int   list,shape#sep=,\n         1     circle,10   rectangle,15,18   circle,20\n\n##var    id    x\n##type   int   list,complexbean1#sep=;\n         1     222;1001,1,item1;789   333;1001,1,item1;789   444;1001,1,item1;789\n\n##var    id    x\n##type   int   list,complexbean2#sep=;\n         1     111;1001,1,item1;1002,2,item2;};111   222;1001,1,item1;1002,2,item2;};111   \n\n##var    id    x\n##type   int   list,complexbean3#sep=;\n         1     333;1001,1,item1%1002,1,item2;444   333;1001,1,item1%1002,1,item2;444   \n\n\n# 支持默认sep的bean\n\n有些类型，你希望所有用到它的地方都以约定的sep去分割读取，而不是每处都定义sep。\n\nbean支持sep属性实现这个机制。\n\n假设你需要一个日期类， 你期望所有用到的地方都按 yyyy-mm-dd的格式填写。示例如下：\n\n<bean name="date" sep="-">\n    <var name="year" type="int"/>\n    <var name="month" type="int#range=[1,12]"/>\n    <var name="day" type="int#range=[1,31]"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n\n\n##var    id    date       dates\n##type   int   date       (list#sep=$),data\n         1     1999-9-9   2000-1-1$2020-2-2\n         2     2018-8-8   1990-2-3$1991-3-4$1992-4-5',charsets:{cjk:!0}},{title:"代码与数据生成",frontmatter:{},regularPath:"/generate_code_data.html",relativePath:"generate_code_data.md",key:"v-75ed03ac",path:"/generate_code_data.html",headers:[{level:2,title:"支持的平台、引擎和语言",slug:"支持的平台、引擎和语言",normalizedTitle:"支持的平台、引擎和语言",charIndex:14},{level:2,title:"可以导出哪些数据格式",slug:"可以导出哪些数据格式",normalizedTitle:"可以导出哪些数据格式",charIndex:550},{level:2,title:"luban命令行工具的详细文档？",slug:"luban命令行工具的详细文档",normalizedTitle:"luban命令行工具的详细文档？",charIndex:1124},{level:2,title:"如何生成代码和数据",slug:"如何生成代码和数据",normalizedTitle:"如何生成代码和数据",charIndex:1158},{level:2,title:"为unity项目生成c#代码并导出json数据",slug:"为unity项目生成c-代码并导出json数据",normalizedTitle:"为unity项目生成c#代码并导出json数据",charIndex:1990},{level:2,title:"为 unity + puerts 项目生成 ts代码，并生成json数据",slug:"为-unity-puerts-项目生成-ts代码-并生成json数据",normalizedTitle:"为 unity + puerts 项目生成 ts代码，并生成json数据",charIndex:2400},{level:2,title:"为 UE4项目，生成c++代码（非蓝图）和binary数据",slug:"为-ue4项目-生成c-代码-非蓝图-和binary数据",normalizedTitle:"为 ue4项目，生成c++代码（非蓝图）和binary数据",charIndex:2544},{level:2,title:"为UE4项目，生成c++代码（蓝图）和binary数据",slug:"为ue4项目-生成c-代码-蓝图-和binary数据",normalizedTitle:"为ue4项目，生成c++代码（蓝图）和binary数据",charIndex:2808},{level:2,title:"为UE4项目，生成c++代码（蓝图）和json数据",slug:"为ue4项目-生成c-代码-蓝图-和json数据",normalizedTitle:"为ue4项目，生成c++代码（蓝图）和json数据",charIndex:2921},{level:2,title:"其他类型项目类型，如何生成代码和数据",slug:"其他类型项目类型-如何生成代码和数据",normalizedTitle:"其他类型项目类型，如何生成代码和数据",charIndex:3035},{level:2,title:"生成protobuf的定义文件及protobuf数据格式",slug:"生成protobuf的定义文件及protobuf数据格式",normalizedTitle:"生成protobuf的定义文件及protobuf数据格式",charIndex:3132},{level:3,title:"protobuf2",slug:"protobuf2",normalizedTitle:"protobuf2",charIndex:3186},{level:3,title:"protobuf3",slug:"protobuf3",normalizedTitle:"protobuf3",charIndex:3425},{level:2,title:"生成msgpack的数据",slug:"生成msgpack的数据",normalizedTitle:"生成msgpack的数据",charIndex:3582},{level:2,title:"生成flatbuffers的定义文件及flatbuffers数据格式",slug:"生成flatbuffers的定义文件及flatbuffers数据格式",normalizedTitle:"生成flatbuffers的定义文件及flatbuffers数据格式",charIndex:3646},{level:2,title:"只生成代码或者数据吗",slug:"只生成代码或者数据吗",normalizedTitle:"只生成代码或者数据吗",charIndex:4384},{level:2,title:"配置中有些string字段是资源地址，统一导出这些资源地址",slug:"配置中有些string字段是资源地址-统一导出这些资源地址",normalizedTitle:"配置中有些string字段是资源地址，统一导出这些资源地址",charIndex:4498},{level:2,title:"生成的c#代码中,vector的类型由System.Numerics.Vector{2,3,4}，改成 UnityEngine.Vector{2,3,4}",slug:"生成的c-代码中-vector的类型由system-numerics-vector-2-3-4-改成-unityengine-vector-2-3-4",normalizedTitle:"生成的c#代码中,vector的类型由system.numerics.vector{2,3,4}，改成 unityengine.vector{2,3,4}",charIndex:4955},{level:2,title:"自定义代码命名风格",slug:"自定义代码命名风格",normalizedTitle:"自定义代码命名风格",charIndex:5117},{level:2,title:"gentypes中 codecsjson和codecsunityjson 有什么区别",slug:"gen-types中-code-cs-json和code-cs-unity-json-有什么区别",normalizedTitle:"gentypes中 codecsjson和codecsunityjson 有什么区别",charIndex:null},{level:2,title:"命令行参数中的 -j cfg 的含义",slug:"命令行参数中的-j-cfg-的含义",normalizedTitle:"命令行参数中的 -j cfg 的含义",charIndex:5751},{level:2,title:"生成的配置代码顶层命名空间是cfg，可以不加这个命名空间或者使用其他值吗？",slug:"生成的配置代码顶层命名空间是cfg-可以不加这个命名空间或者使用其他值吗",normalizedTitle:"生成的配置代码顶层命名空间是cfg，可以不加这个命名空间或者使用其他值吗？",charIndex:5887},{level:2,title:"生成的数据文件的后缀",slug:"生成的数据文件的后缀",normalizedTitle:"生成的数据文件的后缀",charIndex:5988},{level:2,title:"enum、bean 类型代码导出规则",slug:"enum、bean-类型代码导出规则",normalizedTitle:"enum、bean 类型代码导出规则",charIndex:6236},{level:2,title:"不同导出格式 性能测试结果",slug:"不同导出格式-性能测试结果",normalizedTitle:"不同导出格式 性能测试结果",charIndex:6553},{level:2,title:"binary与json格式加载性能对比？",slug:"binary与json格式加载性能对比",normalizedTitle:"binary与json格式加载性能对比？",charIndex:6852}],lastUpdated:"12/24/2021, 1:58:44 PM",lastUpdatedTimestamp:1640325524e3,headersStr:"支持的平台、引擎和语言 可以导出哪些数据格式 luban命令行工具的详细文档？ 如何生成代码和数据 为unity项目生成c#代码并导出json数据 为 unity + puerts 项目生成 ts代码，并生成json数据 为 UE4项目，生成c++代码（非蓝图）和binary数据 为UE4项目，生成c++代码（蓝图）和binary数据 为UE4项目，生成c++代码（蓝图）和json数据 其他类型项目类型，如何生成代码和数据 生成protobuf的定义文件及protobuf数据格式 protobuf2 protobuf3 生成msgpack的数据 生成flatbuffers的定义文件及flatbuffers数据格式 只生成代码或者数据吗 配置中有些string字段是资源地址，统一导出这些资源地址 生成的c#代码中,vector的类型由System.Numerics.Vector{2,3,4}，改成 UnityEngine.Vector{2,3,4} 自定义代码命名风格 gentypes中 codecsjson和codecsunityjson 有什么区别 命令行参数中的 -j cfg 的含义 生成的配置代码顶层命名空间是cfg，可以不加这个命名空间或者使用其他值吗？ 生成的数据文件的后缀 enum、bean 类型代码导出规则 不同导出格式 性能测试结果 binary与json格式加载性能对比？",content:'# 代码与数据生成\n\n\n# 支持的平台、引擎和语言\n\n * 跨平台\n   * Win\n   * Mac\n   * Linux (包括WSL)\n * 支持主流的游戏开发语言\n   * c++ (11+)\n   * c# (.net framework 4+. dotnet core 3+)\n   * java (1.6+)\n   * go (1.10+)\n   * lua (5.1+)\n   * js 和 typescript (3.0+)\n   * python (3.0+)\n   * erlang (18+)\n   * rust (1.5+)\n   * 其他protobuf支持语言\n * 支持主流的引擎\n   * unity\n   * unreal\n   * cocos2d-x\n   * 微信小游戏平台\n   * 其他家支持js的小游戏平台\n * 支持主流的热更新方案\n   * xlua\n   * tolua\n   * slua\n   * ILRuntime\n   * sluaunreal\n   * puerts\n   * XIL\n * 支持主流的开源框架\n   * skynet\n   * ET\n   * GameFramework\n   * xlua-framework\n\n\n# 可以导出哪些数据格式\n\n * binary 格式。 格式紧凑，加载高效，但基本不具体可读性。推荐只用于正式发布。\n * json 格式。 可读性佳。支持优雅对齐格式，也支持紧凑格式。 推荐用于服务器端，以及用于客户端开发期。\n * protobuf 格式。适用于熟悉pb的开发者。\n * msgpack 格式。\n * lua 格式。 可读性佳。 推荐仅用于客户端脚本语言为lua的情形。\n * xml 格式。\n * erlang格式。 仅用于 erlang语言。\n * yaml格式。\n * 其他格式。很容易扩展支持。\n\n同一种格式，为不同语言生成的数据是完全相同的。\n\n不同语言支持的格式如下：\n\nLANGUAGE     DATA TYPE\nc#           binary, json\njava         binary, json\ngo           binary, json\nc++          binary\ngo           binary, json\npython       json\ntypescript   binary, json\nrust         json\nlua          binary, lua\nerlang       erlang\nprotobuf     所有\n\n\n# luban命令行工具的详细文档？\n\n参见 luban命令行\n\n\n# 如何生成代码和数据\n\n详细文档参见上面的链接。代码生成相关的工具有三个,都在luban_examples/Tools目录下。\n\n * Luban.Client。 Luban工具客户端\n * Luban.Server。 Luban工具服务器端\n * Luban.ClientServer。 Luban工具前后端一体。\n\n对于新手简单起见，我们介绍Luban.ClientServer的用法，命令如下：\n\ndotnet %LUBAN_CLIENT_SERVER_DLL% -j cfg -- ^\n -d %ROOT_FILE% ^\n --input_data_dir %INPUT_DATA_DIR% ^\n --output_code_dir %OUTPUT_CODE_DIR%\n --output_data_dir %OUTPUT_DIR% ^\n --gen_types %GEN_TYPE% ^\n -s %GROUP%\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n其中：\n\n * LUBAN_CLIENT_SERVER_DLL为 Luban.ClientServer.dll的路径， 可以指向 luban_examples/Tools/Luban.ClientServer/Luban.ClientServer.dll\n * ROOT_FILE 为根定义文件，指向 MyConfigs/Define/__root__.xml\n * INPUT_DATA_DIR 为配置数据的根目录，指向 MyConfigs/Datas\n * OUTPUT_CODE_DIR 为生成代码的目录\n * GEN_TYPE 为生成类型。 如果你使用unity,想生成c#代码，导出json数据，则使用 "code_cs_unity_json,data_json"\n * GROUP 为导出分组。客户端则取client，服务器取server，所有则取all\n\n更多项目类型，参见 示例项目\n\n\n# 为unity项目生成c#代码并导出json数据\n\n对于命令行的介绍参见 上面。 你的生成命令大略如下\n\ndotnet %LUBAN_CLIENT_SERVER_DLL% -j cfg -- ^\n -d %ROOT_FILE% ^\n --input_data_dir %INPUT_DATA_DIR% ^\n --output_code_dir %OUTPUT_CODE_DIR%\n --output_data_dir %OUTPUT_DIR% ^\n --gen_types "code_cs_unity_json,data_json" ^\n -s client\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n也即 --gen_types参数取 "code_cs_unity_json,data_json", -s 参数取 client\n\n具体项目，可参见 Csharp_Unity_Json\n\n更多项目类型，参见 示例项目\n\n\n# 为 unity + puerts 项目生成 ts代码，并生成json数据\n\n--gen_types 参数取 "code_typescript_json,data_json"，-s 参数取 client\n\n具体项目，可参见 Typescript_Unity_Puerts_Json\n\n\n# 为 UE4项目，生成c++代码（非蓝图）和binary数据\n\n基准的参考项目为 Cpp_Unreal_bin。\n\n由于生成的代码依赖于一些头文件，你需要先从该项目 拷备Source\\Cpp_Unreal\\Private\\bright 到你们项目合适的位置。必须保证bright目录在include目录路径内，如生成的代码中 #include "bright/serialization/ByteBuf.h" 可以找到这个文件。\n\n接着命令行参数取 --gen_types "code_cpp_bin,data_bin"\n\n\n# 为UE4项目，生成c++代码（蓝图）和binary数据\n\n基准的参考项目为 Cpp_Unreal_bp_bin。\n\n接着命令行参数取 --gen_types "code_cpp_ue_bp_bin,data_bin"\n\n\n# 为UE4项目，生成c++代码（蓝图）和json数据\n\n基准的参考项目为 Cpp_Unreal_bp_json。\n\n接着命令行参数取 --gen_types "code_cpp_ue_bp_json,data_json"\n\n\n# 其他类型项目类型，如何生成代码和数据\n\n不同项目之间，仅仅是 --gen_types 不一样， 请从示例项目中找到与你项目匹配的项目，参考相应目录下的 gen_code.bat 即可。\n\n\n# 生成protobuf的定义文件及protobuf数据格式\n\n目前支持proto2和proto3语法\n\n\n# protobuf2\n\n只支持bin格式导出。\n\n取 --gen_types code_protobuf2,data_protobuf_bin 即可，参见 Protobuf2_bin。 每个导出的数据文件对应Table类序列化后的内容，加载即可，以item.TbItem表为例。\n\nvar tbItem = ItemTbItem.Parser.ParseFrom(File.OpenRead("pb_datas/item_tbitem.bytes"));\n\n\n\n1\n2\n\n\n\n# protobuf3\n\n既支持bin格式，也支持json格式导出。\n\n * binary格式导出。 --gen_types code_protobuf3,data_protobuf_bin\n * json格式导出。 --gen_types code_protobuf3,data_protobuf_json\n\n\n# 生成msgpack的数据\n\n取 --gen_types data_msgpack 即可。 参见 MsgPack_bin\n\n\n# 生成flatbuffers的定义文件及flatbuffers数据格式\n\n取 --gen_types code_flatbuffers,data_flatbuffers_json 即可，参见 Flatbuffers_json。\n\n由于binary格式过于复杂，现在只支持导出json格式，但是使用者可以使用flatc工具将数据转成binary！特地生成了 convert_json_2_binary.bat 和convert_json_2_binary.sh这两个批处理文件，方便自动一键转换。\n\n目前由于flat_buffers不支持容器的元素类型为union，因此略微有一些兼容性问题，但在项目中可以通过使用一个bean来包含这个union字段来迂回解决。\n\ndata_flatbuffers_json 和 data_json的输出格式有一些区别\n\n * data_flatbuffers_json 顶层为 包含data_list字段的 table,而 data_json顶层直接对应 data_list的内容\n * flatbuffers不支持本地化。 所以它的text类型导出格式为string，而data_json为 {"key":"xxx", "text":"text}\n * data_flatbuffers_json序列化bean类型字段时，如果遇到多态类型，会多序列化一个string类型的xxx_type字段，用于指示union的类型。也正是如此 data_flatbuffers_json不支持容器中出现union\n * data_flatbuffers_json 输出的数据中，如果包含容器类型数据，并且元素类型为union，则无法被正确解析。\n\n\n# 只生成代码或者数据吗\n\n以 Csharp_Unity_Json 为例。\n\n * --gen_types code_cs_unity_json 则只生成代码\n * --gen_types data_json 则只生成数据\n\n\n# 配置中有些string字段是资源地址，统一导出这些资源地址\n\n首先定义类型时，添加上\'#res=xxx\' 这种标签，xxx可以取任意值。如下所示。\n\n  <bean name="TestRes">\n    <var name="icon" type="string#res=item"/>\n  </bean>\n\n\n1\n2\n3\n\n\n取 \'--gen_types data_resources\'，并且新增参数\'--output:data:resource_list_file resources.txt\'。 运行即可将所有带res标签的数据导出到resources.text文件中。\n\n假设配置表中包含icon="/ui/icon1.jpg" 和 icon="/ui/icon1/jpg" 这两个数据，则导出的资源列表内容为\n\nitem,/ui/icon1.jpg\nitem,/ui/icon2.jpg\n\n\n1\n2\n\n\n参见示例 GenerateDatas/gen_resource_list.bat 文件。\n\n\n# 生成的c#代码中,vector的类型由System.Numerics.Vector{2,3,4}，改成 UnityEngine.Vector{2,3,4}\n\n命令行参数中添加 --use_unity_vector 选项即可。 参见示例 Csharp_Unity_bin_use_UnityEngine_Vector\n\n\n# 自定义代码命名风格\n\n可以。 添加选项 --naming_convention_bean_member none 即可。使生成的代码中的字段名与定义名相同。\n\n支持以下代码命名风格：\n\n * none。 无命名风格，生成的字段名和定义的名称一样\n * language_recommend。即根据生成的语言不同，自动设置该语言推荐的风格。比如c#为PascalCase,java为 camelCase,python为under_scores。\n * camelCalse。 即驼峰形式，生成 xxxYyyy这种风格的字段名。\n * PascalCase。 即Pascal形式。生成XxxYyy这种风格的字段名。\n * under_scores。 下划线形式。即生成xxx_yyy这种风格的字段名。\n\n默认使用 language_recommend。\n\n\n# gen_types中 code_cs_json和code_cs_unity_json 有什么区别\n\ncode_cs_json生成代码中使用了 System.Text.Json库，这个只有.net core 3以后的版本才有，unity目前的.net版本不支持，所以这是给基于.net coer的服务器项目使用的。 code_cs_unity_json使用了第三方的SimpleJson库，兼容unity的.net版本，给unity生成加载json数据的c#代码时，可以（当前也只有这个选择）选择这个。\n\n\n# 命令行参数中的 -j cfg 的含义\n\n-j选项相应的长选项名为--job，表示生成类型。由于luban目前支持消息(proto)、数据库(db)、配置(cfg) 三种类型的生成任务，这些生成任务的功能完全不同，参数 相差较大，需要用-j 来区分不同的生成任务。\n\n\n# 生成的配置代码顶层命名空间是cfg，可以不加这个命名空间或者使用其他值吗？\n\n可以。 __root__.xml中 topmodule 配置项对应的值即为顶层命名空间，可以调整为空或者为其他值。\n\n\n# 生成的数据文件的后缀\n\n数据格式的默认文件后缀如下\n\nDATA            EXTENSION\ndata_bin        bin\ndata_json       json\ndata_json2      json\ndata_lua        lua\ndata_xml        xml\ndata_yaml       yml\ndata_protobuf   bp\n\n可以通过命令行选项"--data_file_extension xxx"手动指定输出文件的后缀。\n\n\n# enum、bean 类型代码导出规则\n\n并非所有定义的类型都会生成代码，必须满足以下规则之一：\n\n * 被导出的table直接或者间接引用的类型\n * root.xml 的 service的 ref项指定的类型。如下图，即使没有任何表直接或者间接引用到test.DemoEnum和test.DemoBean类型，它们也会在server目标时生成代码。\n\n<service name="server" managers="Tables" group="s">\n   <ref name="test.DemoEnum"/>\n   <ref name="test.DemoBean"/>\n</service>\n\n\n1\n2\n3\n4\n\n\n\n# 不同导出格式 性能测试结果\n\n硬件：\n\nIntel(R) Core i7-10700 @ 2.9G 16核\n\n32G 内存\n\n数据集\n\n500个excel表 每个表有1000行比较大的记录 每个表文件大小 132k\n\n测试结果：\n\n格式     首次耗时       累积耗时     单个输出文件大小   输出文件总大小\nbin    15.652 s   797 ms   164 K      59.5 M\njson   17.746 s   796 ms   1.11 M     555 M\nlua    17.323 s   739 ms   433 K      212 M\n\n\n# binary与json格式加载性能对比？\n\n以luban_examples的DesignerConfigs配置为测试数据，以Projects下的csharp_Unity_bin和csharp_Unity_json项目为测试对比， 加载100遍cfg.Table。\n\nbinary格式耗时28ms，json格式耗时112ms。\n\n加载性能大约为 4:1。',normalizedContent:'# 代码与数据生成\n\n\n# 支持的平台、引擎和语言\n\n * 跨平台\n   * win\n   * mac\n   * linux (包括wsl)\n * 支持主流的游戏开发语言\n   * c++ (11+)\n   * c# (.net framework 4+. dotnet core 3+)\n   * java (1.6+)\n   * go (1.10+)\n   * lua (5.1+)\n   * js 和 typescript (3.0+)\n   * python (3.0+)\n   * erlang (18+)\n   * rust (1.5+)\n   * 其他protobuf支持语言\n * 支持主流的引擎\n   * unity\n   * unreal\n   * cocos2d-x\n   * 微信小游戏平台\n   * 其他家支持js的小游戏平台\n * 支持主流的热更新方案\n   * xlua\n   * tolua\n   * slua\n   * ilruntime\n   * sluaunreal\n   * puerts\n   * xil\n * 支持主流的开源框架\n   * skynet\n   * et\n   * gameframework\n   * xlua-framework\n\n\n# 可以导出哪些数据格式\n\n * binary 格式。 格式紧凑，加载高效，但基本不具体可读性。推荐只用于正式发布。\n * json 格式。 可读性佳。支持优雅对齐格式，也支持紧凑格式。 推荐用于服务器端，以及用于客户端开发期。\n * protobuf 格式。适用于熟悉pb的开发者。\n * msgpack 格式。\n * lua 格式。 可读性佳。 推荐仅用于客户端脚本语言为lua的情形。\n * xml 格式。\n * erlang格式。 仅用于 erlang语言。\n * yaml格式。\n * 其他格式。很容易扩展支持。\n\n同一种格式，为不同语言生成的数据是完全相同的。\n\n不同语言支持的格式如下：\n\nlanguage     data type\nc#           binary, json\njava         binary, json\ngo           binary, json\nc++          binary\ngo           binary, json\npython       json\ntypescript   binary, json\nrust         json\nlua          binary, lua\nerlang       erlang\nprotobuf     所有\n\n\n# luban命令行工具的详细文档？\n\n参见 luban命令行\n\n\n# 如何生成代码和数据\n\n详细文档参见上面的链接。代码生成相关的工具有三个,都在luban_examples/tools目录下。\n\n * luban.client。 luban工具客户端\n * luban.server。 luban工具服务器端\n * luban.clientserver。 luban工具前后端一体。\n\n对于新手简单起见，我们介绍luban.clientserver的用法，命令如下：\n\ndotnet %luban_client_server_dll% -j cfg -- ^\n -d %root_file% ^\n --input_data_dir %input_data_dir% ^\n --output_code_dir %output_code_dir%\n --output_data_dir %output_dir% ^\n --gen_types %gen_type% ^\n -s %group%\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n其中：\n\n * luban_client_server_dll为 luban.clientserver.dll的路径， 可以指向 luban_examples/tools/luban.clientserver/luban.clientserver.dll\n * root_file 为根定义文件，指向 myconfigs/define/__root__.xml\n * input_data_dir 为配置数据的根目录，指向 myconfigs/datas\n * output_code_dir 为生成代码的目录\n * gen_type 为生成类型。 如果你使用unity,想生成c#代码，导出json数据，则使用 "code_cs_unity_json,data_json"\n * group 为导出分组。客户端则取client，服务器取server，所有则取all\n\n更多项目类型，参见 示例项目\n\n\n# 为unity项目生成c#代码并导出json数据\n\n对于命令行的介绍参见 上面。 你的生成命令大略如下\n\ndotnet %luban_client_server_dll% -j cfg -- ^\n -d %root_file% ^\n --input_data_dir %input_data_dir% ^\n --output_code_dir %output_code_dir%\n --output_data_dir %output_dir% ^\n --gen_types "code_cs_unity_json,data_json" ^\n -s client\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n也即 --gen_types参数取 "code_cs_unity_json,data_json", -s 参数取 client\n\n具体项目，可参见 csharp_unity_json\n\n更多项目类型，参见 示例项目\n\n\n# 为 unity + puerts 项目生成 ts代码，并生成json数据\n\n--gen_types 参数取 "code_typescript_json,data_json"，-s 参数取 client\n\n具体项目，可参见 typescript_unity_puerts_json\n\n\n# 为 ue4项目，生成c++代码（非蓝图）和binary数据\n\n基准的参考项目为 cpp_unreal_bin。\n\n由于生成的代码依赖于一些头文件，你需要先从该项目 拷备source\\cpp_unreal\\private\\bright 到你们项目合适的位置。必须保证bright目录在include目录路径内，如生成的代码中 #include "bright/serialization/bytebuf.h" 可以找到这个文件。\n\n接着命令行参数取 --gen_types "code_cpp_bin,data_bin"\n\n\n# 为ue4项目，生成c++代码（蓝图）和binary数据\n\n基准的参考项目为 cpp_unreal_bp_bin。\n\n接着命令行参数取 --gen_types "code_cpp_ue_bp_bin,data_bin"\n\n\n# 为ue4项目，生成c++代码（蓝图）和json数据\n\n基准的参考项目为 cpp_unreal_bp_json。\n\n接着命令行参数取 --gen_types "code_cpp_ue_bp_json,data_json"\n\n\n# 其他类型项目类型，如何生成代码和数据\n\n不同项目之间，仅仅是 --gen_types 不一样， 请从示例项目中找到与你项目匹配的项目，参考相应目录下的 gen_code.bat 即可。\n\n\n# 生成protobuf的定义文件及protobuf数据格式\n\n目前支持proto2和proto3语法\n\n\n# protobuf2\n\n只支持bin格式导出。\n\n取 --gen_types code_protobuf2,data_protobuf_bin 即可，参见 protobuf2_bin。 每个导出的数据文件对应table类序列化后的内容，加载即可，以item.tbitem表为例。\n\nvar tbitem = itemtbitem.parser.parsefrom(file.openread("pb_datas/item_tbitem.bytes"));\n\n\n\n1\n2\n\n\n\n# protobuf3\n\n既支持bin格式，也支持json格式导出。\n\n * binary格式导出。 --gen_types code_protobuf3,data_protobuf_bin\n * json格式导出。 --gen_types code_protobuf3,data_protobuf_json\n\n\n# 生成msgpack的数据\n\n取 --gen_types data_msgpack 即可。 参见 msgpack_bin\n\n\n# 生成flatbuffers的定义文件及flatbuffers数据格式\n\n取 --gen_types code_flatbuffers,data_flatbuffers_json 即可，参见 flatbuffers_json。\n\n由于binary格式过于复杂，现在只支持导出json格式，但是使用者可以使用flatc工具将数据转成binary！特地生成了 convert_json_2_binary.bat 和convert_json_2_binary.sh这两个批处理文件，方便自动一键转换。\n\n目前由于flat_buffers不支持容器的元素类型为union，因此略微有一些兼容性问题，但在项目中可以通过使用一个bean来包含这个union字段来迂回解决。\n\ndata_flatbuffers_json 和 data_json的输出格式有一些区别\n\n * data_flatbuffers_json 顶层为 包含data_list字段的 table,而 data_json顶层直接对应 data_list的内容\n * flatbuffers不支持本地化。 所以它的text类型导出格式为string，而data_json为 {"key":"xxx", "text":"text}\n * data_flatbuffers_json序列化bean类型字段时，如果遇到多态类型，会多序列化一个string类型的xxx_type字段，用于指示union的类型。也正是如此 data_flatbuffers_json不支持容器中出现union\n * data_flatbuffers_json 输出的数据中，如果包含容器类型数据，并且元素类型为union，则无法被正确解析。\n\n\n# 只生成代码或者数据吗\n\n以 csharp_unity_json 为例。\n\n * --gen_types code_cs_unity_json 则只生成代码\n * --gen_types data_json 则只生成数据\n\n\n# 配置中有些string字段是资源地址，统一导出这些资源地址\n\n首先定义类型时，添加上\'#res=xxx\' 这种标签，xxx可以取任意值。如下所示。\n\n  <bean name="testres">\n    <var name="icon" type="string#res=item"/>\n  </bean>\n\n\n1\n2\n3\n\n\n取 \'--gen_types data_resources\'，并且新增参数\'--output:data:resource_list_file resources.txt\'。 运行即可将所有带res标签的数据导出到resources.text文件中。\n\n假设配置表中包含icon="/ui/icon1.jpg" 和 icon="/ui/icon1/jpg" 这两个数据，则导出的资源列表内容为\n\nitem,/ui/icon1.jpg\nitem,/ui/icon2.jpg\n\n\n1\n2\n\n\n参见示例 generatedatas/gen_resource_list.bat 文件。\n\n\n# 生成的c#代码中,vector的类型由system.numerics.vector{2,3,4}，改成 unityengine.vector{2,3,4}\n\n命令行参数中添加 --use_unity_vector 选项即可。 参见示例 csharp_unity_bin_use_unityengine_vector\n\n\n# 自定义代码命名风格\n\n可以。 添加选项 --naming_convention_bean_member none 即可。使生成的代码中的字段名与定义名相同。\n\n支持以下代码命名风格：\n\n * none。 无命名风格，生成的字段名和定义的名称一样\n * language_recommend。即根据生成的语言不同，自动设置该语言推荐的风格。比如c#为pascalcase,java为 camelcase,python为under_scores。\n * camelcalse。 即驼峰形式，生成 xxxyyyy这种风格的字段名。\n * pascalcase。 即pascal形式。生成xxxyyy这种风格的字段名。\n * under_scores。 下划线形式。即生成xxx_yyy这种风格的字段名。\n\n默认使用 language_recommend。\n\n\n# gen_types中 code_cs_json和code_cs_unity_json 有什么区别\n\ncode_cs_json生成代码中使用了 system.text.json库，这个只有.net core 3以后的版本才有，unity目前的.net版本不支持，所以这是给基于.net coer的服务器项目使用的。 code_cs_unity_json使用了第三方的simplejson库，兼容unity的.net版本，给unity生成加载json数据的c#代码时，可以（当前也只有这个选择）选择这个。\n\n\n# 命令行参数中的 -j cfg 的含义\n\n-j选项相应的长选项名为--job，表示生成类型。由于luban目前支持消息(proto)、数据库(db)、配置(cfg) 三种类型的生成任务，这些生成任务的功能完全不同，参数 相差较大，需要用-j 来区分不同的生成任务。\n\n\n# 生成的配置代码顶层命名空间是cfg，可以不加这个命名空间或者使用其他值吗？\n\n可以。 __root__.xml中 topmodule 配置项对应的值即为顶层命名空间，可以调整为空或者为其他值。\n\n\n# 生成的数据文件的后缀\n\n数据格式的默认文件后缀如下\n\ndata            extension\ndata_bin        bin\ndata_json       json\ndata_json2      json\ndata_lua        lua\ndata_xml        xml\ndata_yaml       yml\ndata_protobuf   bp\n\n可以通过命令行选项"--data_file_extension xxx"手动指定输出文件的后缀。\n\n\n# enum、bean 类型代码导出规则\n\n并非所有定义的类型都会生成代码，必须满足以下规则之一：\n\n * 被导出的table直接或者间接引用的类型\n * root.xml 的 service的 ref项指定的类型。如下图，即使没有任何表直接或者间接引用到test.demoenum和test.demobean类型，它们也会在server目标时生成代码。\n\n<service name="server" managers="tables" group="s">\n   <ref name="test.demoenum"/>\n   <ref name="test.demobean"/>\n</service>\n\n\n1\n2\n3\n4\n\n\n\n# 不同导出格式 性能测试结果\n\n硬件：\n\nintel(r) core i7-10700 @ 2.9g 16核\n\n32g 内存\n\n数据集\n\n500个excel表 每个表有1000行比较大的记录 每个表文件大小 132k\n\n测试结果：\n\n格式     首次耗时       累积耗时     单个输出文件大小   输出文件总大小\nbin    15.652 s   797 ms   164 k      59.5 m\njson   17.746 s   796 ms   1.11 m     555 m\nlua    17.323 s   739 ms   433 k      212 m\n\n\n# binary与json格式加载性能对比？\n\n以luban_examples的designerconfigs配置为测试数据，以projects下的csharp_unity_bin和csharp_unity_json项目为测试对比， 加载100遍cfg.table。\n\nbinary格式耗时28ms，json格式耗时112ms。\n\n加载性能大约为 4:1。',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/feature.html",relativePath:"feature.md",key:"v-b0c67b38",path:"/feature.html",headers:[{level:2,title:"多种数据源支持",slug:"多种数据源支持",normalizedTitle:"多种数据源支持",charIndex:53},{level:2,title:"增强的excel格式",slug:"增强的excel格式",normalizedTitle:"增强的excel格式",charIndex:128},{level:2,title:"强大完备的类型系统",slug:"强大完备的类型系统",normalizedTitle:"强大完备的类型系统",charIndex:171},{level:2,title:"支持多种导出数据格式",slug:"支持多种导出数据格式",normalizedTitle:"支持多种导出数据格式",charIndex:759},{level:2,title:"灵活的配置文件组织形式",slug:"灵活的配置文件组织形式",normalizedTitle:"灵活的配置文件组织形式",charIndex:1001},{level:2,title:"分组导出",slug:"分组导出",normalizedTitle:"分组导出",charIndex:1255},{level:2,title:"强大的数据校验器",slug:"强大的数据校验器",normalizedTitle:"强大的数据校验器",charIndex:1345},{level:2,title:"支持多种常见数据表模式",slug:"支持多种常见数据表模式",normalizedTitle:"支持多种常见数据表模式",charIndex:1443},{level:2,title:"支持external type，即外部类",slug:"支持external-type-即外部类",normalizedTitle:"支持external type，即外部类",charIndex:1532},{level:2,title:"数据标签",slug:"数据标签",normalizedTitle:"数据标签",charIndex:1671},{level:2,title:"代码与数据模板，强大灵活的定制能力",slug:"代码与数据模板-强大灵活的定制能力",normalizedTitle:"代码与数据模板，强大灵活的定制能力",charIndex:1727},{level:2,title:"完善的本地化支持",slug:"完善的本地化支持",normalizedTitle:"完善的本地化支持",charIndex:1905},{level:2,title:"极高的生成性能",slug:"极高的生成性能",normalizedTitle:"极高的生成性能",charIndex:2233},{level:2,title:"支持主流的游戏开发语言",slug:"支持主流的游戏开发语言",normalizedTitle:"支持主流的游戏开发语言",charIndex:2360},{level:2,title:"支持主流引擎和平台",slug:"支持主流引擎和平台",normalizedTitle:"支持主流引擎和平台",charIndex:2592}],lastUpdated:"12/24/2021, 1:58:44 PM",lastUpdatedTimestamp:1640325524e3,headersStr:"多种数据源支持 增强的excel格式 强大完备的类型系统 支持多种导出数据格式 灵活的配置文件组织形式 分组导出 强大的数据校验器 支持多种常见数据表模式 支持external type，即外部类 数据标签 代码与数据模板，强大灵活的定制能力 完善的本地化支持 极高的生成性能 支持主流的游戏开发语言 支持主流引擎和平台",content:"# 特性说明\n\n----------------------------------------\n\n\n# 多种数据源支持\n\n支持excel族、json、xml、lua、yaml、unity asset 多种数据格式，基本统一了游戏常见的配置数据。\n\n\n# 增强的excel格式\n\n可以在excel里比较简洁填写出任意复杂的嵌套数据。\n\n\n# 强大完备的类型系统\n\n可以优雅表达任意复杂的数据结构。\n\n * 基础内置类型\n   \n   * bool,byte,short,fshort,int,fint,long,flong,float,double,string,text,bytes\n   * vector2, vector3,vector4\n   * datetime\n\n * 可空类型\n   \n   除了容器类型以外的类型，都支持相应的可空数据结构。如 bool?, string?, MyEnum? MyBean? 。\n\n * 自定义枚举 enum\n\n * 自定义结构 bean\n   \n   * 可以定义所有类型的字段\n   * 支持无限制的结构继承,对于表达中大型项目的复杂数据(技能,buff,ai 等等) 极其有用。 (比如基类Shape, 子类 Circle,Rectangle\n\n * 支持容器类型 array。 value 可以为内置类型，也可以为自定义类型\n\n * 支持容器类型 list。 value 可以为内置类型，也可以为自定义类型\n\n * 支持容器类型 set。 value 只能为内置类型或者enum类型，不支持 bean 类型\n\n * 支持容器类型 map。 key 只能为内置类型或者enum类型，不支持 bean 类型。 value 可以为内置类型，也可以为自定义类型\n\n\n# 支持多种导出数据格式\n\n * 支持生成protobuf、msgpack、flatbuffers相应的定义文件及相应的数据文件（直接反射导出，高效，并不需要生成代码后再利用生成的代码加载导出）\n * 多种导出数据格式支持。支持binary、json、protobuf、msgpack、flatbuffers、lua、xml、erlang、xlsx 及自定义的导出数据格式\n * 支持xlsx与json、lua、xml、yaml等格式之间互转\n * 导出配置中所有资源字符串列表\n\n\n# 灵活的配置文件组织形式\n\n支持以下几种组织形式，允许开发者根据情况灵活组织配置文件结构。例如可以一个表对应一个xlsx文件；可以多个表都放到同个xlsx文件；可以一个表对应多个xlsx文件；可以一个表对应一个目录。\n\n * 来自某个excel文件的所有单元薄\n * 来自某个excel文件的指定单元薄\n * 来自json、xml、lua、yaml文件\n * 来自json、xml、lua、yaml子字段 (如root.a.b)\n * 来自目录树下所有文件，每个文件对应一个记录\n * 以上的随意组合\n\n\n# 分组导出\n\n灵活的分组定义，不仅仅是client和server分组。支持以下分组粒度：\n\n * 表级别分组\n * 字段级别分组(任意bean字段粒度，而不仅限于顶层字段)\n\n\n# 强大的数据校验器\n\n * ref 。id合法性检查\n * path 。资源合法性检查\n * range 。 数据范围检查\n * set 。 数据集合检查\n * size 。 容器大小检查\n\n\n# 支持多种常见数据表模式\n\n * singleton(单例表)\n\n * map（常规key-value表）\n\n * list(支持无索引、多主键联合索引、多主键独立索引)\n\n\n# 支持external type，即外部类\n\n * 支持外部enum类型。你可以在配置中引用现成的enum类，比如UnityEngine.AudioType。\n * 支持外部class类型。你可以在配置中引用现成的class类，比如 UnityEngine.Color。\n\n\n# 数据标签\n\n支持数据标签。 可以选择导出符合要求的数据，发布正式数据时策划不必手动注释掉那些测试数据了\n\n\n# 代码与数据模板，强大灵活的定制能力\n\n * 支持代码模板，可以用自定义模板定制生成的代码格式\n\n * 支持数据模板，可以用模板文件定制导出格式。意味着可以在不改动现有程序代码的情况下，把luban当作配置处理前端，生成自定义格式的数据与自己项目的配置加载代码配合工作。开发已久的项目或者已经上线的老项目，也能从luban强大的数据处理工作流中获益\n\n\n# 完善的本地化支持\n\n * 支持时间本地化。datetime类型数据会根据指定的timezone，转换为目标地区该时刻的UTC时间，方便程序使用。\n\n * 支持文本静态本地化。导出时所有text类型数据正确替换为最终的本地化字符串。绝大多数的业务功能不再需要运行根据本地化id去查找文本的内容，简化程序员的工作。\n\n * 支持文本动态本地化。运行时动态切换所有text类型数据为目标本地化字符串。\n\n * 支持 main + patches 数据合并。在基础数据上，施加差分数据，生成最终完整数据，适用于制作有细微不同的多地区的配置数据。\n\n * [TODO] 【独创】 支持任意粒度和任意类型数据（如int,bean,list,map）的本地化。\n\n\n# 极高的生成性能\n\n * 支持云生成。 利用远程生成缓存，MMORPG这样大型项目也能秒内生成，日志增量生成基本在300ms以内。\n\n * 支持本地生成。支持常规的本地缓存增量生成模式。\n\n * 支持watch监测模式，数据目录变化立即重新生成。\n\n\n# 支持主流的游戏开发语言\n\n * c++ (11+)\n * c# (.net framework 4+. dotnet core 3+)\n * java (1.6+)\n * go (1.10+)\n * lua (5.1+)\n * js 和 typescript (3.0+)\n * python (2.7,3.0+)\n * erlang (18+)\n * rust (1.5+)\n * 其他protobuf、msgpack、flatbuffers支持的语言\n\n\n# 支持主流引擎和平台\n\n * unity + c#\n * unity + tolua、xlua\n * unity + ILRuntime\n * unity + puerts\n * unity + GameFramework\n * unity + ET游戏框架\n * unreal + c++\n * unreal + unlua\n * unreal + sluaunreal\n * unreal + puerts\n * cocos2d-x + lua\n * cocos2d-x + js\n * skynet\n * 微信小程序平台\n * 其他家基于js的小程序平台\n * 其他所有支持lua的引擎和平台\n * 其他所有支持js的引擎和平台",normalizedContent:"# 特性说明\n\n----------------------------------------\n\n\n# 多种数据源支持\n\n支持excel族、json、xml、lua、yaml、unity asset 多种数据格式，基本统一了游戏常见的配置数据。\n\n\n# 增强的excel格式\n\n可以在excel里比较简洁填写出任意复杂的嵌套数据。\n\n\n# 强大完备的类型系统\n\n可以优雅表达任意复杂的数据结构。\n\n * 基础内置类型\n   \n   * bool,byte,short,fshort,int,fint,long,flong,float,double,string,text,bytes\n   * vector2, vector3,vector4\n   * datetime\n\n * 可空类型\n   \n   除了容器类型以外的类型，都支持相应的可空数据结构。如 bool?, string?, myenum? mybean? 。\n\n * 自定义枚举 enum\n\n * 自定义结构 bean\n   \n   * 可以定义所有类型的字段\n   * 支持无限制的结构继承,对于表达中大型项目的复杂数据(技能,buff,ai 等等) 极其有用。 (比如基类shape, 子类 circle,rectangle\n\n * 支持容器类型 array。 value 可以为内置类型，也可以为自定义类型\n\n * 支持容器类型 list。 value 可以为内置类型，也可以为自定义类型\n\n * 支持容器类型 set。 value 只能为内置类型或者enum类型，不支持 bean 类型\n\n * 支持容器类型 map。 key 只能为内置类型或者enum类型，不支持 bean 类型。 value 可以为内置类型，也可以为自定义类型\n\n\n# 支持多种导出数据格式\n\n * 支持生成protobuf、msgpack、flatbuffers相应的定义文件及相应的数据文件（直接反射导出，高效，并不需要生成代码后再利用生成的代码加载导出）\n * 多种导出数据格式支持。支持binary、json、protobuf、msgpack、flatbuffers、lua、xml、erlang、xlsx 及自定义的导出数据格式\n * 支持xlsx与json、lua、xml、yaml等格式之间互转\n * 导出配置中所有资源字符串列表\n\n\n# 灵活的配置文件组织形式\n\n支持以下几种组织形式，允许开发者根据情况灵活组织配置文件结构。例如可以一个表对应一个xlsx文件；可以多个表都放到同个xlsx文件；可以一个表对应多个xlsx文件；可以一个表对应一个目录。\n\n * 来自某个excel文件的所有单元薄\n * 来自某个excel文件的指定单元薄\n * 来自json、xml、lua、yaml文件\n * 来自json、xml、lua、yaml子字段 (如root.a.b)\n * 来自目录树下所有文件，每个文件对应一个记录\n * 以上的随意组合\n\n\n# 分组导出\n\n灵活的分组定义，不仅仅是client和server分组。支持以下分组粒度：\n\n * 表级别分组\n * 字段级别分组(任意bean字段粒度，而不仅限于顶层字段)\n\n\n# 强大的数据校验器\n\n * ref 。id合法性检查\n * path 。资源合法性检查\n * range 。 数据范围检查\n * set 。 数据集合检查\n * size 。 容器大小检查\n\n\n# 支持多种常见数据表模式\n\n * singleton(单例表)\n\n * map（常规key-value表）\n\n * list(支持无索引、多主键联合索引、多主键独立索引)\n\n\n# 支持external type，即外部类\n\n * 支持外部enum类型。你可以在配置中引用现成的enum类，比如unityengine.audiotype。\n * 支持外部class类型。你可以在配置中引用现成的class类，比如 unityengine.color。\n\n\n# 数据标签\n\n支持数据标签。 可以选择导出符合要求的数据，发布正式数据时策划不必手动注释掉那些测试数据了\n\n\n# 代码与数据模板，强大灵活的定制能力\n\n * 支持代码模板，可以用自定义模板定制生成的代码格式\n\n * 支持数据模板，可以用模板文件定制导出格式。意味着可以在不改动现有程序代码的情况下，把luban当作配置处理前端，生成自定义格式的数据与自己项目的配置加载代码配合工作。开发已久的项目或者已经上线的老项目，也能从luban强大的数据处理工作流中获益\n\n\n# 完善的本地化支持\n\n * 支持时间本地化。datetime类型数据会根据指定的timezone，转换为目标地区该时刻的utc时间，方便程序使用。\n\n * 支持文本静态本地化。导出时所有text类型数据正确替换为最终的本地化字符串。绝大多数的业务功能不再需要运行根据本地化id去查找文本的内容，简化程序员的工作。\n\n * 支持文本动态本地化。运行时动态切换所有text类型数据为目标本地化字符串。\n\n * 支持 main + patches 数据合并。在基础数据上，施加差分数据，生成最终完整数据，适用于制作有细微不同的多地区的配置数据。\n\n * [todo] 【独创】 支持任意粒度和任意类型数据（如int,bean,list,map）的本地化。\n\n\n# 极高的生成性能\n\n * 支持云生成。 利用远程生成缓存，mmorpg这样大型项目也能秒内生成，日志增量生成基本在300ms以内。\n\n * 支持本地生成。支持常规的本地缓存增量生成模式。\n\n * 支持watch监测模式，数据目录变化立即重新生成。\n\n\n# 支持主流的游戏开发语言\n\n * c++ (11+)\n * c# (.net framework 4+. dotnet core 3+)\n * java (1.6+)\n * go (1.10+)\n * lua (5.1+)\n * js 和 typescript (3.0+)\n * python (2.7,3.0+)\n * erlang (18+)\n * rust (1.5+)\n * 其他protobuf、msgpack、flatbuffers支持的语言\n\n\n# 支持主流引擎和平台\n\n * unity + c#\n * unity + tolua、xlua\n * unity + ilruntime\n * unity + puerts\n * unity + gameframework\n * unity + et游戏框架\n * unreal + c++\n * unreal + unlua\n * unreal + sluaunreal\n * unreal + puerts\n * cocos2d-x + lua\n * cocos2d-x + js\n * skynet\n * 微信小程序平台\n * 其他家基于js的小程序平台\n * 其他所有支持lua的引擎和平台\n * 其他所有支持js的引擎和平台",charsets:{cjk:!0}},{title:"欢迎使用 Luban",frontmatter:{},regularPath:"/",relativePath:"index.md",key:"v-35dfc85d",path:"/",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:17},{level:2,title:"文档",slug:"文档",normalizedTitle:"文档",charIndex:383},{level:2,title:"支持和联系",slug:"支持和联系",normalizedTitle:"支持和联系",charIndex:397}],lastUpdated:"12/3/2021, 3:11:18 PM",lastUpdatedTimestamp:1638515478e3,headersStr:"介绍 文档 支持和联系",content:"# 欢迎使用 Luban\n\n\n# 介绍\n\nLuban 是一个强大的生成与缓存工具。最初只用于对象生成，对象可以是常规代码、配置数据、类似protobuf的消息代码，也可以是游戏资源如assetbundle。 在大型项目中，由于配置或资源数据庞大，生成对象可能会花费相当多的时间。比如一个典型的MMORPG项目，后期全量生成配置，即使用了多线程加速，所需时间 也在10秒的级别。因此使用client/server模式配合缓存机制来大幅加速生成过程。\n\nLuban 最初是为了解决传统excel导出工具功能过于薄弱，无法很好解决MMORPG游戏复杂配置需求的痛点问题。 自2015年以来，经历过 MMORPG、卡牌、SLG 等多个上线项目的考验， 实际项目过程中不断迭代和优化，理解逐渐深入，最终由一个增强型的配置工具成为一个 相对完备的游戏配置数据解决方案。\n\n\n# 文档\n\n * 目录\n\n\n# 支持和联系\n\nQQ 群 : 692890842\nQQ 群名 : Luban 开发交流群\n邮箱 : taojingjian#gmail.com",normalizedContent:"# 欢迎使用 luban\n\n\n# 介绍\n\nluban 是一个强大的生成与缓存工具。最初只用于对象生成，对象可以是常规代码、配置数据、类似protobuf的消息代码，也可以是游戏资源如assetbundle。 在大型项目中，由于配置或资源数据庞大，生成对象可能会花费相当多的时间。比如一个典型的mmorpg项目，后期全量生成配置，即使用了多线程加速，所需时间 也在10秒的级别。因此使用client/server模式配合缓存机制来大幅加速生成过程。\n\nluban 最初是为了解决传统excel导出工具功能过于薄弱，无法很好解决mmorpg游戏复杂配置需求的痛点问题。 自2015年以来，经历过 mmorpg、卡牌、slg 等多个上线项目的考验， 实际项目过程中不断迭代和优化，理解逐渐深入，最终由一个增强型的配置工具成为一个 相对完备的游戏配置数据解决方案。\n\n\n# 文档\n\n * 目录\n\n\n# 支持和联系\n\nqq 群 : 692890842\nqq 群名 : luban 开发交流群\n邮箱 : taojingjian#gmail.com",charsets:{cjk:!0}},{title:"本地化",frontmatter:{},regularPath:"/l10n.html",relativePath:"l10n.md",key:"v-2084f0ca",path:"/l10n.html",headers:[{level:2,title:"静态文本值本地化",slug:"静态文本值本地化",normalizedTitle:"静态文本值本地化",charIndex:41},{level:3,title:"需要本地化的示例表",slug:"需要本地化的示例表",normalizedTitle:"需要本地化的示例表",charIndex:247},{level:3,title:"文本值映射文件",slug:"文本值映射文件",normalizedTitle:"文本值映射文件",charIndex:494},{level:2,title:"Luban.Client 命令",slug:"luban-client-命令",normalizedTitle:"luban.client 命令",charIndex:768},{level:2,title:"示例输出结果",slug:"示例输出结果",normalizedTitle:"示例输出结果",charIndex:1343},{level:2,title:"文本值动态本地化",slug:"文本值动态本地化",normalizedTitle:"文本值动态本地化",charIndex:1945},{level:2,title:"多分支 数据",slug:"多分支-数据",normalizedTitle:"多分支 数据",charIndex:3343},{level:2,title:"时间本地化",slug:"时间本地化",normalizedTitle:"时间本地化",charIndex:3475}],lastUpdated:"12/22/2021, 9:38:49 AM",lastUpdatedTimestamp:1640137129e3,headersStr:"静态文本值本地化 需要本地化的示例表 文本值映射文件 Luban.Client 命令 示例输出结果 文本值动态本地化 多分支 数据 时间本地化",content:'# 本地化\n\n支持多种本地化机制，分别处理不同的场合，它们可以同时使用。\n\n\n# 静态文本值本地化\n\n对于需要本地化的文本值，在配置导出时既已完成本地化的转化，适用于不同地区打不同包或者不同配置的情形。通过以下几个方面来实现静态文本值本地化：\n\n * 使用 text 类型标识需要本地化的字符串。 text类型由两个字段构成, key和value。\n * 使用本地化映射表提供text到其他语言的映射\n * 未完成本地化的text单独输出到一个文件，方便得知哪些文本值未完成本地化映射\n\n\n# 需要本地化的示例表\n\n##var    id    name              desc     count\n##type   int   text              string   int\n         1     /demo/key1   苹果   这是一个苹果   100\n         2     /demo/key2   香蕉   这是香蕉     100\n         3     /demo/key3   西瓜   这是西瓜     100\n\n\n# 文本值映射文件\n\n##VAR    KEY          ORIGIN_TEXT   TEXT_TW   TEXT_EN\n##type   string       string        string    string\n##       本地化key       原始值           繁体值       英文\n         /demo/key1   苹果            苹果        apple\n         /demo/key2   香蕉            香蕉        banana\n\n\n# Luban.Client 命令\n\n有三个参数跟静态文本值本地化相关\n\n * l10n:input_text_files 本地化映射文件\n * l10n:text_field_name 映射的目标字段名。因为有可能多个语言都在同一个映射表内(如text_tw和text_en)\n * l10n:output_not_translated_text_file 未完成文本值本地化映射的text\n\n以下为一个示例脚本\n\n%GEN_CLIENT% -h %LUBAN_SERVER_IP% -j cfg --^\n -d %DEFINE_FILE%^\n --input_data_dir %CONF_ROOT%\\Datas ^\n --output_code_dir Gen ^\n --output_data_dir config_data ^\n --gen_types data_json ^\n -s all  ^\n--input_l10n_text_files l10n/cn/TextTable_CN.xlsx ^\n--l10n_text_field_name text_en ^\n--output_l10n_not_translated_text_file NotLocalized_CN.txt\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 示例输出结果\n\n导出json文件内容为\n\n[\n  {\n    "id": 1,\n    "text": {\n      "key": "/demo/key1",\n      "text": "apple"\n    },\n    "desc": "这是一个苹果",\n    "count": 100\n  },\n  {\n    "id": 2,\n    "text": {\n      "key": "/demo/key2",\n      "text": "banana"\n    },\n    "desc": "这是香蕉",\n    "count":100\n  },\n  {\n    "id": 3,\n    "text": {\n      "key": "/demo/key3",\n      "text": "西瓜"\n    },\n    "desc":"这是西瓜",\n    "count": 100\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n示例中 /demo/key3 在本地化映射表中未提供，因为output_l10n_not_translated_text_file 指定的未映射本地化文本值列表内容为。\n\n/demo/key3|这是西瓜\n\n\n1\n\n\n\n# 文本值动态本地化\n\n运行时动态切换text类型字段到目标语言，程序不需要根据id去本地化映射表里查询，简化了使用。注意，目前只有bean中text类型字段才支持，像list,text之类的暂未支持。通过以下几个方面支持文本值动态本地化：\n\n * 标识字段为text类型\n * 提供 (string key, string origin_value) => (string target_value) 的本地化映射函数\n * 运行时调用 cfg.Tables.TranslateText函数，一键切换配置中所有text类型值到目标语言\n * 为text类型字段额外生成了string {field}_l10n_text字段，运行时可以拿着这个字段去本地化映射表查询它在其他语言的文本值\n\n本地化映射函数实现比较简单，核心在于如何制作文本值本地化映射配置？使用者既可以使用自定义本地化映射表，可以使用普通的 luban配置表来提供 文本值映射配置，如下图:\n\n##VAR    KEY          ORIGIN_TEXT   TEXT_TW   TEXT_EN\n##type   string       string        string    string\n##       本地化key       原始值           繁体值       英文\n         /demo/key1   苹果            苹果        apple\n         /demo/key2   香蕉            香蕉        banana\n\n通过提供不同的映射函数，来实现到不同目标语言的切换，例如\n\n\n/// 用于切换到en\nstring TextMapper_en(string key, string originText) \n{\n    return tables.TbTextMapper.GetOrDefault(key)?.TextEn ?? originText;\n}\n\n/// 用于切换到tw\nstring TextMapper_tw(string key, string originText) \n{\n    return tables.TbTextMapper.GetOrDefault(key)?.TextTw ?? originText;\n}\n\n\nvoid SwitchLanguages(cfg.Tables tables)\n{\n  // 切换所有text字段到 en\n   tables.TranslateText(TextMapper_en);\n\n  // 切换所有text字段到 tw\n   tables.TranslateText(TextMapper_tw);\n\n\n  // 当前语言为tw的情况下，不使用切换，\n  // 获得道具1001的desc字段对应的英语文本\n  var desc_en = table.TbTextMapper.Get(tables.TbItem.Get(1001).Desc_l10n_key).TextEn;\n}\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 多分支 数据\n\n支持 main + patches的数据模式。在主版本数据基础上，提供一个补丁数据，合并处理后生成最终目标数据。适合制作海外有细节配置不同的多地区配置，不需要 复制出主版本数据，接着在上面修改出最终数据。极大优化了制作本地化配置的工作流。\n\n\n# 时间本地化\n\ndatetime类型数据在指定了本地化时区后，会根据目标时区，生成相应时刻的UTC时间，方便程序使用.\n\n通过Luban.Client的参数来指定时区：\n\n-t,--l10n_timezone {timezone}\n\n该时区为linux或win下的时区名，例如: -t "Asia/Shanghai" 或者 -t "China Standard Time" 指定目标时区为 亚洲上海（也即北京时间）',normalizedContent:'# 本地化\n\n支持多种本地化机制，分别处理不同的场合，它们可以同时使用。\n\n\n# 静态文本值本地化\n\n对于需要本地化的文本值，在配置导出时既已完成本地化的转化，适用于不同地区打不同包或者不同配置的情形。通过以下几个方面来实现静态文本值本地化：\n\n * 使用 text 类型标识需要本地化的字符串。 text类型由两个字段构成, key和value。\n * 使用本地化映射表提供text到其他语言的映射\n * 未完成本地化的text单独输出到一个文件，方便得知哪些文本值未完成本地化映射\n\n\n# 需要本地化的示例表\n\n##var    id    name              desc     count\n##type   int   text              string   int\n         1     /demo/key1   苹果   这是一个苹果   100\n         2     /demo/key2   香蕉   这是香蕉     100\n         3     /demo/key3   西瓜   这是西瓜     100\n\n\n# 文本值映射文件\n\n##var    key          origin_text   text_tw   text_en\n##type   string       string        string    string\n##       本地化key       原始值           繁体值       英文\n         /demo/key1   苹果            苹果        apple\n         /demo/key2   香蕉            香蕉        banana\n\n\n# luban.client 命令\n\n有三个参数跟静态文本值本地化相关\n\n * l10n:input_text_files 本地化映射文件\n * l10n:text_field_name 映射的目标字段名。因为有可能多个语言都在同一个映射表内(如text_tw和text_en)\n * l10n:output_not_translated_text_file 未完成文本值本地化映射的text\n\n以下为一个示例脚本\n\n%gen_client% -h %luban_server_ip% -j cfg --^\n -d %define_file%^\n --input_data_dir %conf_root%\\datas ^\n --output_code_dir gen ^\n --output_data_dir config_data ^\n --gen_types data_json ^\n -s all  ^\n--input_l10n_text_files l10n/cn/texttable_cn.xlsx ^\n--l10n_text_field_name text_en ^\n--output_l10n_not_translated_text_file notlocalized_cn.txt\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 示例输出结果\n\n导出json文件内容为\n\n[\n  {\n    "id": 1,\n    "text": {\n      "key": "/demo/key1",\n      "text": "apple"\n    },\n    "desc": "这是一个苹果",\n    "count": 100\n  },\n  {\n    "id": 2,\n    "text": {\n      "key": "/demo/key2",\n      "text": "banana"\n    },\n    "desc": "这是香蕉",\n    "count":100\n  },\n  {\n    "id": 3,\n    "text": {\n      "key": "/demo/key3",\n      "text": "西瓜"\n    },\n    "desc":"这是西瓜",\n    "count": 100\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n示例中 /demo/key3 在本地化映射表中未提供，因为output_l10n_not_translated_text_file 指定的未映射本地化文本值列表内容为。\n\n/demo/key3|这是西瓜\n\n\n1\n\n\n\n# 文本值动态本地化\n\n运行时动态切换text类型字段到目标语言，程序不需要根据id去本地化映射表里查询，简化了使用。注意，目前只有bean中text类型字段才支持，像list,text之类的暂未支持。通过以下几个方面支持文本值动态本地化：\n\n * 标识字段为text类型\n * 提供 (string key, string origin_value) => (string target_value) 的本地化映射函数\n * 运行时调用 cfg.tables.translatetext函数，一键切换配置中所有text类型值到目标语言\n * 为text类型字段额外生成了string {field}_l10n_text字段，运行时可以拿着这个字段去本地化映射表查询它在其他语言的文本值\n\n本地化映射函数实现比较简单，核心在于如何制作文本值本地化映射配置？使用者既可以使用自定义本地化映射表，可以使用普通的 luban配置表来提供 文本值映射配置，如下图:\n\n##var    key          origin_text   text_tw   text_en\n##type   string       string        string    string\n##       本地化key       原始值           繁体值       英文\n         /demo/key1   苹果            苹果        apple\n         /demo/key2   香蕉            香蕉        banana\n\n通过提供不同的映射函数，来实现到不同目标语言的切换，例如\n\n\n/// 用于切换到en\nstring textmapper_en(string key, string origintext) \n{\n    return tables.tbtextmapper.getordefault(key)?.texten ?? origintext;\n}\n\n/// 用于切换到tw\nstring textmapper_tw(string key, string origintext) \n{\n    return tables.tbtextmapper.getordefault(key)?.texttw ?? origintext;\n}\n\n\nvoid switchlanguages(cfg.tables tables)\n{\n  // 切换所有text字段到 en\n   tables.translatetext(textmapper_en);\n\n  // 切换所有text字段到 tw\n   tables.translatetext(textmapper_tw);\n\n\n  // 当前语言为tw的情况下，不使用切换，\n  // 获得道具1001的desc字段对应的英语文本\n  var desc_en = table.tbtextmapper.get(tables.tbitem.get(1001).desc_l10n_key).texten;\n}\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 多分支 数据\n\n支持 main + patches的数据模式。在主版本数据基础上，提供一个补丁数据，合并处理后生成最终目标数据。适合制作海外有细节配置不同的多地区配置，不需要 复制出主版本数据，接着在上面修改出最终数据。极大优化了制作本地化配置的工作流。\n\n\n# 时间本地化\n\ndatetime类型数据在指定了本地化时区后，会根据目标时区，生成相应时刻的utc时间，方便程序使用.\n\n通过luban.client的参数来指定时区：\n\n-t,--l10n_timezone {timezone}\n\n该时区为linux或win下的时区名，例如: -t "asia/shanghai" 或者 -t "china standard time" 指定目标时区为 亚洲上海（也即北京时间）',charsets:{cjk:!0}},{title:"运行时加载配置",frontmatter:{},regularPath:"/load_config_at_runtime.html",relativePath:"load_config_at_runtime.md",key:"v-764374f0",path:"/load_config_at_runtime.html",headers:[{level:2,title:"unity + json 项目中使用luban生成代码，需要依赖哪些库",slug:"unity-json-项目中使用luban生成代码-需要依赖哪些库",normalizedTitle:"unity + json 项目中使用luban生成代码，需要依赖哪些库",charIndex:14},{level:2,title:"在其他项目中使用luban生成代码，需要依赖哪些库",slug:"在其他项目中使用luban生成代码-需要依赖哪些库",normalizedTitle:"在其他项目中使用luban生成代码，需要依赖哪些库",charIndex:80},{level:2,title:"我把代码加入项目，发现有编译错误，找不到 ByteBuf类，如何解决？",slug:"我把代码加入项目-发现有编译错误-找不到-bytebuf类-如何解决",normalizedTitle:"我把代码加入项目，发现有编译错误，找不到 bytebuf类，如何解决？",charIndex:157},{level:2,title:"在unity项目中使用c#代码加载json配置",slug:"在unity项目中使用c-代码加载json配置",normalizedTitle:"在unity项目中使用c#代码加载json配置",charIndex:231},{level:2,title:"在unity+puers项目中使用typescript加载json配置",slug:"在unity-puers项目中使用typescript加载json配置",normalizedTitle:"在unity+puers项目中使用typescript加载json配置",charIndex:623},{level:2,title:"如何在go项目中加载json配置",slug:"如何在go项目中加载json配置",normalizedTitle:"如何在go项目中加载json配置",charIndex:940},{level:2,title:"python 2 + json",slug:"python-2-json",normalizedTitle:"python 2 + json",charIndex:1258},{level:2,title:"如果我用的语言是java,python,c++,rust,lua 等等，如何加载配置",slug:"如果我用的语言是java-python-c-rust-lua-等等-如何加载配置",normalizedTitle:"如果我用的语言是java,python,c++,rust,lua 等等，如何加载配置",charIndex:1383}],lastUpdated:"12/22/2021, 6:11:09 PM",lastUpdatedTimestamp:1640167869e3,headersStr:"unity + json 项目中使用luban生成代码，需要依赖哪些库 在其他项目中使用luban生成代码，需要依赖哪些库 我把代码加入项目，发现有编译错误，找不到 ByteBuf类，如何解决？ 在unity项目中使用c#代码加载json配置 在unity+puers项目中使用typescript加载json配置 如何在go项目中加载json配置 python 2 + json 如果我用的语言是java,python,c++,rust,lua 等等，如何加载配置",content:"# 运行时加载配置\n\n\n# unity + json 项目中使用luban生成代码，需要依赖哪些库\n\n只需要将 LubanLib 目录复制到项目即可。\n\n\n# 在其他项目中使用luban生成代码，需要依赖哪些库\n\n在示例项目中找到跟你项目情况匹配的示例项目，将Luban相关的基础代码导入到你们项目即可。\n\n\n# 我把代码加入项目，发现有编译错误，找不到 ByteBuf类，如何解决？\n\n因为你没有把luban依赖的一些代码加入项目。 参考上面的回答。\n\n\n# 在unity项目中使用c#代码加载json配置\n\n只需一行代码\n\n// 一行代码可以加载所有配置。 cfg.Tables 包含所有表的一个实例字段。\nvar tables = new cfg.Tables(Loader);\n// 访问一个单例表\nConsole.WriteLine(tables.TbGlobal.Name);\n// 访问普通的 key-value 表\nConsole.WriteLine(tables.TbItem.Get(12).Name);\n// 支持 operator []用法\nConsole.WriteLine(tables.TbMail[1001].Desc);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n请自行实现合适的Loader函数，根据配置文件名file返回一个加载好的ByteBuf。 可借鉴Csharp_Unity_Json中的代码。\n\n\n# 在unity+puers项目中使用typescript加载json配置\n\n// 一行代码可以加载所有配置。 cfg.Tables 包含所有表的一个实例字段。\nlet tables = new cfg.Tables(loader)\n// 访问一个单例表\nconsole.log(tables.TbGlobal.name)\n// 访问普通的 key-value 表\nconsole.log(tables.TbItem.get(12).Name)\n\n\n1\n2\n3\n4\n5\n6\n\n\n请自行实现一个Loader的函数，根据表file 返回一个解析好的JSON对象。可借鉴 Typescript_Unity_Puerts_Json中代码\n\n\n# 如何在go项目中加载json配置\n\n// 一行代码可以加载所有配置。 cfg.Tables 包含所有表的一个实例字段。\nif tables , err := cfg.NewTables(loader) ; err != nil {\n println(err.Error())\n return\n}\n// 访问一个单例表\nprintln(tables.TbGlobal.Name)\n// 访问普通的 key-value 表\nprintln(tables.TbItem.Get(12).Name)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n请自行实现一个合适的loader函数，根据配置文件 file，返回一个Json对象\n\n\n# python 2 + json\n\n与其他相似，取 --gen_types code_python27_json,data_json。但需要额外安装enum34包，可通过命令 'py -2 -m pip install enum34' 安装。\n\n\n# 如果我用的语言是java,python,c++,rust,lua 等等，如何加载配置\n\n请参见 示例项目。找到与你项目类型相符的示例项目，参考其加载 代码即可。",normalizedContent:"# 运行时加载配置\n\n\n# unity + json 项目中使用luban生成代码，需要依赖哪些库\n\n只需要将 lubanlib 目录复制到项目即可。\n\n\n# 在其他项目中使用luban生成代码，需要依赖哪些库\n\n在示例项目中找到跟你项目情况匹配的示例项目，将luban相关的基础代码导入到你们项目即可。\n\n\n# 我把代码加入项目，发现有编译错误，找不到 bytebuf类，如何解决？\n\n因为你没有把luban依赖的一些代码加入项目。 参考上面的回答。\n\n\n# 在unity项目中使用c#代码加载json配置\n\n只需一行代码\n\n// 一行代码可以加载所有配置。 cfg.tables 包含所有表的一个实例字段。\nvar tables = new cfg.tables(loader);\n// 访问一个单例表\nconsole.writeline(tables.tbglobal.name);\n// 访问普通的 key-value 表\nconsole.writeline(tables.tbitem.get(12).name);\n// 支持 operator []用法\nconsole.writeline(tables.tbmail[1001].desc);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n请自行实现合适的loader函数，根据配置文件名file返回一个加载好的bytebuf。 可借鉴csharp_unity_json中的代码。\n\n\n# 在unity+puers项目中使用typescript加载json配置\n\n// 一行代码可以加载所有配置。 cfg.tables 包含所有表的一个实例字段。\nlet tables = new cfg.tables(loader)\n// 访问一个单例表\nconsole.log(tables.tbglobal.name)\n// 访问普通的 key-value 表\nconsole.log(tables.tbitem.get(12).name)\n\n\n1\n2\n3\n4\n5\n6\n\n\n请自行实现一个loader的函数，根据表file 返回一个解析好的json对象。可借鉴 typescript_unity_puerts_json中代码\n\n\n# 如何在go项目中加载json配置\n\n// 一行代码可以加载所有配置。 cfg.tables 包含所有表的一个实例字段。\nif tables , err := cfg.newtables(loader) ; err != nil {\n println(err.error())\n return\n}\n// 访问一个单例表\nprintln(tables.tbglobal.name)\n// 访问普通的 key-value 表\nprintln(tables.tbitem.get(12).name)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n请自行实现一个合适的loader函数，根据配置文件 file，返回一个json对象\n\n\n# python 2 + json\n\n与其他相似，取 --gen_types code_python27_json,data_json。但需要额外安装enum34包，可通过命令 'py -2 -m pip install enum34' 安装。\n\n\n# 如果我用的语言是java,python,c++,rust,lua 等等，如何加载配置\n\n请参见 示例项目。找到与你项目类型相符的示例项目，参考其加载 代码即可。",charsets:{cjk:!0}},{title:"插件的设计目的",frontmatter:{},regularPath:"/luban_assistant.html",relativePath:"luban_assistant.md",key:"v-ac75e678",path:"/luban_assistant.html",headers:[{level:3,title:"插件的设计目的",slug:"插件的设计目的",normalizedTitle:"插件的设计目的",charIndex:2},{level:3,title:"如何安装",slug:"如何安装",normalizedTitle:"如何安装",charIndex:167},{level:3,title:"支持哪些office版本",slug:"支持哪些office版本",normalizedTitle:"支持哪些office版本",charIndex:294},{level:3,title:"支持 mac下的excel吗",slug:"支持-mac下的excel吗",normalizedTitle:"支持 mac下的excel吗",charIndex:359},{level:3,title:"如何使用",slug:"如何使用",normalizedTitle:"如何使用",charIndex:384},{level:3,title:"有没有使用示例",slug:"有没有使用示例",normalizedTitle:"有没有使用示例",charIndex:850},{level:3,title:"对于以json格式的保存的表，有什么要求？",slug:"对于以json格式的保存的表-有什么要求",normalizedTitle:"对于以json格式的保存的表，有什么要求？",charIndex:987},{level:3,title:"支持多行记录和sep等等普通luban xlsx表的特性吗",slug:"支持多行记录和sep等等普通luban-xlsx表的特性吗",normalizedTitle:"支持多行记录和sep等等普通luban xlsx表的特性吗",charIndex:1125},{level:3,title:"支持将一个表加载到多个sheet吗？",slug:"支持将一个表加载到多个sheet吗",normalizedTitle:"支持将一个表加载到多个sheet吗？",charIndex:1185},{level:3,title:"支持多个表在同一个xlsx文件中吗？",slug:"支持多个表在同一个xlsx文件中吗",normalizedTitle:"支持多个表在同一个xlsx文件中吗？",charIndex:1345}],lastUpdated:"12/3/2021, 3:11:18 PM",lastUpdatedTimestamp:1638515478e3,headersStr:"插件的设计目的 如何安装 支持哪些office版本 支持 mac下的excel吗 如何使用 有没有使用示例 对于以json格式的保存的表，有什么要求？ 支持多行记录和sep等等普通luban xlsx表的特性吗 支持将一个表加载到多个sheet吗？ 支持多个表在同一个xlsx文件中吗？",content:'# 插件的设计目的\n\n为了解决大型项目多人编辑，xlsx容易冲突的问题，一个解决思路是，在xlsx中编辑数据，但每个记录保存为符合luban要求的json文件。LubanAssistant可以读取luban表数据， 加载到excel中，编辑修改后，可以重新保存为json文件格式。这样解决了多人编辑冲突及多版本间合并的困难。\n\n\n# 如何安装\n\n目前由于证书的原因，LubanAssistant插件只能自行编译安装。 打开本项目的src/LubanTools.sln工程，编译发布此插件。然后双击生成的LubanAssistant.vsto文件即可安装。 后面将会解决这个问题。\n\n\n# 支持哪些office版本\n\n目前在office 2016版本是可以工作的，更新版本应该没问题，旧版本未测试，应该也可以。\n\n\n# 支持 mac下的excel吗\n\n不支持。\n\n\n# 如何使用\n\n * 新建一个xlsx文件\n * 切到 "加载项" 功能页\n   * 点击 "设置Root文件" 设置 __root__.xml 文件的路径\n   * 点击 "设置配置根目录" 设置 配置根目录 （如luban_examples/DesignerConfigs目录）\n * 如普通的luban xlsx表那样填好 标题头及注释行，例如\n\n##   ID   X     Y\n##   id   字段x   字段y\n\n * A1单元##后添加 table=表名 例如\n\n##TABLE=ITEM.TBITEM   ID   X     Y\n##                    id   字段x   字段y\n\n * 点击 "加载项" 功能页中 加载数据，则 item.TbItem表的所有json文件会加载到当前xlsx中，现在你可以自由编辑了\n * 保存， 支持几种方式\n   * 保存选中的一部分记录。 选择要保存的记录所在的行，点击 "保存选中" 即可\n   * 保存全部。 点击 "保存全部" 即可\n\n\n# 有没有使用示例\n\nluban_examples 项目下 DesignerConfigs/Datas/test目录的 luban_assistant_test_json.xlsx和luban_assistant_test_multi_rows.xlsx 是两个例子。\n\n\n# 对于以json格式的保存的表，有什么要求？\n\n符合luban数据源要求的都可以被加载到LubanAssistant中，但LubanAssistant保存时，会将每个记录以对应的key作文件名，保存到input指定的路径中。 因此要求table的input必须为目录。\n\n\n# 支持多行记录和sep等等普通luban xlsx表的特性吗\n\n支持。所有普通luban表的xlsx格式都支持。\n\n\n# 支持将一个表加载到多个sheet吗？\n\n不支持。暂时只能将整个表加载到一个sheet。但可以用其他技巧达到这个效果，比如你将表文件拆分到几个目录的中，创建几个分组为e或其他的不导出的表， 这些表的结构与你要编辑的表完全相同，每个表指向一个拆分的子目录，这样你就可以分别在不同的sheet里编辑不同目录的记录了。\n\n\n# 支持多个表在同一个xlsx文件中吗？\n\n支持。每个sheet是独立的。',normalizedContent:'# 插件的设计目的\n\n为了解决大型项目多人编辑，xlsx容易冲突的问题，一个解决思路是，在xlsx中编辑数据，但每个记录保存为符合luban要求的json文件。lubanassistant可以读取luban表数据， 加载到excel中，编辑修改后，可以重新保存为json文件格式。这样解决了多人编辑冲突及多版本间合并的困难。\n\n\n# 如何安装\n\n目前由于证书的原因，lubanassistant插件只能自行编译安装。 打开本项目的src/lubantools.sln工程，编译发布此插件。然后双击生成的lubanassistant.vsto文件即可安装。 后面将会解决这个问题。\n\n\n# 支持哪些office版本\n\n目前在office 2016版本是可以工作的，更新版本应该没问题，旧版本未测试，应该也可以。\n\n\n# 支持 mac下的excel吗\n\n不支持。\n\n\n# 如何使用\n\n * 新建一个xlsx文件\n * 切到 "加载项" 功能页\n   * 点击 "设置root文件" 设置 __root__.xml 文件的路径\n   * 点击 "设置配置根目录" 设置 配置根目录 （如luban_examples/designerconfigs目录）\n * 如普通的luban xlsx表那样填好 标题头及注释行，例如\n\n##   id   x     y\n##   id   字段x   字段y\n\n * a1单元##后添加 table=表名 例如\n\n##table=item.tbitem   id   x     y\n##                    id   字段x   字段y\n\n * 点击 "加载项" 功能页中 加载数据，则 item.tbitem表的所有json文件会加载到当前xlsx中，现在你可以自由编辑了\n * 保存， 支持几种方式\n   * 保存选中的一部分记录。 选择要保存的记录所在的行，点击 "保存选中" 即可\n   * 保存全部。 点击 "保存全部" 即可\n\n\n# 有没有使用示例\n\nluban_examples 项目下 designerconfigs/datas/test目录的 luban_assistant_test_json.xlsx和luban_assistant_test_multi_rows.xlsx 是两个例子。\n\n\n# 对于以json格式的保存的表，有什么要求？\n\n符合luban数据源要求的都可以被加载到lubanassistant中，但lubanassistant保存时，会将每个记录以对应的key作文件名，保存到input指定的路径中。 因此要求table的input必须为目录。\n\n\n# 支持多行记录和sep等等普通luban xlsx表的特性吗\n\n支持。所有普通luban表的xlsx格式都支持。\n\n\n# 支持将一个表加载到多个sheet吗？\n\n不支持。暂时只能将整个表加载到一个sheet。但可以用其他技巧达到这个效果，比如你将表文件拆分到几个目录的中，创建几个分组为e或其他的不导出的表， 这些表的结构与你要编辑的表完全相同，每个表指向一个拆分的子目录，这样你就可以分别在不同的sheet里编辑不同目录的记录了。\n\n\n# 支持多个表在同一个xlsx文件中吗？\n\n支持。每个sheet是独立的。',charsets:{cjk:!0}},{title:"模板",frontmatter:{},regularPath:"/render_template.html",relativePath:"render_template.md",key:"v-63cec984",path:"/render_template.html",headers:[{level:2,title:"代码模板",slug:"代码模板",normalizedTitle:"代码模板",charIndex:8},{level:3,title:"数据模板",slug:"数据模板",normalizedTitle:"数据模板",charIndex:13}],lastUpdated:"12/20/2021, 6:14:18 PM",lastUpdatedTimestamp:1639995258e3,headersStr:"代码模板 数据模板",content:'# 模板\n\n支持代码模板和数据模板，可以灵活定制生成的代码和数据。\n\n\n# 代码模板\n\n使用scriban模板文件定制导出数据格式。例如生成cs语言bin数据格式的cfg.Tables类的模板如下。\n\nusing Bright.Serialization;\n\n{{\n    name = x.name\n    namespace = x.namespace\n    tables = x.tables\n}}\nnamespace {{namespace}}\n{\n   \npublic sealed class {{name}}\n{\n    {{~for table in tables ~}}\n{{~if table.comment != \'\' ~}}\n    /// &lt;summary>\n    /// {{table.comment}}\n    /// &lt;/summary>\n{{~end~}}\n    public {{table.full_name}} {{table.name}} {get; }\n    {{~end~}}\n\n    public {{name}}(System.Func&lt;string, ByteBuf> loader)\n    {\n        var tables = new System.Collections.Generic.Dictionary&lt;string, object>();\n        {{~for table in tables ~}}\n        {{table.name}} = new {{table.full_name}}(loader("{{table.output_data_file}}")); \n        tables.Add("{{table.full_name}}", {{table.name}});\n        {{~end~}}\n\n        {{~for table in tables ~}}\n        {{table.name}}.Resolve(tables); \n        {{~end~}}\n    }\n\n    public void TranslateText(System.Func&lt;string, string, string> translator)\n    {\n        {{~for table in tables ~}}\n        {{table.name}}.TranslateText(translator); \n        {{~end~}}\n    }\n}\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 数据模板\n\n使用scriban模板文件定制导出数据格式。例如自定义的lua数据模板如下：\n\n// {{table.name}}\n{{for d in datas}}\n // {{d.impl_type.full_name}}\n {{~i = 0~}}\n {{~for f in d.fields~}}\n  {{~if f ~}}\n  // {{d.impl_type.hierarchy_export_fields[i].name}} = {{f.value}}\n  {{~end~}}\n  {{~i = i + 1~}}\n {{~end~}}\n{{end}}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n输出数据\n\n// TbItem\n // item.Item\n  // id = 1\n  // name = 钻石\n  // major_type = 1\n  // minor_type = 101\n  // max_pile_num = 9999999\n  // quality = 0\n  // icon = /Game/UI/UIText/UI_TestIcon_3.UI_TestIcon_3\n  \n // item.Item\n  // id = 2\n  // name = 金币\n  // major_type = 1\n  // minor_type = 102\n  // max_pile_num = 9999999\n  // quality = 0\n  // icon = /Game/UI/UIText/UI_TestIcon_1.UI_TestIcon_1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 模板\n\n支持代码模板和数据模板，可以灵活定制生成的代码和数据。\n\n\n# 代码模板\n\n使用scriban模板文件定制导出数据格式。例如生成cs语言bin数据格式的cfg.tables类的模板如下。\n\nusing bright.serialization;\n\n{{\n    name = x.name\n    namespace = x.namespace\n    tables = x.tables\n}}\nnamespace {{namespace}}\n{\n   \npublic sealed class {{name}}\n{\n    {{~for table in tables ~}}\n{{~if table.comment != \'\' ~}}\n    /// &lt;summary>\n    /// {{table.comment}}\n    /// &lt;/summary>\n{{~end~}}\n    public {{table.full_name}} {{table.name}} {get; }\n    {{~end~}}\n\n    public {{name}}(system.func&lt;string, bytebuf> loader)\n    {\n        var tables = new system.collections.generic.dictionary&lt;string, object>();\n        {{~for table in tables ~}}\n        {{table.name}} = new {{table.full_name}}(loader("{{table.output_data_file}}")); \n        tables.add("{{table.full_name}}", {{table.name}});\n        {{~end~}}\n\n        {{~for table in tables ~}}\n        {{table.name}}.resolve(tables); \n        {{~end~}}\n    }\n\n    public void translatetext(system.func&lt;string, string, string> translator)\n    {\n        {{~for table in tables ~}}\n        {{table.name}}.translatetext(translator); \n        {{~end~}}\n    }\n}\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 数据模板\n\n使用scriban模板文件定制导出数据格式。例如自定义的lua数据模板如下：\n\n// {{table.name}}\n{{for d in datas}}\n // {{d.impl_type.full_name}}\n {{~i = 0~}}\n {{~for f in d.fields~}}\n  {{~if f ~}}\n  // {{d.impl_type.hierarchy_export_fields[i].name}} = {{f.value}}\n  {{~end~}}\n  {{~i = i + 1~}}\n {{~end~}}\n{{end}}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n输出数据\n\n// tbitem\n // item.item\n  // id = 1\n  // name = 钻石\n  // major_type = 1\n  // minor_type = 101\n  // max_pile_num = 9999999\n  // quality = 0\n  // icon = /game/ui/uitext/ui_testicon_3.ui_testicon_3\n  \n // item.item\n  // id = 2\n  // name = 金币\n  // major_type = 1\n  // minor_type = 102\n  // max_pile_num = 9999999\n  // quality = 0\n  // icon = /game/ui/uitext/ui_testicon_1.ui_testicon_1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0}},{title:"road map 1",frontmatter:{},regularPath:"/roadmap.html",relativePath:"roadmap.md",key:"v-1ec31224",path:"/roadmap.html",headers:[{level:2,title:"road map 1",slug:"road-map-1",normalizedTitle:"road map 1",charIndex:2},{level:2,title:"road map 2",slug:"road-map-2",normalizedTitle:"road map 2",charIndex:129}],lastUpdated:"12/3/2021, 3:11:18 PM",lastUpdatedTimestamp:1638515478e3,headersStr:"road map 1 road map 2",content:"# road map 1\n\n * 补充单元测试\n * 新增静态本地化支持\n * 新增动态本地化支持\n * 新增生成用于unreal编辑器的 加载及保存json配置的cpp代码\n * 新增生成用于unity 编辑器的 加载及保存json配置的c#代码\n\n\n# road map 2\n\n * 新增 unity 内嵌编辑器\n * 新增 unreal 内嵌编辑器",normalizedContent:"# road map 1\n\n * 补充单元测试\n * 新增静态本地化支持\n * 新增动态本地化支持\n * 新增生成用于unreal编辑器的 加载及保存json配置的cpp代码\n * 新增生成用于unity 编辑器的 加载及保存json配置的c#代码\n\n\n# road map 2\n\n * 新增 unity 内嵌编辑器\n * 新增 unreal 内嵌编辑器",charsets:{cjk:!0}},{title:"TODO 待补充",frontmatter:{},regularPath:"/manual.html",relativePath:"manual.md",key:"v-0e60c004",path:"/manual.html",lastUpdated:"12/3/2021, 3:11:18 PM",lastUpdatedTimestamp:1638515478e3,headersStr:null,content:"# TODO 待补充",normalizedContent:"# todo 待补充",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/samples.html",relativePath:"samples.md",key:"v-71ad7044",path:"/samples.html",headers:[{level:2,title:"Python 示例",slug:"python-示例",normalizedTitle:"python 示例",charIndex:2},{level:2,title:"TS 示例",slug:"ts-示例",normalizedTitle:"ts 示例",charIndex:18},{level:2,title:"C# 示例",slug:"c-示例",normalizedTitle:"c# 示例",charIndex:30},{level:2,title:"C++ 示例",slug:"c-示例-2",normalizedTitle:"c++ 示例",charIndex:42},{level:2,title:"Java 示例",slug:"java-示例",normalizedTitle:"java 示例",charIndex:55},{level:2,title:"Go 示例",slug:"go-示例",normalizedTitle:"go 示例",charIndex:69}],lastUpdated:"12/3/2021, 3:11:18 PM",lastUpdatedTimestamp:1638515478e3,headersStr:"Python 示例 TS 示例 C# 示例 C++ 示例 Java 示例 Go 示例",content:"# Python 示例\n\n\n\n\n# TS 示例\n\n\n\n\n# C# 示例\n\n\n\n\n# C++ 示例\n\n\n\n\n# Java 示例\n\n\n\n\n# Go 示例\n\n",normalizedContent:"# python 示例\n\n\n\n\n# ts 示例\n\n\n\n\n# c# 示例\n\n\n\n\n# c++ 示例\n\n\n\n\n# java 示例\n\n\n\n\n# go 示例\n\n",charsets:{cjk:!0}},{title:"快速上手",frontmatter:{},regularPath:"/start_up.html",relativePath:"start_up.md",key:"v-36207560",path:"/start_up.html",headers:[{level:2,title:"视频教程",slug:"视频教程",normalizedTitle:"视频教程",charIndex:11},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:68},{level:2,title:"创建游戏配置",slug:"创建游戏配置",normalizedTitle:"创建游戏配置",charIndex:228},{level:3,title:"准备基础的配置模板",slug:"准备基础的配置模板",normalizedTitle:"准备基础的配置模板",charIndex:239},{level:3,title:"定义一个新的配置表 (== 此步骤可跳过 ==)",slug:"定义一个新的配置表-此步骤可跳过",normalizedTitle:"定义一个新的配置表 (== 此步骤可跳过 ==)",charIndex:312},{level:2,title:"生成代码和数据以及在程序中使用",slug:"生成代码和数据以及在程序中使用",normalizedTitle:"生成代码和数据以及在程序中使用",charIndex:1415},{level:3,title:"unity + c# + json",slug:"unity-c-json",normalizedTitle:"unity + c# + json",charIndex:1461},{level:2,title:"unity + puerts 项目生成 ts代码，并生成json数据",slug:"unity-puerts-项目生成-ts代码-并生成json数据",normalizedTitle:"unity + puerts 项目生成 ts代码，并生成json数据",charIndex:3519},{level:2,title:"我是UE4项目，想生成c++代码（非蓝图）和binary数据该怎么做",slug:"我是ue4项目-想生成c-代码-非蓝图-和binary数据该怎么做",normalizedTitle:"我是ue4项目，想生成c++代码（非蓝图）和binary数据该怎么做",charIndex:5061},{level:2,title:"我是UE4项目，想生成c++代码（蓝图）和binary数据该怎么做",slug:"我是ue4项目-想生成c-代码-蓝图-和binary数据该怎么做",normalizedTitle:"我是ue4项目，想生成c++代码（蓝图）和binary数据该怎么做",charIndex:5330},{level:2,title:"我是UE4项目，想生成c++代码（蓝图）和json数据该怎么做",slug:"我是ue4项目-想生成c-代码-蓝图-和json数据该怎么做",normalizedTitle:"我是ue4项目，想生成c++代码（蓝图）和json数据该怎么做",charIndex:5449},{level:3,title:"只想根据excel导出json数据，自己手写代码加载使用",slug:"只想根据excel导出json数据-自己手写代码加载使用",normalizedTitle:"只想根据excel导出json数据，自己手写代码加载使用",charIndex:5569},{level:2,title:"其他项目类型",slug:"其他项目类型",normalizedTitle:"其他项目类型",charIndex:6294}],lastUpdated:"3/8/2022, 3:09:12 PM",lastUpdatedTimestamp:1646723352e3,headersStr:"视频教程 安装 创建游戏配置 准备基础的配置模板 定义一个新的配置表 (== 此步骤可跳过 ==) 生成代码和数据以及在程序中使用 unity + c# + json unity + puerts 项目生成 ts代码，并生成json数据 我是UE4项目，想生成c++代码（非蓝图）和binary数据该怎么做 我是UE4项目，想生成c++代码（蓝图）和binary数据该怎么做 我是UE4项目，想生成c++代码（蓝图）和json数据该怎么做 只想根据excel导出json数据，自己手写代码加载使用 其他项目类型",content:'# 快速上手\n\n\n# 视频教程\n\n== 感谢 宝鱼偷偷摸鱼 的贡献 ==\n\n * 【01】新手上路\n * 【02】定义配置结构\n\n\n# 安装\n\n 1. dotnet sdk 6.0\n\n 2. 下载luban_examples项目\n    \n    下载项目 luban_examples。 项目中包含测试配置、最新的luban_client&luban_server工作以及大量的示例项目。为方便起见，后续提及到的文件，默认都指这个项目中的文件。\n\n\n# 创建游戏配置\n\n\n# 准备基础的配置模板\n\n从示例项目拷贝MiniDesignerConfigsTemplate 到一个合适的目录，假设为 MyConfigs\n\n\n# 定义一个新的配置表 (== 此步骤可跳过 ==)\n\n基础配置模板里已经包含了一个item.xlsx示例表，可以直接生成。如果你想体验一下如何创建一个新的配置表， 可以按照下面的步骤操作，否则可以快速直接跳过。\n\n假设这个新表为reward表。\n\n * 添加excel配置数据文件 在 MyConfigs/Datas 目录下创建一个 “reward.xlsx” 文件。\n   \n   文件内容如下\n   \n   ##VAR    ID     NAME     DESC     COUNT\n   ##type   int    string   string   int\n   ##       id     名字       描述       个数\n            1001   item1    desc1    10\n            1002   item2    desc2    10\n            1003   item3    desc3    10\n            1004   item4    desc4    10\n   \n   * 第 1 行是 主字段行，包含表字段定义。单元格 A1 必须以##开头。表示这是一个有效数据表。\n   * 第 2 行是类型行，第1个单元格必须为 ##type。\n   * 第 3 行是注释行。 以##开头。 可以有0-N个注释行，而且可以出现在任何位置\n   * 第 4 行起是数据行。\n   \n   像##var或者##type 这种带名字的行，可以随便调整行的位置。 ==但注意== 如果第一行是注释行，必须使用##comment，而不是##。否则会把第一行当字段名行而出错（这是出于兼容性，早期强制第一行是字段名行，允许只以##开头）。\n\n * 在 Datas 目录下的__tables__.xlsx添加表声明，如下图：\n   \n   ##VAR   FULL_NAME       VALUE_TYPE   DEFINE_FROM_FILE   INPUT         INDEX   MODE   GROUP   COMMENT   PATCH_INPUT   TAGS   OUTPUT\n           demo.TbReward   Reward       true               reward.xlsx                                                         \n\n * 至此reward表的创建工作大功告成!\n\n\n# 生成代码和数据以及在程序中使用\n\n有几个常见需求， 根据你的要求选择下面合适的文档\n\n * unity + c# + json\n * unity + puerts + json\n * UE4 + c++ + binary\n * UE4 + blueprint c++ + binary\n * UE4 + blueprint c++ + json\n * 只想excel导出json，自己手写代码加载或者有其他使用目的\n * 其他需求\n\n\n# unity + c# + json\n\n示例参考项目为 Csharp_Unity_Json。\n\n * 项目准备。\n   \n   拷贝示例项目中 Assets\\LubanLib 目录到你的Unity项目中（可以自由组织位置），===同时在Unity的PlayerSettings里开启unsafe选项===（如果你们项目要求不开启unsafe，请群里求助）,此时尝试编译项目，理论上应该能成功编译。\n\n * 运行生成命令（可以参考示例项目的gen_code_json.bat）\n   \n       dotnet %Luban.ClientServer.dll%\n       -j cfg ^\n       -- ^\n       --define_file <__root__.xml 定义文件的路径> ^\n       --input_data_dir <配置数据根目录(Datas)的路径> ^\n       --output_code_dir <生成的代码文件的路径> ^\n       --output_data_dir <导出的数据文件的路径> ^\n       --service all ^\n       --gen_types "code_cs_unity_json,data_json"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   其中\n   \n   * %Luban.ClientServer.dll% 指向 luban_examples/Tools/Luban.ClientServer/Luban.ClientServer.dll\n   \n   * --define_file 参数为 MyConfigs/Defines/__root__.xml 的路径\n   \n   * --input_data_dir 参数为 MyConfigs/Datas 的路径\n   \n   * --output_code_dir 参数为生成的代码文件存放的路径。 建议建议指向 unity的 Assets 目录下的某级子目录\n   \n   * --output_data_dir 参数为生成的数据文件的存放路径。 建议指向Assets同级目录。\n     \n     详细的命令文档请看 command_tools。\n     \n     如果一切正常，会产生一系列日志，最终一行是 == succ == 。\n     \n     类似这样\n     \n     \n     \n     如果一切顺利。生成的代码文件会在 –output_code_dir 参数指定的 目录中，生成的配置数据会在 –output_data_dir 参数指定的目录中。确保 –output_code_dir 指向的目录在Assets目录下，PlayerSetting里开启unsafe，此时应该能编译成功。\n\n * 加载配置\n   \n   只需一行代码既可完成所有配置表的加载工具\n   \n   var tables = new cfg.Tables(file => JSON.Parse(File.ReadAllText(gameConfDir + "/" + file + ".json")));\n   \n   \n   1\n   \n\n * 使用加载后的配置表\n   \n   cfg.Tables 里包含所有配置表的一个实例字段。加载完 cfg.Tables 后，只需要用 tables.<表名> 就能获得那个表实例，接着可以做各种操作。例如我们要获取id = 10000 的那个道具。代码如下\n   \n   cfg.item.Item itemInfo = tables.TbItem.Get(10000);\n   Console.WriteLine("id:{0} name:{1} desc:{2}", itemInfo.Id, itemInfo.Name, itemInfo.Desc);\n   \n   \n   1\n   2\n   \n   \n   可能你会注意到，item.xml 里定义 Item 时，字段名 id,name,desc的首字母被大写了。这是因为工具会根据输出的语言，自动作相应代码风格的字段名转换，也即 boo_bar 会被转换为 BooBar 这样的名字。这也是为什么推荐 配置字段定义时统一使用 xx_yy_zz 的风格。\n\n * 至此完成 配置加载与使用!\n\n\n# unity + puerts 项目生成 ts代码，并生成json数据\n\n参考项目为 TypeScript_Unity_Puerts_Json\n\n * 创建并且运行生成命令（可以参考示例项目的gen_code_json.bat）\n   \n   dotnet %Luban.ClientServer.dll%\n   -j cfg ^\n   -- ^\n   --define_file <__root__.xml 定义文件的路径> ^\n   --input_data_dir <配置数据根目录(Datas)的路径> ^\n   --output_code_dir <生成的代码文件的路径> ^\n   --output_data_dir <导出的数据文件的路径> ^\n   --service all ^\n   --gen_types code_typescript_json,data_json ^\n   --typescript:use_puerts_bytebuf ^\n   --typescript:embed_bright_types \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n   \n   其中\n   \n   * %Luban.ClientServer.dll% 指向 luban_examples/Tools/Luban.ClientServer/Luban.ClientServer.dll\n   \n   * --define_file 参数为 MyConfigs/Defines/__root__.xml 的路径\n   \n   * --input_data_dir 参数为 MyConfigs/Datas 的路径\n   \n   * --output_code_dir 参数为生成的代码文件存放的路径。 建议建议指向 unity的 Assets 目录下的某级子目录\n   \n   * --output_data_dir 参数为生成的数据文件的存放路径。 建议指向Assets同级目录。\n     \n     详细的命令文档请看 command_tools。\n     \n     如果一切正常，会产生一系列日志，最终一行是 == succ == 。\n\n * 加载配置\n   \n   为cfg.Tables提供一个Loader,根据表名返回一个加载好的JSON对象。只需少量代码既可完成所有配置表的加载工具。\n   \n   let tables = new cfg.Tables(f => {\n       let data = JsHelpers.ReadAllText(UnityEngine.Application.dataPath + "GameData/" + f + ".json");\n       return JSON.parse(data);\n   })\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 使用加载后的配置表\n   \n   cfg.Tables 里包含所有配置表的一个实例字段。加载完 cfg.Tables 后，只需要用 tables.<表名> 就能获得那个表实例，接着可以做各种操作。例如我们要获取id = 10000 的那个道具。代码如下\n   \n   console.log(tables.TbGlobalConfig.bagCapacity)\n   console.log(tables.TbItem.get(1).name)\n   \n   \n   1\n   2\n   \n\n * 至此完成 配置加载与使用!\n\n\n# 我是UE4项目，想生成c++代码（非蓝图）和binary数据该怎么做\n\n基准的参考项目为 Cpp_Unreal_bin。\n\n由于生成的代码依赖于一些头文件，你需要先从该项目 拷备Source\\Cpp_Unreal\\Private\\bright 到你们项目合适的位置。必须保证bright目录在include目录路径内，如生成的代码中 #include "bright/serialization/ByteBuf.h" 可以找到这个文件。\n\n接着命令行参数取 --gen_types "code_cpp_bin,data_bin"\n\n\n# 我是UE4项目，想生成c++代码（蓝图）和binary数据该怎么做\n\n基准的参考项目为 Cpp_Unreal_bp_bin。\n\n接着命令行参数取 --gen_types "code_cpp_ue_bp_bin,data_bin"\n\n\n# 我是UE4项目，想生成c++代码（蓝图）和json数据该怎么做\n\n基准的参考项目为 Cpp_Unreal_bp_json。\n\n接着命令行参数取 --gen_types "code_cpp_ue_bp_json,data_json"\n\n\n# 只想根据excel导出json数据，自己手写代码加载使用\n\n示例为 GenerateDatas项目 下的 gen_data_json2.bat （注意不是gen_data_json.bat,因为gen_data_json.bat中\'--gen_types data_json\',生成的json数据为记录列表，而不是以key-value形式组织，可能并不符合你的要求）。\n\n脚本如下：\n\ndotnet %Luban.ClientServer.dll%\n -j cfg ^\n -- ^\n --define_file <__root__.xml 定义文件的路径> ^\n --input_data_dir <配置数据根目录(Datas)的路径> ^\n --output_data_dir <导出的数据文件的路径> ^\n --service all ^\n --gen_types data_json2\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n其中\n\n * %Luban.ClientServer.dll% 指向 luban_examples/Tools/Luban.ClientServer/Luban.ClientServer.dll\n * --define_file 参数为 MyConfigs/Defines/__root__.xml 的路径\n * --input_data_dir 参数为 MyConfigs/Datas 的路径\n * --output_data_dir 参数为生成的数据文件的存放路径。 建议指向Assets同级目录。\n\n此时运行脚本。应该能执行成功。生成的数据在 --output_data_dir 参数指定的目录下\n\n\n# 其他项目类型\n\n不同项目之间，仅仅是准备工作及 --gen_types 不一样， 请从示例项目中找到与你项目匹配的项目，参考相应目录下的 gen_xxx.bat 即可。\n\n生成的代码一般会依赖于一些工具类，请从相应项目里拷贝这些代码到自己项目即可。\n\n更多可以参考 代码与数据生成 这个文档。',normalizedContent:'# 快速上手\n\n\n# 视频教程\n\n== 感谢 宝鱼偷偷摸鱼 的贡献 ==\n\n * 【01】新手上路\n * 【02】定义配置结构\n\n\n# 安装\n\n 1. dotnet sdk 6.0\n\n 2. 下载luban_examples项目\n    \n    下载项目 luban_examples。 项目中包含测试配置、最新的luban_client&luban_server工作以及大量的示例项目。为方便起见，后续提及到的文件，默认都指这个项目中的文件。\n\n\n# 创建游戏配置\n\n\n# 准备基础的配置模板\n\n从示例项目拷贝minidesignerconfigstemplate 到一个合适的目录，假设为 myconfigs\n\n\n# 定义一个新的配置表 (== 此步骤可跳过 ==)\n\n基础配置模板里已经包含了一个item.xlsx示例表，可以直接生成。如果你想体验一下如何创建一个新的配置表， 可以按照下面的步骤操作，否则可以快速直接跳过。\n\n假设这个新表为reward表。\n\n * 添加excel配置数据文件 在 myconfigs/datas 目录下创建一个 “reward.xlsx” 文件。\n   \n   文件内容如下\n   \n   ##var    id     name     desc     count\n   ##type   int    string   string   int\n   ##       id     名字       描述       个数\n            1001   item1    desc1    10\n            1002   item2    desc2    10\n            1003   item3    desc3    10\n            1004   item4    desc4    10\n   \n   * 第 1 行是 主字段行，包含表字段定义。单元格 a1 必须以##开头。表示这是一个有效数据表。\n   * 第 2 行是类型行，第1个单元格必须为 ##type。\n   * 第 3 行是注释行。 以##开头。 可以有0-n个注释行，而且可以出现在任何位置\n   * 第 4 行起是数据行。\n   \n   像##var或者##type 这种带名字的行，可以随便调整行的位置。 ==但注意== 如果第一行是注释行，必须使用##comment，而不是##。否则会把第一行当字段名行而出错（这是出于兼容性，早期强制第一行是字段名行，允许只以##开头）。\n\n * 在 datas 目录下的__tables__.xlsx添加表声明，如下图：\n   \n   ##var   full_name       value_type   define_from_file   input         index   mode   group   comment   patch_input   tags   output\n           demo.tbreward   reward       true               reward.xlsx                                                         \n\n * 至此reward表的创建工作大功告成!\n\n\n# 生成代码和数据以及在程序中使用\n\n有几个常见需求， 根据你的要求选择下面合适的文档\n\n * unity + c# + json\n * unity + puerts + json\n * ue4 + c++ + binary\n * ue4 + blueprint c++ + binary\n * ue4 + blueprint c++ + json\n * 只想excel导出json，自己手写代码加载或者有其他使用目的\n * 其他需求\n\n\n# unity + c# + json\n\n示例参考项目为 csharp_unity_json。\n\n * 项目准备。\n   \n   拷贝示例项目中 assets\\lubanlib 目录到你的unity项目中（可以自由组织位置），===同时在unity的playersettings里开启unsafe选项===（如果你们项目要求不开启unsafe，请群里求助）,此时尝试编译项目，理论上应该能成功编译。\n\n * 运行生成命令（可以参考示例项目的gen_code_json.bat）\n   \n       dotnet %luban.clientserver.dll%\n       -j cfg ^\n       -- ^\n       --define_file <__root__.xml 定义文件的路径> ^\n       --input_data_dir <配置数据根目录(datas)的路径> ^\n       --output_code_dir <生成的代码文件的路径> ^\n       --output_data_dir <导出的数据文件的路径> ^\n       --service all ^\n       --gen_types "code_cs_unity_json,data_json"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   其中\n   \n   * %luban.clientserver.dll% 指向 luban_examples/tools/luban.clientserver/luban.clientserver.dll\n   \n   * --define_file 参数为 myconfigs/defines/__root__.xml 的路径\n   \n   * --input_data_dir 参数为 myconfigs/datas 的路径\n   \n   * --output_code_dir 参数为生成的代码文件存放的路径。 建议建议指向 unity的 assets 目录下的某级子目录\n   \n   * --output_data_dir 参数为生成的数据文件的存放路径。 建议指向assets同级目录。\n     \n     详细的命令文档请看 command_tools。\n     \n     如果一切正常，会产生一系列日志，最终一行是 == succ == 。\n     \n     类似这样\n     \n     \n     \n     如果一切顺利。生成的代码文件会在 –output_code_dir 参数指定的 目录中，生成的配置数据会在 –output_data_dir 参数指定的目录中。确保 –output_code_dir 指向的目录在assets目录下，playersetting里开启unsafe，此时应该能编译成功。\n\n * 加载配置\n   \n   只需一行代码既可完成所有配置表的加载工具\n   \n   var tables = new cfg.tables(file => json.parse(file.readalltext(gameconfdir + "/" + file + ".json")));\n   \n   \n   1\n   \n\n * 使用加载后的配置表\n   \n   cfg.tables 里包含所有配置表的一个实例字段。加载完 cfg.tables 后，只需要用 tables.<表名> 就能获得那个表实例，接着可以做各种操作。例如我们要获取id = 10000 的那个道具。代码如下\n   \n   cfg.item.item iteminfo = tables.tbitem.get(10000);\n   console.writeline("id:{0} name:{1} desc:{2}", iteminfo.id, iteminfo.name, iteminfo.desc);\n   \n   \n   1\n   2\n   \n   \n   可能你会注意到，item.xml 里定义 item 时，字段名 id,name,desc的首字母被大写了。这是因为工具会根据输出的语言，自动作相应代码风格的字段名转换，也即 boo_bar 会被转换为 boobar 这样的名字。这也是为什么推荐 配置字段定义时统一使用 xx_yy_zz 的风格。\n\n * 至此完成 配置加载与使用!\n\n\n# unity + puerts 项目生成 ts代码，并生成json数据\n\n参考项目为 typescript_unity_puerts_json\n\n * 创建并且运行生成命令（可以参考示例项目的gen_code_json.bat）\n   \n   dotnet %luban.clientserver.dll%\n   -j cfg ^\n   -- ^\n   --define_file <__root__.xml 定义文件的路径> ^\n   --input_data_dir <配置数据根目录(datas)的路径> ^\n   --output_code_dir <生成的代码文件的路径> ^\n   --output_data_dir <导出的数据文件的路径> ^\n   --service all ^\n   --gen_types code_typescript_json,data_json ^\n   --typescript:use_puerts_bytebuf ^\n   --typescript:embed_bright_types \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n   \n   其中\n   \n   * %luban.clientserver.dll% 指向 luban_examples/tools/luban.clientserver/luban.clientserver.dll\n   \n   * --define_file 参数为 myconfigs/defines/__root__.xml 的路径\n   \n   * --input_data_dir 参数为 myconfigs/datas 的路径\n   \n   * --output_code_dir 参数为生成的代码文件存放的路径。 建议建议指向 unity的 assets 目录下的某级子目录\n   \n   * --output_data_dir 参数为生成的数据文件的存放路径。 建议指向assets同级目录。\n     \n     详细的命令文档请看 command_tools。\n     \n     如果一切正常，会产生一系列日志，最终一行是 == succ == 。\n\n * 加载配置\n   \n   为cfg.tables提供一个loader,根据表名返回一个加载好的json对象。只需少量代码既可完成所有配置表的加载工具。\n   \n   let tables = new cfg.tables(f => {\n       let data = jshelpers.readalltext(unityengine.application.datapath + "gamedata/" + f + ".json");\n       return json.parse(data);\n   })\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 使用加载后的配置表\n   \n   cfg.tables 里包含所有配置表的一个实例字段。加载完 cfg.tables 后，只需要用 tables.<表名> 就能获得那个表实例，接着可以做各种操作。例如我们要获取id = 10000 的那个道具。代码如下\n   \n   console.log(tables.tbglobalconfig.bagcapacity)\n   console.log(tables.tbitem.get(1).name)\n   \n   \n   1\n   2\n   \n\n * 至此完成 配置加载与使用!\n\n\n# 我是ue4项目，想生成c++代码（非蓝图）和binary数据该怎么做\n\n基准的参考项目为 cpp_unreal_bin。\n\n由于生成的代码依赖于一些头文件，你需要先从该项目 拷备source\\cpp_unreal\\private\\bright 到你们项目合适的位置。必须保证bright目录在include目录路径内，如生成的代码中 #include "bright/serialization/bytebuf.h" 可以找到这个文件。\n\n接着命令行参数取 --gen_types "code_cpp_bin,data_bin"\n\n\n# 我是ue4项目，想生成c++代码（蓝图）和binary数据该怎么做\n\n基准的参考项目为 cpp_unreal_bp_bin。\n\n接着命令行参数取 --gen_types "code_cpp_ue_bp_bin,data_bin"\n\n\n# 我是ue4项目，想生成c++代码（蓝图）和json数据该怎么做\n\n基准的参考项目为 cpp_unreal_bp_json。\n\n接着命令行参数取 --gen_types "code_cpp_ue_bp_json,data_json"\n\n\n# 只想根据excel导出json数据，自己手写代码加载使用\n\n示例为 generatedatas项目 下的 gen_data_json2.bat （注意不是gen_data_json.bat,因为gen_data_json.bat中\'--gen_types data_json\',生成的json数据为记录列表，而不是以key-value形式组织，可能并不符合你的要求）。\n\n脚本如下：\n\ndotnet %luban.clientserver.dll%\n -j cfg ^\n -- ^\n --define_file <__root__.xml 定义文件的路径> ^\n --input_data_dir <配置数据根目录(datas)的路径> ^\n --output_data_dir <导出的数据文件的路径> ^\n --service all ^\n --gen_types data_json2\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n其中\n\n * %luban.clientserver.dll% 指向 luban_examples/tools/luban.clientserver/luban.clientserver.dll\n * --define_file 参数为 myconfigs/defines/__root__.xml 的路径\n * --input_data_dir 参数为 myconfigs/datas 的路径\n * --output_data_dir 参数为生成的数据文件的存放路径。 建议指向assets同级目录。\n\n此时运行脚本。应该能执行成功。生成的数据在 --output_data_dir 参数指定的目录下\n\n\n# 其他项目类型\n\n不同项目之间，仅仅是准备工作及 --gen_types 不一样， 请从示例项目中找到与你项目匹配的项目，参考相应目录下的 gen_xxx.bat 即可。\n\n生成的代码一般会依赖于一些工具类，请从相应项目里拷贝这些代码到自己项目即可。\n\n更多可以参考 代码与数据生成 这个文档。',charsets:{cjk:!0}},{title:"tag 介绍",frontmatter:{},regularPath:"/tag.html",relativePath:"tag.md",key:"v-6fb443e4",path:"/tag.html",headers:[{level:2,title:"关于Tag",slug:"关于tag",normalizedTitle:"关于tag",charIndex:13},{level:2,title:"tag格式介绍",slug:"tag格式介绍",normalizedTitle:"tag格式介绍",charIndex:93},{level:2,title:"特殊的tag名",slug:"特殊的tag名",normalizedTitle:"特殊的tag名",charIndex:799},{level:2,title:"记录过滤导出",slug:"记录过滤导出",normalizedTitle:"记录过滤导出",charIndex:881}],lastUpdated:"12/20/2021, 6:14:18 PM",lastUpdatedTimestamp:1639995258e3,headersStr:"关于Tag tag格式介绍 特殊的tag名 记录过滤导出",content:'# tag 介绍\n\n\n# 关于Tag\n\nluban支持记录级别的tag标记，每个数据可以有0到多个tag。 tag可用标识记录为注释，或者过滤导出，或者指示检验器不检查此记录。\n\n\n# tag格式介绍\n\n不同文件格式下，记录tag的填写方式如下，也可以参考 luban_examples/DesignerConfigs/Data/tag_datas目录下的示例。\n\n * excel格式。 在记录第一列填写tag。\n\n##VAR           ID    NAME\n##type          int   string\n                1     xxx\ndev             2     xxx\ndebug           3     yyy\nunchecked       4     zzz\ndev,main        5     aaa\ndev,unchecked   6     bbb\n\n * json 格式。 在字段 __tag__中填写tag。\n\n{\n  "__tag__": "dev",\n  "id":1,\n  "name":"xxx"\n}\n\n\n1\n2\n3\n4\n5\n\n * lua 格式。 在字段 __tag__中填写tag。\n\nreturn {\n  __tag__ = "dev",\n  id = 1,\n  name = "xxx",\n}\n\n\n1\n2\n3\n4\n5\n\n * xml格式。 在 tag 中填写tag。\n\n<data>\n  <__tag__>dev</__tag__>\n  <id>1</id>\n  <name>xxx</name>\n</data>\n\n\n1\n2\n3\n4\n5\n\n * yaml格式. 在 tag 字段中填写tag。\n\n__tag__ : dev\nid : 1\nname : xxx\n\n\n1\n2\n3\n\n\n\n# 特殊的tag名\n\n有一些特殊的tag名被用于特殊意义。\n\n * ##。 表示此记录被注释，永远不会导出\n * unchecked。 表示校验器不检查此记录\n\n\n# 记录过滤导出\n\n有几种场合会用到过滤导出\n\n * 有些记录仅用于内部测试，不希望对外正式发布时导出\n * 有些记录希望测试和发布有不同版本\n * 一些简单多版本管理，比如某个记录只在某个版本或者分支才导出\n\n通过luban.client的命令行选项 --export_exclude_tags tag1,tag2,... ，包含参数中指定的任意一个tag的记录都不会导出，以下为使用示例。\n\n##VAR    ID    NAME     \n##type   int   string   \n##       id    desc1    注释\n         1     item1    永远导出\n##       2     item2    永远不导出\ntest     4     item4    --export_exclude_tags test 时不导出\nTEST     5     item5    --export_exclude_tags test 时不导出\ndev      6     item6    --export_exclude_tags dev 时不导出\n         7     item7    永远导出',normalizedContent:'# tag 介绍\n\n\n# 关于tag\n\nluban支持记录级别的tag标记，每个数据可以有0到多个tag。 tag可用标识记录为注释，或者过滤导出，或者指示检验器不检查此记录。\n\n\n# tag格式介绍\n\n不同文件格式下，记录tag的填写方式如下，也可以参考 luban_examples/designerconfigs/data/tag_datas目录下的示例。\n\n * excel格式。 在记录第一列填写tag。\n\n##var           id    name\n##type          int   string\n                1     xxx\ndev             2     xxx\ndebug           3     yyy\nunchecked       4     zzz\ndev,main        5     aaa\ndev,unchecked   6     bbb\n\n * json 格式。 在字段 __tag__中填写tag。\n\n{\n  "__tag__": "dev",\n  "id":1,\n  "name":"xxx"\n}\n\n\n1\n2\n3\n4\n5\n\n * lua 格式。 在字段 __tag__中填写tag。\n\nreturn {\n  __tag__ = "dev",\n  id = 1,\n  name = "xxx",\n}\n\n\n1\n2\n3\n4\n5\n\n * xml格式。 在 tag 中填写tag。\n\n<data>\n  <__tag__>dev</__tag__>\n  <id>1</id>\n  <name>xxx</name>\n</data>\n\n\n1\n2\n3\n4\n5\n\n * yaml格式. 在 tag 字段中填写tag。\n\n__tag__ : dev\nid : 1\nname : xxx\n\n\n1\n2\n3\n\n\n\n# 特殊的tag名\n\n有一些特殊的tag名被用于特殊意义。\n\n * ##。 表示此记录被注释，永远不会导出\n * unchecked。 表示校验器不检查此记录\n\n\n# 记录过滤导出\n\n有几种场合会用到过滤导出\n\n * 有些记录仅用于内部测试，不希望对外正式发布时导出\n * 有些记录希望测试和发布有不同版本\n * 一些简单多版本管理，比如某个记录只在某个版本或者分支才导出\n\n通过luban.client的命令行选项 --export_exclude_tags tag1,tag2,... ，包含参数中指定的任意一个tag的记录都不会导出，以下为使用示例。\n\n##var    id    name     \n##type   int   string   \n##       id    desc1    注释\n         1     item1    永远导出\n##       2     item2    永远不导出\ntest     4     item4    --export_exclude_tags test 时不导出\ntest     5     item5    --export_exclude_tags test 时不导出\ndev      6     item6    --export_exclude_tags dev 时不导出\n         7     item7    永远导出',charsets:{cjk:!0}},{title:"自定义模板",frontmatter:{},regularPath:"/template.html",relativePath:"template.md",key:"v-0141311c",path:"/template.html",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:12},{level:2,title:"自定义模板搜索路径",slug:"自定义模板搜索路径",normalizedTitle:"自定义模板搜索路径",charIndex:103},{level:2,title:"模块缓存机制",slug:"模块缓存机制",normalizedTitle:"模块缓存机制",charIndex:276},{level:2,title:"代码模板",slug:"代码模板",normalizedTitle:"代码模板",charIndex:394},{level:3,title:"模板环境变量",slug:"模板环境变量",normalizedTitle:"模板环境变量",charIndex:479},{level:2,title:"数据模板",slug:"数据模板",normalizedTitle:"数据模板",charIndex:509},{level:2,title:"自定义数据模板文件输出的数据文件的后缀",slug:"自定义数据模板文件输出的数据文件的后缀",normalizedTitle:"自定义数据模板文件输出的数据文件的后缀",charIndex:1198}],lastUpdated:"2/26/2022, 11:04:31 AM",lastUpdatedTimestamp:1645844671e3,headersStr:"介绍 自定义模板搜索路径 模块缓存机制 代码模板 模板环境变量 数据模板 自定义数据模板文件输出的数据文件的后缀",content:'# 自定义模板\n\n\n# 介绍\n\nluban使用scriban 模板引擎来生成代码，也使用这个模板来生成自定义的文本型数据文件。\n\n模板文件在 Luban.Servers/Templates目录下。\n\n\n# 自定义模板搜索路径\n\n尽管可以直接修改Luban.Server/Templates目录下的模板文件，但每次更新Luban.Server会覆盖自己的实现，不是很方便。 Luban.Server支持模板搜索路径， Luban.Server命令行参数" -t， --template_search_path path" 用于指定优先搜索路径。\n\n\n# 模块缓存机制\n\n为了优化性能，Luban.Server在运行时加载模板文件后，会保留模板缓存。在调试模板时，缓存机制导致不会重新加载模板文件，需要频繁重启，不太方便。可以通过参数 "--disable_cache" 禁用缓存。\n\n\n# 代码模板\n\n自定义代码模板示例暂时请参见 CustomTemplates。 生成脚本示例参见 脚本目录 下的 gen_template_xxxx.bat 文件。\n\n\n# 模板环境变量\n\n每个模板的默认提供的环境变量是不同的，代码和数据模板的环境变量不同，数据模板也分为convert模板（源数据格式到源数据格式的转换）和 data模板（源数据格式到导出格式的转换）。\n\n# 代码模板环境变量\n\n * x 类型定义。 对于enum是DefEnum，对于bean是DefBean，对于table是DefTable\n * assembly 当前定义集合。注意不是c#的dll assembly，而是当前你在配置中定义的所有类型信息的集合\n\n# convert 数据模板环境变量\n\n * table 所在的DefTable的类型定义。\n * data 当前记录的对应的DType数据\n * assembly 当前定义集合。\n\n# data 数据模板环境变量\n\n * table 所在的DefTable的类型定义。\n * datas 当前表的所有导出数据DType列表，即 List,DType 类型。\n * assembly 当前定义集合。\n\n\n# 数据模板\n\n当生成参数 --gen_types中包含 data_template时，为自定义数据模板模式，需要配合 --template_name <template_name> 来指定模板名(注意，模板名不要包含.tpl后缀)，在/config/data 目录下，寻找 <template_name>.tpl 文件。\n\n例如 "--gen_types data_template --template_name lua" 则会从搜索路径查找 config/data/lua.tpl 文件。\n\n示例模板文件在 CustomTemplates/data 下。\n\n\n# 自定义数据模板文件输出的数据文件的后缀\n\nluban会智能从 template_name 参数中猜测文件类型，默认给一个输出文件名。如果猜测失败，又没有指定 --data_file_extension 选项，则会报错。 像 lua2, lua,lua_test,my_lua_template 都会猜测为lua类型。',normalizedContent:'# 自定义模板\n\n\n# 介绍\n\nluban使用scriban 模板引擎来生成代码，也使用这个模板来生成自定义的文本型数据文件。\n\n模板文件在 luban.servers/templates目录下。\n\n\n# 自定义模板搜索路径\n\n尽管可以直接修改luban.server/templates目录下的模板文件，但每次更新luban.server会覆盖自己的实现，不是很方便。 luban.server支持模板搜索路径， luban.server命令行参数" -t， --template_search_path path" 用于指定优先搜索路径。\n\n\n# 模块缓存机制\n\n为了优化性能，luban.server在运行时加载模板文件后，会保留模板缓存。在调试模板时，缓存机制导致不会重新加载模板文件，需要频繁重启，不太方便。可以通过参数 "--disable_cache" 禁用缓存。\n\n\n# 代码模板\n\n自定义代码模板示例暂时请参见 customtemplates。 生成脚本示例参见 脚本目录 下的 gen_template_xxxx.bat 文件。\n\n\n# 模板环境变量\n\n每个模板的默认提供的环境变量是不同的，代码和数据模板的环境变量不同，数据模板也分为convert模板（源数据格式到源数据格式的转换）和 data模板（源数据格式到导出格式的转换）。\n\n# 代码模板环境变量\n\n * x 类型定义。 对于enum是defenum，对于bean是defbean，对于table是deftable\n * assembly 当前定义集合。注意不是c#的dll assembly，而是当前你在配置中定义的所有类型信息的集合\n\n# convert 数据模板环境变量\n\n * table 所在的deftable的类型定义。\n * data 当前记录的对应的dtype数据\n * assembly 当前定义集合。\n\n# data 数据模板环境变量\n\n * table 所在的deftable的类型定义。\n * datas 当前表的所有导出数据dtype列表，即 list,dtype 类型。\n * assembly 当前定义集合。\n\n\n# 数据模板\n\n当生成参数 --gen_types中包含 data_template时，为自定义数据模板模式，需要配合 --template_name <template_name> 来指定模板名(注意，模板名不要包含.tpl后缀)，在/config/data 目录下，寻找 <template_name>.tpl 文件。\n\n例如 "--gen_types data_template --template_name lua" 则会从搜索路径查找 config/data/lua.tpl 文件。\n\n示例模板文件在 customtemplates/data 下。\n\n\n# 自定义数据模板文件输出的数据文件的后缀\n\nluban会智能从 template_name 参数中猜测文件类型，默认给一个输出文件名。如果猜测失败，又没有指定 --data_file_extension 选项，则会报错。 像 lua2, lua,lua_test,my_lua_template 都会猜测为lua类型。',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/traits.html",relativePath:"traits.md",key:"v-258ba8c6",path:"/traits.html",headers:[{level:2,title:"完备的类型系统",slug:"完备的类型系统",normalizedTitle:"完备的类型系统",charIndex:9},{level:2,title:"支持增强的excel格式",slug:"支持增强的excel格式",normalizedTitle:"支持增强的excel格式",charIndex:661},{level:2,title:"多种原始文件格式支持",slug:"多种原始文件格式支持",normalizedTitle:"多种原始文件格式支持",charIndex:1608},{level:2,title:"多种导出数据格式支持",slug:"多种导出数据格式支持",normalizedTitle:"多种导出数据格式支持",charIndex:2270},{level:2,title:"支持表与字段级别分组",slug:"支持表与字段级别分组",normalizedTitle:"支持表与字段级别分组",charIndex:2467},{level:2,title:"支持数据标签",slug:"支持数据标签",normalizedTitle:"支持数据标签",charIndex:2545},{level:2,title:"强大的数据校验能力",slug:"强大的数据校验能力",normalizedTitle:"强大的数据校验能力",charIndex:2665},{level:2,title:"多种数据表模式",slug:"多种数据表模式",normalizedTitle:"多种数据表模式",charIndex:2914},{level:2,title:"本地化支持",slug:"本地化支持",normalizedTitle:"本地化支持",charIndex:2998},{level:2,title:"代码编辑器支持",slug:"代码编辑器支持",normalizedTitle:"代码编辑器支持",charIndex:3162},{level:2,title:"资源导出支持",slug:"资源导出支持",normalizedTitle:"资源导出支持",charIndex:3253},{level:2,title:"代码模块化",slug:"代码模块化",normalizedTitle:"代码模块化",charIndex:3319},{level:2,title:"生成极快，大型项目也能秒级导出",slug:"生成极快-大型项目也能秒级导出",normalizedTitle:"生成极快，大型项目也能秒级导出",charIndex:3435},{level:2,title:"数据模块化",slug:"数据模块化",normalizedTitle:"数据模块化",charIndex:3608},{level:2,title:"支持主流的游戏开发语言",slug:"支持主流的游戏开发语言",normalizedTitle:"支持主流的游戏开发语言",charIndex:3649},{level:2,title:"支持主流引擎和平台",slug:"支持主流引擎和平台",normalizedTitle:"支持主流引擎和平台",charIndex:3814}],lastUpdated:"12/20/2021, 6:14:18 PM",lastUpdatedTimestamp:1639995258e3,headersStr:"完备的类型系统 支持增强的excel格式 多种原始文件格式支持 多种导出数据格式支持 支持表与字段级别分组 支持数据标签 强大的数据校验能力 多种数据表模式 本地化支持 代码编辑器支持 资源导出支持 代码模块化 生成极快，大型项目也能秒级导出 数据模块化 支持主流的游戏开发语言 支持主流引擎和平台",content:'# 特性\n\n\n# 完备的类型系统\n\n * 基础内置类型\n   * bool,byte,short,fshort,int,fint,long,flong,float,double,string,text,bytes\n   * vector2, vector3,vector4\n   * datetime\n * 可空类型\n   * bool?,byte?,short?,fshort?,int?,fint?,long?,flong?,float?,double?\n   * vector2?,vector3?,vector4?\n   * datetime?\n   * <枚举>?\n   * < bean>?\n   * <多态bean>?\n * 自定义枚举 enum 及相应可空类型\n * 自定义常量 const\n * 自定义结构 bean\n * 多态bean\n\n支持定义无限层次的OOP类型继承体系(比如父类Shape，子类Circle,Rectangle)，在表达复杂配置时极为简洁，对程序和策划都比较友好。\n\n * 支持容器类型 array。 value 可以为内置类型，也可以为自定义类型\n * 支持容器类型 list。 value 可以为内置类型，也可以为自定义类型\n * 支持容器类型 set。 value 只能为内置类型或者enum类型，不支持 bean 类型\n * 支持容器类型 map。 key 只能为内置类型或者enum类型，不支持 bean 类型。 value 可以为内置类型，也可以为自定义类型\n\n\n# 支持增强的excel格式\n\n * 用 true,false表示 bool变量。\n * 用枚举名及别名表示枚举常量。比如用 白绿红之类表示品质，而不是1,2,3这样的magic number\n * 支持整数的常量替换。比如说 升级丹道具id 为 1122，所有填升级丹id的地方可以填 升级丹 来表示。减少填写错误\n * 支持可空变量. 用 null 表示空数据.\n * 支持 datetime 数据类型. 时间格式标准为以下几种，最终被转化为utc时间方便程序处理\n   * yyyy-MM-dd HH:mm:ss\n   * yyyy-MM-dd HH:mm\n   * yyyy-MM-dd HH\n   * yyyy-MM-dd\n * 支持用sep拆分单元格。在一个单元格里填写多个数据。\n * 支持多行数据。例如，章节配置里有一个复杂小节列表字段。支持多行填写这个列表数据。\n * 支持多级标题头,方便对应一些比较深的数据。比如 a.b.c 这种。\n * 支持多态别名，可以方便填写多态数据。比如说 Circle,5 或者 Rectangle,3,4\n * 支持在excel里比较简洁填写出任意复杂的配置。\n   * 支持结构列表。 比如 list,Equip (包含 int id, string name, float attr) 这样一个复杂结构列表数据，可以填成 1,abasfa,0.5|2,xxxyy;0.9。\n   * 支持多态结构。 比如 cfg.Shape 是一个多态类型,包含 Cirecle(float radius)和Rectagnle(float width, float size)。 可以填成 圆,5 或者 长方形,3,5。\n   * 支持无限层次的复杂结构的组合\n     * 比如 list,Convex(int id, Vector3[] vertexs) 是一个多边形列表, Convext自身包含一个顶点列表，可以配置成 1_1.2,2.3,3.4_3.1,3.2,3.3|2_2.2,2.3.3.3 。\n     * 比如 list,Shape 是一个形状列表。 可以这样配置 Circle,10;Rectange,5,6;Circle,4\n\n\n# 多种原始文件格式支持\n\n一个复杂项目中，总有一部分数据(10-20%)不适合excel编辑（比如技能、AI、副本等等），这些数据一般通过专用编辑器来编辑和导出。遇到的问题是这种配置数据是无法与excel数据统一处理的，造成游戏内有多种配置数据加载方案，程序需要花费很多时间去处理这些数据的加载问题。另外这些复杂数据无法使用数据检验和分组导出以及本地化等等excel导表工具的机制。Luban能够处理excel族、xml、json、lua、目录等多种数据源，统一导出数据和生成代码，所有数据源都能使用数据检验、分组导出等等机制，程序彻底从复杂配置处理中解脱出来。\n\n * 支持excel族文件。 csv 及 xls,xlsx等格式\n * 支持从指定excel里的某个单元薄读入。\n * 支持json。 每个json文件当作一个记录读入\n * 支持lua。 每个lua文件当作一个记录读入\n * 支持xml。 每个xml文件当作一个记录读入\n * 支持目录。 递归目录下的所有文件，每个文件当作一个记录读入。允许不同类型的文件混合，比如目录下可以同时有json,lua,xml,excel之类的格式。\n * 每个表允许指定多个数据源，可以使用以上所有的组合。\n   * 多对一。比如可以在一个excel里用不同页签配置不同的表。比如 装备升级表和进阶表都在 装备表.xlsx中\n   * 一对多。比如任务表可以来 任务1.xlsx，任务2.xlsx 等等多个表。\n   * 多对多。还可以是以上组合，不过实际中很少见）\n\n\n# 多种导出数据格式支持\n\n导出格式与原始数据解耦。无论源数据是 excel、lua、xml、json 或者它们的混合, 最终都被以统一的格式导出，极大简化了生成代码的复杂性。 目前支持以下几种导出格式：\n\n * binary格式。与pb格式类似。所占空间最小，加载最快。\n * json 格式。\n * lua 格式。\n * 扩展其他格式也很容易。（像前几种数据格式导出只用200行代码）\n\n\n# 支持表与字段级别分组\n\n支持自定义分组类型。既支持按分组选择性导出一部分表，也支持选择性导出表中的一部分字段。比如为前后端分别导出他们所用的数据。\n\n\n# 支持数据标签\n\n支持 是、否、test 三种标签。可以为每行数据加标签。比如标签为"否"表示这行数据不被导出。 如果为 "test"，则只在测试导出情况下才导出。比如内部开发时会配置一些测试数据，但对外发布时不希望导出它们的情形。\n\n\n# 强大的数据校验能力\n\n * 完整的数据内建约束检查\n * ref 检查。检查表引用合法性。比如 Monster表中的dropId必须是合法的 TbDrop表的key.\n * path 检查。检查资源引用合法性。比如 Monster表的icon必须是合法的图标资源。对于防止策划填错极其有用，不再需要运行时才发现资源配置错误了。\n * range 检查。检查数值范围。\n * 扩展的自定义检查。使用自定义代码进行高级检查。提交配置前就能完成本地检查，避免运行时才发现错误，极大减少迭代成本。\n\n\n# 多种数据表模式\n\n * one 格式，即单例表模式\n * map 格式，即普通key-value表模式。 任何符合set 的value要求的类型都可以做key\n\n\n# 本地化支持\n\n * 支持本地化时间。 配置中的 datetime会根据指定的timezone及localtime转化为正确的utc时间，方便程序处理\n * 支持静态本地化。 配置中的text类型在导出时已经转化为正确的本地化后的字符串\n * 支持动态本地化。 配置中的text类型能运行时全部切换为某种本地化后的字符串\n\n\n# 代码编辑器支持\n\n支持 emmylua anntations。生成的lua包含符合emmylua 格式anntations信息。配合emmylua有良好的配置代码提示能力。\n\n\n# 资源导出支持\n\n支持 res 资源标记。可以一键导出配置中引用的所有资源列表(icon,ui,assetbundle等等)\n\n\n# 代码模块化\n\n生成模块化的代码。比如\n\n * c# cfg.item.ItemInfo\n * c++ cfg::item::ItemInfo\n * lua item.ItemInfo\n * go item_ItemInfo\n\n\n# 生成极快，大型项目也能秒级导出\n\n使用 client/server模式，利用服务器强大的硬件(大内存+多线程)，同时配合缓存机制（如果数据和定义未修改，直接返回之前生成过的结果），即使到项目中后期数据规模比较大也能1秒（传统在10秒以上）左右生成所有数据并且完成数据校验。考虑策划和程序经常使用生成工具，积少成多，也能节省大量研发时间。\n\n\n# 数据模块化\n\n策划可以方便地按需求自己组织数据目录和结构，不影响逻辑表。\n\n\n# 支持主流的游戏开发语言\n\n * c++ (11+)\n * c# (.net framework 2+. dotnet core 2+)\n * java (1.6+)\n * go (1.10+)\n * lua (5.1+)\n * js 和 typescript (3.0+)\n * python (2.7+ 及 3.0+)\n\n\n# 支持主流引擎和平台\n\n * unity + c#\n * unity + tolua,xlua\n * unity + ILRuntime\n * unreal + c++\n * unreal + unlua\n * unreal + sluaunreal\n * unreal + puerts\n * cocos2d-x + lua\n * cocos2d-x + js\n * 微信小程序平台\n * 其他家基于js的小程序平台\n * 其他所有支持lua的引擎和平台\n * 其他所有支持js的引擎和平台',normalizedContent:'# 特性\n\n\n# 完备的类型系统\n\n * 基础内置类型\n   * bool,byte,short,fshort,int,fint,long,flong,float,double,string,text,bytes\n   * vector2, vector3,vector4\n   * datetime\n * 可空类型\n   * bool?,byte?,short?,fshort?,int?,fint?,long?,flong?,float?,double?\n   * vector2?,vector3?,vector4?\n   * datetime?\n   * <枚举>?\n   * < bean>?\n   * <多态bean>?\n * 自定义枚举 enum 及相应可空类型\n * 自定义常量 const\n * 自定义结构 bean\n * 多态bean\n\n支持定义无限层次的oop类型继承体系(比如父类shape，子类circle,rectangle)，在表达复杂配置时极为简洁，对程序和策划都比较友好。\n\n * 支持容器类型 array。 value 可以为内置类型，也可以为自定义类型\n * 支持容器类型 list。 value 可以为内置类型，也可以为自定义类型\n * 支持容器类型 set。 value 只能为内置类型或者enum类型，不支持 bean 类型\n * 支持容器类型 map。 key 只能为内置类型或者enum类型，不支持 bean 类型。 value 可以为内置类型，也可以为自定义类型\n\n\n# 支持增强的excel格式\n\n * 用 true,false表示 bool变量。\n * 用枚举名及别名表示枚举常量。比如用 白绿红之类表示品质，而不是1,2,3这样的magic number\n * 支持整数的常量替换。比如说 升级丹道具id 为 1122，所有填升级丹id的地方可以填 升级丹 来表示。减少填写错误\n * 支持可空变量. 用 null 表示空数据.\n * 支持 datetime 数据类型. 时间格式标准为以下几种，最终被转化为utc时间方便程序处理\n   * yyyy-mm-dd hh:mm:ss\n   * yyyy-mm-dd hh:mm\n   * yyyy-mm-dd hh\n   * yyyy-mm-dd\n * 支持用sep拆分单元格。在一个单元格里填写多个数据。\n * 支持多行数据。例如，章节配置里有一个复杂小节列表字段。支持多行填写这个列表数据。\n * 支持多级标题头,方便对应一些比较深的数据。比如 a.b.c 这种。\n * 支持多态别名，可以方便填写多态数据。比如说 circle,5 或者 rectangle,3,4\n * 支持在excel里比较简洁填写出任意复杂的配置。\n   * 支持结构列表。 比如 list,equip (包含 int id, string name, float attr) 这样一个复杂结构列表数据，可以填成 1,abasfa,0.5|2,xxxyy;0.9。\n   * 支持多态结构。 比如 cfg.shape 是一个多态类型,包含 cirecle(float radius)和rectagnle(float width, float size)。 可以填成 圆,5 或者 长方形,3,5。\n   * 支持无限层次的复杂结构的组合\n     * 比如 list,convex(int id, vector3[] vertexs) 是一个多边形列表, convext自身包含一个顶点列表，可以配置成 1_1.2,2.3,3.4_3.1,3.2,3.3|2_2.2,2.3.3.3 。\n     * 比如 list,shape 是一个形状列表。 可以这样配置 circle,10;rectange,5,6;circle,4\n\n\n# 多种原始文件格式支持\n\n一个复杂项目中，总有一部分数据(10-20%)不适合excel编辑（比如技能、ai、副本等等），这些数据一般通过专用编辑器来编辑和导出。遇到的问题是这种配置数据是无法与excel数据统一处理的，造成游戏内有多种配置数据加载方案，程序需要花费很多时间去处理这些数据的加载问题。另外这些复杂数据无法使用数据检验和分组导出以及本地化等等excel导表工具的机制。luban能够处理excel族、xml、json、lua、目录等多种数据源，统一导出数据和生成代码，所有数据源都能使用数据检验、分组导出等等机制，程序彻底从复杂配置处理中解脱出来。\n\n * 支持excel族文件。 csv 及 xls,xlsx等格式\n * 支持从指定excel里的某个单元薄读入。\n * 支持json。 每个json文件当作一个记录读入\n * 支持lua。 每个lua文件当作一个记录读入\n * 支持xml。 每个xml文件当作一个记录读入\n * 支持目录。 递归目录下的所有文件，每个文件当作一个记录读入。允许不同类型的文件混合，比如目录下可以同时有json,lua,xml,excel之类的格式。\n * 每个表允许指定多个数据源，可以使用以上所有的组合。\n   * 多对一。比如可以在一个excel里用不同页签配置不同的表。比如 装备升级表和进阶表都在 装备表.xlsx中\n   * 一对多。比如任务表可以来 任务1.xlsx，任务2.xlsx 等等多个表。\n   * 多对多。还可以是以上组合，不过实际中很少见）\n\n\n# 多种导出数据格式支持\n\n导出格式与原始数据解耦。无论源数据是 excel、lua、xml、json 或者它们的混合, 最终都被以统一的格式导出，极大简化了生成代码的复杂性。 目前支持以下几种导出格式：\n\n * binary格式。与pb格式类似。所占空间最小，加载最快。\n * json 格式。\n * lua 格式。\n * 扩展其他格式也很容易。（像前几种数据格式导出只用200行代码）\n\n\n# 支持表与字段级别分组\n\n支持自定义分组类型。既支持按分组选择性导出一部分表，也支持选择性导出表中的一部分字段。比如为前后端分别导出他们所用的数据。\n\n\n# 支持数据标签\n\n支持 是、否、test 三种标签。可以为每行数据加标签。比如标签为"否"表示这行数据不被导出。 如果为 "test"，则只在测试导出情况下才导出。比如内部开发时会配置一些测试数据，但对外发布时不希望导出它们的情形。\n\n\n# 强大的数据校验能力\n\n * 完整的数据内建约束检查\n * ref 检查。检查表引用合法性。比如 monster表中的dropid必须是合法的 tbdrop表的key.\n * path 检查。检查资源引用合法性。比如 monster表的icon必须是合法的图标资源。对于防止策划填错极其有用，不再需要运行时才发现资源配置错误了。\n * range 检查。检查数值范围。\n * 扩展的自定义检查。使用自定义代码进行高级检查。提交配置前就能完成本地检查，避免运行时才发现错误，极大减少迭代成本。\n\n\n# 多种数据表模式\n\n * one 格式，即单例表模式\n * map 格式，即普通key-value表模式。 任何符合set 的value要求的类型都可以做key\n\n\n# 本地化支持\n\n * 支持本地化时间。 配置中的 datetime会根据指定的timezone及localtime转化为正确的utc时间，方便程序处理\n * 支持静态本地化。 配置中的text类型在导出时已经转化为正确的本地化后的字符串\n * 支持动态本地化。 配置中的text类型能运行时全部切换为某种本地化后的字符串\n\n\n# 代码编辑器支持\n\n支持 emmylua anntations。生成的lua包含符合emmylua 格式anntations信息。配合emmylua有良好的配置代码提示能力。\n\n\n# 资源导出支持\n\n支持 res 资源标记。可以一键导出配置中引用的所有资源列表(icon,ui,assetbundle等等)\n\n\n# 代码模块化\n\n生成模块化的代码。比如\n\n * c# cfg.item.iteminfo\n * c++ cfg::item::iteminfo\n * lua item.iteminfo\n * go item_iteminfo\n\n\n# 生成极快，大型项目也能秒级导出\n\n使用 client/server模式，利用服务器强大的硬件(大内存+多线程)，同时配合缓存机制（如果数据和定义未修改，直接返回之前生成过的结果），即使到项目中后期数据规模比较大也能1秒（传统在10秒以上）左右生成所有数据并且完成数据校验。考虑策划和程序经常使用生成工具，积少成多，也能节省大量研发时间。\n\n\n# 数据模块化\n\n策划可以方便地按需求自己组织数据目录和结构，不影响逻辑表。\n\n\n# 支持主流的游戏开发语言\n\n * c++ (11+)\n * c# (.net framework 2+. dotnet core 2+)\n * java (1.6+)\n * go (1.10+)\n * lua (5.1+)\n * js 和 typescript (3.0+)\n * python (2.7+ 及 3.0+)\n\n\n# 支持主流引擎和平台\n\n * unity + c#\n * unity + tolua,xlua\n * unity + ilruntime\n * unreal + c++\n * unreal + unlua\n * unreal + sluaunreal\n * unreal + puerts\n * cocos2d-x + lua\n * cocos2d-x + js\n * 微信小程序平台\n * 其他家基于js的小程序平台\n * 其他所有支持lua的引擎和平台\n * 其他所有支持js的引擎和平台',charsets:{cjk:!0}},{title:"校验器",frontmatter:{},regularPath:"/validator.html",relativePath:"validator.md",key:"v-67a81464",path:"/validator.html",headers:[{level:2,title:"ref 校验器",slug:"ref-校验器",normalizedTitle:"ref 校验器",charIndex:10},{level:3,title:"格式",slug:"格式",normalizedTitle:"格式",charIndex:126},{level:3,title:"常规引用",slug:"常规引用",normalizedTitle:"常规引用",charIndex:378},{level:3,title:"忽略空白值引用",slug:"忽略空白值引用",normalizedTitle:"忽略空白值引用",charIndex:1517},{level:3,title:"可空变量的引用检查",slug:"可空变量的引用检查",normalizedTitle:"可空变量的引用检查",charIndex:1689},{level:3,title:"多表引用",slug:"多表引用",normalizedTitle:"多表引用",charIndex:1926},{level:3,title:"引用组",slug:"引用组",normalizedTitle:"引用组",charIndex:2145},{level:3,title:"代码生成中对ref的特殊处理",slug:"代码生成中对ref的特殊处理",normalizedTitle:"代码生成中对ref的特殊处理",charIndex:2470},{level:2,title:"path 校验器",slug:"path-校验器",normalizedTitle:"path 校验器",charIndex:4112},{level:3,title:"unity 校验器",slug:"unity-校验器",normalizedTitle:"unity 校验器",charIndex:4270},{level:3,title:"ue 校验器",slug:"ue-校验器",normalizedTitle:"ue 校验器",charIndex:4633},{level:3,title:"normal 检验器",slug:"normal-检验器",normalizedTitle:"normal 检验器",charIndex:5042},{level:2,title:"range 校验器",slug:"range-校验器",normalizedTitle:"range 校验器",charIndex:5430},{level:2,title:"size 校验器",slug:"size-校验器",normalizedTitle:"size 校验器",charIndex:6002},{level:2,title:"set 检验器",slug:"set-检验器",normalizedTitle:"set 检验器",charIndex:6292}],lastUpdated:"2/11/2022, 11:57:34 AM",lastUpdatedTimestamp:1644551854e3,headersStr:"ref 校验器 格式 常规引用 忽略空白值引用 可空变量的引用检查 多表引用 引用组 代码生成中对ref的特殊处理 path 校验器 unity 校验器 ue 校验器 normal 检验器 range 校验器 size 校验器 set 检验器",content:'# 校验器\n\n\n# ref 校验器\n\n检查某字段是否为某表的合法key，在游戏中非常常见，比如要求礼包表中item_id字段必须是合法的item.TbItem表的key。 ref可以用于任何可以当作key的数据类型上，也可以是容器的元素类型。\n\n\n# 格式\n\n根据被引用表的mode,引用格式略有区别\n\n * 普通 map表。 ref="table{?}" 。 由于map表只有一个主键，因此只需写上被引用的表全名即可。\n * list表。 ref="key@table{?}"。 由于list表有多个主键，因此需要用 key@table来表明是被引用的表的哪个主键。\n * 单例表。 ref="key@table{?}"。 由于单例表没有主键，因此需要用key@table来表明引用哪个字段。被引用字段必须为map类型，而且key类型必须匹配。\n\n\n# 常规引用\n\n假设 item.TbItem 是道具表, key字段类型为int；假设 ui.TbWidget为组件表，key字段类型为string。\n\n<bean name="TestRef">\n   <var name="x1" type="int#ref=item.TbItem"/> x1必须是item.TbItem表的合法id\n   <var name="x2" type="int" ref="item.TbItem"/> 等价于上一行，纯粹一个语法糖。注意，如果是容器类型，则只对value type生效。\n   <var name="x2" type="list,int#ref=item.TbItem"/> x2列表中每个元素都必须是合法id\n   <var name="x2_2" type="list,(int#ref=item.TbItem)"/> 为了清晰，加上括号限定\n   <var name="x3" type="map,int#ref=item.TbItem,int"/> x3的key必须是 item.TbItem合法id\n   <var name="x4" type="map,int,int#ref=item.TbItem"/> x4的value必须是 item.TbItem合法id\n   <var name="x5" type="map,int#ref=item.TbItem,int#item.TbItem"/> x5的key和value都必须是合法id\n   <var name="x5" type="map,(int#ref=item.TbItem),(int#item.TbItem)"/> 为了清晰，加上括号\n   \n   <var name="y1" type="string#ref=ui.TbWidget"/> y1 必须是 ui.TbWidget表的合法id\n   <var name="y2" tppe="list,string#ref=ui.TbWidget"/> y2列表中每个元素都必须是合法id\n   <var name="y3" type="map,string#ref=ui.TbWidget,int"/> y3 中 key必须是合法id\n\n   <var name="z1" type="map,(int#ref=item.TbItem),(string#ref=ui.TbWidget)"/> z1的key必须是item.TbItem合法id, value必须是ui.TbWidget合法id\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 忽略空白值引用\n\n有时候，需要字段值为0或者""时，忽略检查，使用 "ref=xxx?" 即可。如下：\n\n<bean name="TestEmptyRef">\n   <var name="x" type="int#ref=item.TbItem?"/> x 值不为0时，必须是合法id，为0时忽略检查\n</bean>\n\n\n1\n2\n3\n\n\n\n# 可空变量的引用检查\n\n对于可空变量，值为null时，忽略检查，如下：\n\n<bean name="TestNull">\n   <var name="x" type="int?#ref=item.TbItem"/>  当x!= null时，必须为合法id,为null忽略\n   <var name="y" type="int?#ref=item.TbItem?"/> 当x != null且x != 0时，必须为合法id,否则忽略\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# 多表引用\n\n有时候，希望id是必须在几个表中某个表存在，ref支持多个表引用，写法如下：\n\n<bean name="TestMultiRef">\n   <var name="x" type="int#(ref=item.TbItem,item.TbEquip)"/> \n   <var name="y" type="int" ref="item.TbItem,item.TbEquip"/>\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# 引用组\n\n如果很多字段都引用了相同的一组表。使用引用组会比较方便。\n\n<refgroup name="test_ref_group" ref="item.TbItem,item.TbEquip"/>\n\n<bean name="TestMultiRef">\n   <var name="x" type="int#ref=test_ref_group"/> \n   <var name="x2" type="int#ref=test_ref_group?"/> \n   <var name="x3" type="int#ref=test_ref_group,hero.TbHero"/> \n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 代码生成中对ref的特殊处理\n\n一些语言如 c#, typescript的生成代码中，如果某字段 xx 字段了ref，则为会它生成 xx_Ref 字段，类型为引用的表的记录类型， 在加载后会自动设置这个引用值，方便程序使用。注意，如果ref了多个表，则不会生成代码。\n\n示例c#代码如下\n\n    public int X1 { get; private set; }\n    public test.TestBeRef X1_Ref { get; private set; }\n    public int X12 { get; private set; }\n    public int X2 { get; private set; }\n    public int X3 { get; private set; }\n    public int[] A1 { get; private set; }\n    public test.TestBeRef[] A1_Ref { get; private set; }\n    public int[] A2 { get; private set; }\n    public test.TestBeRef[] A2_Ref { get; private set; }\n    public System.Collections.Generic.List<int> B1 { get; private set; }\n    public System.Collections.Generic.List<test.TestBeRef> B1_Ref { get; private set; }\n    public System.Collections.Generic.List<int> B2 { get; private set; }\n    public System.Collections.Generic.List<test.TestBeRef> B2_Ref { get; private set; }\n    public System.Collections.Generic.HashSet<int> C1 { get; private set; }\n    public System.Collections.Generic.HashSet<test.TestBeRef> C1_Ref { get; private set; }\n    public System.Collections.Generic.HashSet<int> C2 { get; private set; }\n    public System.Collections.Generic.HashSet<test.TestBeRef> C2_Ref { get; private set; }\n    public System.Collections.Generic.Dictionary<int, int> D1 { get; private set; }\n    public System.Collections.Generic.Dictionary<int, test.TestBeRef> D1_Ref { get; private set; }\n    public System.Collections.Generic.Dictionary<int, int> D2 { get; private set; }\n    public System.Collections.Generic.Dictionary<int, test.TestBeRef> D2_Ref { get; private set; }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# path 校验器\n\n与ref的定义方法相似，但path只能作用于string类型数据。path校验器有几种子类型，参数有细微不同。path校验器的工作原理为根据字段值，产生一个路径， 然后再检查这个路径是否存在，因此使用path检验器要求设置 --validate_root_dir 参数指定路径的根目录。\n\n\n# unity 校验器\n\n检查 --validate_root_dir 选项指定的目录下，是否有对应的文件。\n\n一个典型的使用场景是与与unity引擎的Addressable配合工作,将 --validate_root_dir 指向项目的Assets目录，将资源路径值\n\n<bean name="TestPath">\n  <var name="x" type="string#path=unity"/> 检查 完整路径 ${validate_root_dir}/${x} 对应的文件是否存在\n  <var name="x2" type="list,string#path=unity"/> 检查x2的每个元素e ${validate_root_dir}/${e} 对应的文件是否存在\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# ue 校验器\n\n检查是否有字段同名的资源，特别针对UE4的资源系统优化，--validate_root_dir必须指向项目的Content目录。 与unity不同，unity中的资源值必须包含文件后缀，ue中不包含文件后缀，ue检验器，会自动检查${x}.uasset 或者 ${x}.umap 对应的资源是否存在。 如果资源值中还带有前缀如 "blueprint\'/character/Mouse"，则会自动剔除 blueprint前缀后再去查找相应的资源。\n\n<bean name="TestPath">\n  <var name="x" type="string#path=ue"/> 检查 ${x} 对应的资源是否存在\n  <var name="x2" type="list,string#path=ue"/> 检查x2的每个元素e ，${e} 对应的资源是否存在\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# normal 检验器\n\nnormal检验器需要参数，格式为 path=normal;<pattern>。 pattern中出现的*会被字段值替换，形成最终值，再检查validate_root_dir目录下是否存在相应文件。\n\n<bean name="TestPath">\n  <var name="x" type="string#path=normal;UI/*.text"/> 检查 完整路径 ${validate_root_dir}/UI/${x}.text 对应的资源是否存在\n  <var name="x2" type="list,string#path=Prefabs/*.prefab"/> 检查x2的每个元素e ，${validate_root_dir}/Prefabs/${e}.prefab 对应的资源是否存在\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# range 校验器\n\n检查数据范围，支持开、闭区间，以及半开，半闭区间，示例如下\n\n<bean name="TestRange">\n  <var name="x1" type="int#range=[1,10]"/>  x1必须在 [1,10]之间\n  <var name="x2" type="int#range=(1,10)"/> 必须在 (1,10]之间，注意左开区间，不包含1\n  <var name="x3" type="int#range=[1,10)"/> 必须在 [1,10)之间，注意右开区间，不包含10\n  <var name="x4" type="int#range=(1,10]"/>\n  <var name="x5" type="int#range=[1,]"/> 必须 [1,无穷]\n  <var name="x6" type="int#range=[,100]"/> 必须 [-无穷,100] 之间\n  <var name="x7" type="int#range=(1,)"/> 必须 (1,无穷], 不包含1\n  <var name="x8" type="int#range=(,100)"/> 必须 (-无穷,100)， 不包含100\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# size 校验器\n\n只能作用于容器，用于检查容器元素个数是否符合要求。由于size作用器，作用于容器类型本身，定义时必须 (容器类型#size=xx),元素类型， 而不能 容器类型,元素类型#size=xxx，这会导致 size作用于元素数据上而出错！\n\n<bean name="TestSize">\n  <var name="x" type="(list#size=4),int"/> 要求x元素个数必须为4\n  <var name="y" type="(map#size=10),int,int"/> 要求y的元素个数必须为10\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# set 检验器\n\n检查值是否在指定的集合内，目前支持int,long,string,enum类型，相应的容器类型也可以，如 list,int; map,int,string。\n\n语法为 set=xx1{sep}xx2 ... 。 其中sep可以是,或者;。 推荐用分号\';\'，比较不容易出错。\n\n<bean name="TestSet">\n    <var name="id" type="int"/>\n    <var name="a1" type="int#(set=1,2,3)"/> 可以用\',\'分割，但必须用()将set定义包围起来，不然\'int#set=1\'会被识别为容器，导致解析出错\n    <var name="a2" type="long#set=2;3"/>\n    <var name="a3" type="string#(set=ab,cd)"/>\n    <var name="a4" type="DemoEnum#set=B;C"/>\n\n    <var name="x1" type="list,int#set=1,2,3,4,5"/>\n    <var name="x2" type="list,long#set=2,3,4,5"/>\n    <var name="x3" type="list,string#set=ab,cd"/>\n    <var name="x4" type="list,DemoEnum#set=A,B"/>\n    <var name="x5" type="map,(int#set=1,2,3),(string#set=ab,cd)"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',normalizedContent:'# 校验器\n\n\n# ref 校验器\n\n检查某字段是否为某表的合法key，在游戏中非常常见，比如要求礼包表中item_id字段必须是合法的item.tbitem表的key。 ref可以用于任何可以当作key的数据类型上，也可以是容器的元素类型。\n\n\n# 格式\n\n根据被引用表的mode,引用格式略有区别\n\n * 普通 map表。 ref="table{?}" 。 由于map表只有一个主键，因此只需写上被引用的表全名即可。\n * list表。 ref="key@table{?}"。 由于list表有多个主键，因此需要用 key@table来表明是被引用的表的哪个主键。\n * 单例表。 ref="key@table{?}"。 由于单例表没有主键，因此需要用key@table来表明引用哪个字段。被引用字段必须为map类型，而且key类型必须匹配。\n\n\n# 常规引用\n\n假设 item.tbitem 是道具表, key字段类型为int；假设 ui.tbwidget为组件表，key字段类型为string。\n\n<bean name="testref">\n   <var name="x1" type="int#ref=item.tbitem"/> x1必须是item.tbitem表的合法id\n   <var name="x2" type="int" ref="item.tbitem"/> 等价于上一行，纯粹一个语法糖。注意，如果是容器类型，则只对value type生效。\n   <var name="x2" type="list,int#ref=item.tbitem"/> x2列表中每个元素都必须是合法id\n   <var name="x2_2" type="list,(int#ref=item.tbitem)"/> 为了清晰，加上括号限定\n   <var name="x3" type="map,int#ref=item.tbitem,int"/> x3的key必须是 item.tbitem合法id\n   <var name="x4" type="map,int,int#ref=item.tbitem"/> x4的value必须是 item.tbitem合法id\n   <var name="x5" type="map,int#ref=item.tbitem,int#item.tbitem"/> x5的key和value都必须是合法id\n   <var name="x5" type="map,(int#ref=item.tbitem),(int#item.tbitem)"/> 为了清晰，加上括号\n   \n   <var name="y1" type="string#ref=ui.tbwidget"/> y1 必须是 ui.tbwidget表的合法id\n   <var name="y2" tppe="list,string#ref=ui.tbwidget"/> y2列表中每个元素都必须是合法id\n   <var name="y3" type="map,string#ref=ui.tbwidget,int"/> y3 中 key必须是合法id\n\n   <var name="z1" type="map,(int#ref=item.tbitem),(string#ref=ui.tbwidget)"/> z1的key必须是item.tbitem合法id, value必须是ui.tbwidget合法id\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 忽略空白值引用\n\n有时候，需要字段值为0或者""时，忽略检查，使用 "ref=xxx?" 即可。如下：\n\n<bean name="testemptyref">\n   <var name="x" type="int#ref=item.tbitem?"/> x 值不为0时，必须是合法id，为0时忽略检查\n</bean>\n\n\n1\n2\n3\n\n\n\n# 可空变量的引用检查\n\n对于可空变量，值为null时，忽略检查，如下：\n\n<bean name="testnull">\n   <var name="x" type="int?#ref=item.tbitem"/>  当x!= null时，必须为合法id,为null忽略\n   <var name="y" type="int?#ref=item.tbitem?"/> 当x != null且x != 0时，必须为合法id,否则忽略\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# 多表引用\n\n有时候，希望id是必须在几个表中某个表存在，ref支持多个表引用，写法如下：\n\n<bean name="testmultiref">\n   <var name="x" type="int#(ref=item.tbitem,item.tbequip)"/> \n   <var name="y" type="int" ref="item.tbitem,item.tbequip"/>\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# 引用组\n\n如果很多字段都引用了相同的一组表。使用引用组会比较方便。\n\n<refgroup name="test_ref_group" ref="item.tbitem,item.tbequip"/>\n\n<bean name="testmultiref">\n   <var name="x" type="int#ref=test_ref_group"/> \n   <var name="x2" type="int#ref=test_ref_group?"/> \n   <var name="x3" type="int#ref=test_ref_group,hero.tbhero"/> \n</bean>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 代码生成中对ref的特殊处理\n\n一些语言如 c#, typescript的生成代码中，如果某字段 xx 字段了ref，则为会它生成 xx_ref 字段，类型为引用的表的记录类型， 在加载后会自动设置这个引用值，方便程序使用。注意，如果ref了多个表，则不会生成代码。\n\n示例c#代码如下\n\n    public int x1 { get; private set; }\n    public test.testberef x1_ref { get; private set; }\n    public int x12 { get; private set; }\n    public int x2 { get; private set; }\n    public int x3 { get; private set; }\n    public int[] a1 { get; private set; }\n    public test.testberef[] a1_ref { get; private set; }\n    public int[] a2 { get; private set; }\n    public test.testberef[] a2_ref { get; private set; }\n    public system.collections.generic.list<int> b1 { get; private set; }\n    public system.collections.generic.list<test.testberef> b1_ref { get; private set; }\n    public system.collections.generic.list<int> b2 { get; private set; }\n    public system.collections.generic.list<test.testberef> b2_ref { get; private set; }\n    public system.collections.generic.hashset<int> c1 { get; private set; }\n    public system.collections.generic.hashset<test.testberef> c1_ref { get; private set; }\n    public system.collections.generic.hashset<int> c2 { get; private set; }\n    public system.collections.generic.hashset<test.testberef> c2_ref { get; private set; }\n    public system.collections.generic.dictionary<int, int> d1 { get; private set; }\n    public system.collections.generic.dictionary<int, test.testberef> d1_ref { get; private set; }\n    public system.collections.generic.dictionary<int, int> d2 { get; private set; }\n    public system.collections.generic.dictionary<int, test.testberef> d2_ref { get; private set; }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# path 校验器\n\n与ref的定义方法相似，但path只能作用于string类型数据。path校验器有几种子类型，参数有细微不同。path校验器的工作原理为根据字段值，产生一个路径， 然后再检查这个路径是否存在，因此使用path检验器要求设置 --validate_root_dir 参数指定路径的根目录。\n\n\n# unity 校验器\n\n检查 --validate_root_dir 选项指定的目录下，是否有对应的文件。\n\n一个典型的使用场景是与与unity引擎的addressable配合工作,将 --validate_root_dir 指向项目的assets目录，将资源路径值\n\n<bean name="testpath">\n  <var name="x" type="string#path=unity"/> 检查 完整路径 ${validate_root_dir}/${x} 对应的文件是否存在\n  <var name="x2" type="list,string#path=unity"/> 检查x2的每个元素e ${validate_root_dir}/${e} 对应的文件是否存在\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# ue 校验器\n\n检查是否有字段同名的资源，特别针对ue4的资源系统优化，--validate_root_dir必须指向项目的content目录。 与unity不同，unity中的资源值必须包含文件后缀，ue中不包含文件后缀，ue检验器，会自动检查${x}.uasset 或者 ${x}.umap 对应的资源是否存在。 如果资源值中还带有前缀如 "blueprint\'/character/mouse"，则会自动剔除 blueprint前缀后再去查找相应的资源。\n\n<bean name="testpath">\n  <var name="x" type="string#path=ue"/> 检查 ${x} 对应的资源是否存在\n  <var name="x2" type="list,string#path=ue"/> 检查x2的每个元素e ，${e} 对应的资源是否存在\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# normal 检验器\n\nnormal检验器需要参数，格式为 path=normal;<pattern>。 pattern中出现的*会被字段值替换，形成最终值，再检查validate_root_dir目录下是否存在相应文件。\n\n<bean name="testpath">\n  <var name="x" type="string#path=normal;ui/*.text"/> 检查 完整路径 ${validate_root_dir}/ui/${x}.text 对应的资源是否存在\n  <var name="x2" type="list,string#path=prefabs/*.prefab"/> 检查x2的每个元素e ，${validate_root_dir}/prefabs/${e}.prefab 对应的资源是否存在\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# range 校验器\n\n检查数据范围，支持开、闭区间，以及半开，半闭区间，示例如下\n\n<bean name="testrange">\n  <var name="x1" type="int#range=[1,10]"/>  x1必须在 [1,10]之间\n  <var name="x2" type="int#range=(1,10)"/> 必须在 (1,10]之间，注意左开区间，不包含1\n  <var name="x3" type="int#range=[1,10)"/> 必须在 [1,10)之间，注意右开区间，不包含10\n  <var name="x4" type="int#range=(1,10]"/>\n  <var name="x5" type="int#range=[1,]"/> 必须 [1,无穷]\n  <var name="x6" type="int#range=[,100]"/> 必须 [-无穷,100] 之间\n  <var name="x7" type="int#range=(1,)"/> 必须 (1,无穷], 不包含1\n  <var name="x8" type="int#range=(,100)"/> 必须 (-无穷,100)， 不包含100\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# size 校验器\n\n只能作用于容器，用于检查容器元素个数是否符合要求。由于size作用器，作用于容器类型本身，定义时必须 (容器类型#size=xx),元素类型， 而不能 容器类型,元素类型#size=xxx，这会导致 size作用于元素数据上而出错！\n\n<bean name="testsize">\n  <var name="x" type="(list#size=4),int"/> 要求x元素个数必须为4\n  <var name="y" type="(map#size=10),int,int"/> 要求y的元素个数必须为10\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# set 检验器\n\n检查值是否在指定的集合内，目前支持int,long,string,enum类型，相应的容器类型也可以，如 list,int; map,int,string。\n\n语法为 set=xx1{sep}xx2 ... 。 其中sep可以是,或者;。 推荐用分号\';\'，比较不容易出错。\n\n<bean name="testset">\n    <var name="id" type="int"/>\n    <var name="a1" type="int#(set=1,2,3)"/> 可以用\',\'分割，但必须用()将set定义包围起来，不然\'int#set=1\'会被识别为容器，导致解析出错\n    <var name="a2" type="long#set=2;3"/>\n    <var name="a3" type="string#(set=ab,cd)"/>\n    <var name="a4" type="demoenum#set=b;c"/>\n\n    <var name="x1" type="list,int#set=1,2,3,4,5"/>\n    <var name="x2" type="list,long#set=2,3,4,5"/>\n    <var name="x3" type="list,string#set=ab,cd"/>\n    <var name="x4" type="list,demoenum#set=a,b"/>\n    <var name="x5" type="map,(int#set=1,2,3),(string#set=ab,cd)"/>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',charsets:{cjk:!0}}],themeConfig:{lastUpdated:"Last Updated",nav:[{text:"Github",link:"https://github.com/focus-creative-games/luban"}],sidebar:[["Home","Home"],["start_up","快速上手"],["best_practices","最佳实践"],["feature","完整特性"],["FAQ","FAQ"],["command_tools","luban命令行工具"],["editor","Editor支持"],["define","配置定义"],["excel","excel格式介绍"],["excel_sep","excel sep使用介绍"],["dynamic_bean","多态配置使用介绍"],["validator","数据校验器"],["generate_code_data","代码与数据生成"],["load_config_at_runtime","项目中加载与使用配置"],["template","自定义代码与数据模板"],["tag","记录tag与过滤导出"],["data_json","json数据源"],["data_xml","xml数据源"],["data_yaml","yaml数据源"],["l10n","本地化"],["excel2textdiff","Excel2TextDiff工具"],["luban_assistant","LubanAssistant Excel插件"],["changelog","更新日志"]],sidebarDepth:2}};t(331);Lr.component("Badge",(function(){return Promise.all([t.e(0),t.e(3)]).then(t.bind(null,443))})),Lr.component("CodeBlock",(function(){return Promise.all([t.e(0),t.e(4)]).then(t.bind(null,409))})),Lr.component("CodeGroup",(function(){return Promise.all([t.e(0),t.e(5)]).then(t.bind(null,410))}));t(332);var ml=[{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{}],fl=[];function vl(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(119);function yl(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}function bl(n,e,t){return e&&yl(n.prototype,e),t&&yl(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}t(189);t(177);function hl(n,e){return(hl=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}t(178),t(179);function xl(n){return(xl=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var _l=t(185),gl=t.n(_l);function jl(n,e){if(e&&("object"===gl()(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function Tl(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,a=xl(n);if(e){var r=xl(this).constructor;t=Reflect.construct(a,arguments,r)}else t=a.apply(this,arguments);return jl(this,t)}}var kl=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");Object.defineProperty(n,"prototype",{value:Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),writable:!1}),e&&hl(n,e)}(t,n);var e=Tl(t);function t(){return vl(this,t),e.apply(this,arguments)}return bl(t)}(function(){function n(){vl(this,n),this.store=new Lr({data:{state:{}}})}return bl(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){Lr.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(kl.prototype,{getPageAsyncComponent:Fo,getLayoutAsyncComponent:Bo,getAsyncComponent:Go,getVueComponent:Vo});var wl={install:function(n){var e=new kl;n.$vuepress=e,n.prototype.$vuepress=e}};t(111);function Il(n){n.beforeEach((function(e,t,a){if(Cl(n,e.path))a();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var r=e.path.replace(/\/$/,"")+".html";Cl(n,r)?a(r):a()}else a();else{var i=e.path+"/",o=e.path+".html";Cl(n,o)?a(o):Cl(n,i)?a(i):a()}}))}function Cl(n,e){var t=e.toLowerCase();return n.options.routes.some((function(n){return n.path.toLowerCase()===t}))}var El={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return Wo("pageKey",e),Lr.component(e)||Lr.component(e,Fo(e)),Lr.component(e)?n(e):n("")}},Sl={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,a=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},a()[t.slotKey])}},zl={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Al=(t(334),t(335),Object(cl.a)(zl,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Ol(){return(Ol=Object(a.a)(regeneratorRuntime.mark((function n(e){var t,a,r,i;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:dl.routerBase||dl.base,Il(a=new ko({base:t,mode:"history",fallback:!1,routes:pl,scrollBehavior:function(n,e,t){return t||(n.hash?!Lr.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),r={},n.prev=4,n.next=7,Promise.all(ml.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:Lr,options:r,router:a,siteData:dl,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return i=new Lr(Object.assign(r,{router:a,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},fl.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:i,router:a});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}Lr.config.productionTip=!1,Lr.use(ko),Lr.use(wl),Lr.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Lr;wo(e),t.$vuepress.$set("siteData",e);var a=n(t.$vuepress.$get("siteData")),r=new a,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),o={};return Object.keys(i).reduce((function(n,e){return e.startsWith("$")&&(n[e]=i[e].get),n}),o),{computed:o}}((function(n){return function(){function e(){vl(this,e)}return bl(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,a=void 0===t?{}:t;for(var r in a)"/"===r?e=a[r]:0===this.$page.path.indexOf(r)&&(n=a[r]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,a=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?a?a+" | "+t:t:a||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var a=n[t];if(a.path.toLowerCase()===e.toLowerCase())return a}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),dl)),Lr.component("Content",El),Lr.component("ContentSlotsDistributor",Sl),Lr.component("OutboundLink",Al),Lr.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,a=e.children;if(t._isMounted)return a;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),Lr.component("Layout",Bo("Layout")),Lr.component("NotFound",Bo("NotFound")),Lr.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.7",hash:""},function(n){return Ol.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);